
ArduinoUnoFreertos_6_1(2).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e2  00800100  000017fc  00001890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000064c  008001e2  008001e2  00001972  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001972  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000019a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000398  00000000  00000000  000019e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000046b9  00000000  00000000  00001d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000122b  00000000  00000000  00006435  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002906  00000000  00000000  00007660  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b20  00000000  00000000  00009f68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000016a8  00000000  00000000  0000aa88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004418  00000000  00000000  0000c130  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003a8  00000000  00000000  00010548  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 76 0b 	jmp	0x16ec	; 0x16ec <__vector_1>
       8:	0c 94 a3 0b 	jmp	0x1746	; 0x1746 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec ef       	ldi	r30, 0xFC	; 252
      7c:	f7 e1       	ldi	r31, 0x17	; 23
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a2 3e       	cpi	r26, 0xE2	; 226
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	28 e0       	ldi	r18, 0x08	; 8
      8c:	a2 ee       	ldi	r26, 0xE2	; 226
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ae 32       	cpi	r26, 0x2E	; 46
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <main>
      9e:	0c 94 fc 0b 	jmp	0x17f8	; 0x17f8 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <vReceiverTask>:
  }
}


static void vReceiverTask( void *pvParameters )
{
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	00 d0       	rcall	.+0      	; 0xac <vReceiverTask+0x6>
      ac:	00 d0       	rcall	.+0      	; 0xae <vReceiverTask+0x8>
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
/* Declare the variable that will hold the values received from the queue. */
    char * lReceivedValue;
    BaseType_t xStatus;
    const TickType_t xTicksToWait = pdMS_TO_TICKS( 99UL );
   	TickType_t xLastWakeTime = xTaskGetTickCount();
      b2:	0e 94 a9 07 	call	0xf52	; 0xf52 <xTaskGetTickCount>
      b6:	9c 83       	std	Y+4, r25	; 0x04
      b8:	8b 83       	std	Y+3, r24	; 0x03
	for( ;; )
	{
		if( uxQueueMessagesWaiting( xQueue ) != 0 )
      ba:	80 91 2c 08 	lds	r24, 0x082C	; 0x80082c <xQueue>
      be:	90 91 2d 08 	lds	r25, 0x082D	; 0x80082d <xQueue+0x1>
      c2:	0e 94 08 06 	call	0xc10	; 0xc10 <uxQueueMessagesWaiting>
      c6:	88 23       	and	r24, r24
      c8:	21 f0       	breq	.+8      	; 0xd2 <vReceiverTask+0x2c>
			USART_sendstr("Queue should have been empty!\r\n");
      ca:	8e e0       	ldi	r24, 0x0E	; 14
      cc:	91 e0       	ldi	r25, 0x01	; 1
      ce:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <USART_sendstr>
			
		xStatus = xQueueReceive( xQueue, &lReceivedValue, xTicksToWait );
      d2:	20 e0       	ldi	r18, 0x00	; 0
      d4:	41 e2       	ldi	r20, 0x21	; 33
      d6:	50 e0       	ldi	r21, 0x00	; 0
      d8:	be 01       	movw	r22, r28
      da:	6f 5f       	subi	r22, 0xFF	; 255
      dc:	7f 4f       	sbci	r23, 0xFF	; 255
      de:	80 91 2c 08 	lds	r24, 0x082C	; 0x80082c <xQueue>
      e2:	90 91 2d 08 	lds	r25, 0x082D	; 0x80082d <xQueue+0x1>
      e6:	0e 94 45 05 	call	0xa8a	; 0xa8a <xQueueGenericReceive>
		if( xStatus == pdPASS )
      ea:	81 30       	cpi	r24, 0x01	; 1
      ec:	69 f4       	brne	.+26     	; 0x108 <vReceiverTask+0x62>
		{
			USART_sendstr("Received= system runs ");
      ee:	8e e2       	ldi	r24, 0x2E	; 46
      f0:	91 e0       	ldi	r25, 0x01	; 1
      f2:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <USART_sendstr>
			USART_sendstr(lReceivedValue);
      f6:	89 81       	ldd	r24, Y+1	; 0x01
      f8:	9a 81       	ldd	r25, Y+2	; 0x02
      fa:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <USART_sendstr>
			USART_sendstr( "\r\n");
      fe:	8b e2       	ldi	r24, 0x2B	; 43
     100:	91 e0       	ldi	r25, 0x01	; 1
     102:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <USART_sendstr>
     106:	04 c0       	rjmp	.+8      	; 0x110 <vReceiverTask+0x6a>
		}
		else
			USART_sendstr("Could not receive from the queue.\r\n" );
     108:	85 e4       	ldi	r24, 0x45	; 69
     10a:	91 e0       	ldi	r25, 0x01	; 1
     10c:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <USART_sendstr>
		
		vTaskDelayUntil(&xLastWakeTime, (1000 / portTICK_PERIOD_MS));
     110:	68 ee       	ldi	r22, 0xE8	; 232
     112:	73 e0       	ldi	r23, 0x03	; 3
     114:	ce 01       	movw	r24, r28
     116:	03 96       	adiw	r24, 0x03	; 3
     118:	0e 94 f7 08 	call	0x11ee	; 0x11ee <vTaskDelayUntil>
	}
     11c:	ce cf       	rjmp	.-100    	; 0xba <vReceiverTask+0x14>

0000011e <vGetNextTrack>:
	
}


static void vGetNextTrack()
{
     11e:	cf 93       	push	r28
     120:	df 93       	push	r29
     122:	00 d0       	rcall	.+0      	; 0x124 <vGetNextTrack+0x6>
     124:	cd b7       	in	r28, 0x3d	; 61
     126:	de b7       	in	r29, 0x3e	; 62
  char *lValueToSend = NULL;
     128:	1a 82       	std	Y+2, r1	; 0x02
     12a:	19 82       	std	Y+1, r1	; 0x01
  BaseType_t xStatus;
  
  if(xTaskGetTickCountFromISR() - lastInterrupt > 500) // we set a 10ms no-interrupts window
     12c:	0e 94 b3 07 	call	0xf66	; 0xf66 <xTaskGetTickCountFromISR>
     130:	40 91 28 08 	lds	r20, 0x0828	; 0x800828 <lastInterrupt>
     134:	50 91 29 08 	lds	r21, 0x0829	; 0x800829 <lastInterrupt+0x1>
     138:	60 91 2a 08 	lds	r22, 0x082A	; 0x80082a <lastInterrupt+0x2>
     13c:	70 91 2b 08 	lds	r23, 0x082B	; 0x80082b <lastInterrupt+0x3>
     140:	a0 e0       	ldi	r26, 0x00	; 0
     142:	b0 e0       	ldi	r27, 0x00	; 0
     144:	84 1b       	sub	r24, r20
     146:	95 0b       	sbc	r25, r21
     148:	a6 0b       	sbc	r26, r22
     14a:	b7 0b       	sbc	r27, r23
     14c:	85 3f       	cpi	r24, 0xF5	; 245
     14e:	91 40       	sbci	r25, 0x01	; 1
     150:	a1 05       	cpc	r26, r1
     152:	b1 05       	cpc	r27, r1
     154:	08 f4       	brcc	.+2      	; 0x158 <vGetNextTrack+0x3a>
     156:	48 c0       	rjmp	.+144    	; 0x1e8 <vGetNextTrack+0xca>
  {
	// todo #2
 	// 1. set lValueToSend to the right track
	  lValueToSend = (char *)playList[playListIndex];
     158:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <__data_end>
     15c:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <__data_end+0x1>
     160:	ee 0f       	add	r30, r30
     162:	ff 1f       	adc	r31, r31
     164:	e0 50       	subi	r30, 0x00	; 0
     166:	ff 4f       	sbci	r31, 0xFF	; 255
     168:	80 81       	ld	r24, Z
     16a:	91 81       	ldd	r25, Z+1	; 0x01
     16c:	9a 83       	std	Y+2, r25	; 0x02
     16e:	89 83       	std	Y+1, r24	; 0x01
 	// 2. send lValueToSend to Queue using appropriate methods 'suffix by FromISR'
	 lastInterrupt = xQueueSendFromISR(xQueue, &lValueToSend, 0);
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	40 e0       	ldi	r20, 0x00	; 0
     174:	50 e0       	ldi	r21, 0x00	; 0
     176:	be 01       	movw	r22, r28
     178:	6f 5f       	subi	r22, 0xFF	; 255
     17a:	7f 4f       	sbci	r23, 0xFF	; 255
     17c:	80 91 2c 08 	lds	r24, 0x082C	; 0x80082c <xQueue>
     180:	90 91 2d 08 	lds	r25, 0x082D	; 0x80082d <xQueue+0x1>
     184:	0e 94 0d 05 	call	0xa1a	; 0xa1a <xQueueGenericSendFromISR>
     188:	08 2e       	mov	r0, r24
     18a:	00 0c       	add	r0, r0
     18c:	99 0b       	sbc	r25, r25
     18e:	aa 0b       	sbc	r26, r26
     190:	bb 0b       	sbc	r27, r27
     192:	80 93 28 08 	sts	0x0828, r24	; 0x800828 <lastInterrupt>
     196:	90 93 29 08 	sts	0x0829, r25	; 0x800829 <lastInterrupt+0x1>
     19a:	a0 93 2a 08 	sts	0x082A, r26	; 0x80082a <lastInterrupt+0x2>
     19e:	b0 93 2b 08 	sts	0x082B, r27	; 0x80082b <lastInterrupt+0x3>
    if( xStatus != pdPASS )
      USART_sendstr("Could not send to the queue.");
     1a2:	89 e6       	ldi	r24, 0x69	; 105
     1a4:	91 e0       	ldi	r25, 0x01	; 1
     1a6:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <USART_sendstr>
	 		
    lastInterrupt = xTaskGetTickCountFromISR();
     1aa:	0e 94 b3 07 	call	0xf66	; 0xf66 <xTaskGetTickCountFromISR>
     1ae:	a0 e0       	ldi	r26, 0x00	; 0
     1b0:	b0 e0       	ldi	r27, 0x00	; 0
     1b2:	80 93 28 08 	sts	0x0828, r24	; 0x800828 <lastInterrupt>
     1b6:	90 93 29 08 	sts	0x0829, r25	; 0x800829 <lastInterrupt+0x1>
     1ba:	a0 93 2a 08 	sts	0x082A, r26	; 0x80082a <lastInterrupt+0x2>
     1be:	b0 93 2b 08 	sts	0x082B, r27	; 0x80082b <lastInterrupt+0x3>
	
    playListIndex++;
     1c2:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <__data_end>
     1c6:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <__data_end+0x1>
     1ca:	01 96       	adiw	r24, 0x01	; 1
     1cc:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <__data_end+0x1>
     1d0:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <__data_end>
	if(playListIndex >= TrackSize)
     1d4:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <__data_end>
     1d8:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <__data_end+0x1>
     1dc:	05 97       	sbiw	r24, 0x05	; 5
     1de:	24 f0       	brlt	.+8      	; 0x1e8 <vGetNextTrack+0xca>
	  playListIndex = 0;
     1e0:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <__data_end+0x1>
     1e4:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <__data_end>
  }
}
     1e8:	0f 90       	pop	r0
     1ea:	0f 90       	pop	r0
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	08 95       	ret

000001f2 <main>:

int main(void)
{ 
	// todo #1 
	// 1. disable global interrupt
	cli();
     1f2:	f8 94       	cli
	// 2. assign vGetNextTrack method to external Int0 attachinter
	attachInterrupt(0, vGetNextTrack, 1);
     1f4:	41 e0       	ldi	r20, 0x01	; 1
     1f6:	50 e0       	ldi	r21, 0x00	; 0
     1f8:	6f e8       	ldi	r22, 0x8F	; 143
     1fa:	70 e0       	ldi	r23, 0x00	; 0
     1fc:	80 e0       	ldi	r24, 0x00	; 0
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <attachInterrupt>
   USART_init();
     204:	0e 94 d0 0b 	call	0x17a0	; 0x17a0 <USART_init>
    /* The queue is created to hold a maximum of 5 long values. */
    xQueue = xQueueCreate(5, sizeof(char *));
     208:	40 e0       	ldi	r20, 0x00	; 0
     20a:	62 e0       	ldi	r22, 0x02	; 2
     20c:	85 e0       	ldi	r24, 0x05	; 5
     20e:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <xQueueGenericCreate>
     212:	90 93 2d 08 	sts	0x082D, r25	; 0x80082d <xQueue+0x1>
     216:	80 93 2c 08 	sts	0x082C, r24	; 0x80082c <xQueue>
	if( xQueue != NULL )
     21a:	89 2b       	or	r24, r25
     21c:	a9 f0       	breq	.+42     	; 0x248 <main+0x56>
	{
		xTaskCreate(vReceiverTask, "Receiver", 256, NULL, 2, NULL );
     21e:	a1 2c       	mov	r10, r1
     220:	b1 2c       	mov	r11, r1
     222:	c1 2c       	mov	r12, r1
     224:	d1 2c       	mov	r13, r1
     226:	e1 2c       	mov	r14, r1
     228:	f1 2c       	mov	r15, r1
     22a:	02 e0       	ldi	r16, 0x02	; 2
     22c:	20 e0       	ldi	r18, 0x00	; 0
     22e:	30 e0       	ldi	r19, 0x00	; 0
     230:	40 e0       	ldi	r20, 0x00	; 0
     232:	51 e0       	ldi	r21, 0x01	; 1
     234:	66 e8       	ldi	r22, 0x86	; 134
     236:	71 e0       	ldi	r23, 0x01	; 1
     238:	83 e5       	ldi	r24, 0x53	; 83
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	0e 94 66 06 	call	0xccc	; 0xccc <xTaskGenericCreate>
		sei();
     240:	78 94       	sei
		vTaskStartScheduler();
     242:	0e 94 74 07 	call	0xee8	; 0xee8 <vTaskStartScheduler>
     246:	04 c0       	rjmp	.+8      	; 0x250 <main+0x5e>
	}
	else
		USART_sendstr("The queue could not be created");
     248:	8f e8       	ldi	r24, 0x8F	; 143
     24a:	91 e0       	ldi	r25, 0x01	; 1
     24c:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <USART_sendstr>
     250:	ff cf       	rjmp	.-2      	; 0x250 <main+0x5e>

00000252 <vListInitialise>:
     252:	fc 01       	movw	r30, r24
     254:	03 96       	adiw	r24, 0x03	; 3
     256:	92 83       	std	Z+2, r25	; 0x02
     258:	81 83       	std	Z+1, r24	; 0x01
     25a:	2f ef       	ldi	r18, 0xFF	; 255
     25c:	3f ef       	ldi	r19, 0xFF	; 255
     25e:	34 83       	std	Z+4, r19	; 0x04
     260:	23 83       	std	Z+3, r18	; 0x03
     262:	96 83       	std	Z+6, r25	; 0x06
     264:	85 83       	std	Z+5, r24	; 0x05
     266:	90 87       	std	Z+8, r25	; 0x08
     268:	87 83       	std	Z+7, r24	; 0x07
     26a:	10 82       	st	Z, r1
     26c:	08 95       	ret

0000026e <vListInitialiseItem>:
     26e:	fc 01       	movw	r30, r24
     270:	11 86       	std	Z+9, r1	; 0x09
     272:	10 86       	std	Z+8, r1	; 0x08
     274:	08 95       	ret

00000276 <vListInsertEnd>:
     276:	cf 93       	push	r28
     278:	df 93       	push	r29
     27a:	9c 01       	movw	r18, r24
     27c:	fb 01       	movw	r30, r22
     27e:	dc 01       	movw	r26, r24
     280:	11 96       	adiw	r26, 0x01	; 1
     282:	cd 91       	ld	r28, X+
     284:	dc 91       	ld	r29, X
     286:	12 97       	sbiw	r26, 0x02	; 2
     288:	d3 83       	std	Z+3, r29	; 0x03
     28a:	c2 83       	std	Z+2, r28	; 0x02
     28c:	8c 81       	ldd	r24, Y+4	; 0x04
     28e:	9d 81       	ldd	r25, Y+5	; 0x05
     290:	95 83       	std	Z+5, r25	; 0x05
     292:	84 83       	std	Z+4, r24	; 0x04
     294:	8c 81       	ldd	r24, Y+4	; 0x04
     296:	9d 81       	ldd	r25, Y+5	; 0x05
     298:	dc 01       	movw	r26, r24
     29a:	13 96       	adiw	r26, 0x03	; 3
     29c:	7c 93       	st	X, r23
     29e:	6e 93       	st	-X, r22
     2a0:	12 97       	sbiw	r26, 0x02	; 2
     2a2:	7d 83       	std	Y+5, r23	; 0x05
     2a4:	6c 83       	std	Y+4, r22	; 0x04
     2a6:	31 87       	std	Z+9, r19	; 0x09
     2a8:	20 87       	std	Z+8, r18	; 0x08
     2aa:	f9 01       	movw	r30, r18
     2ac:	80 81       	ld	r24, Z
     2ae:	8f 5f       	subi	r24, 0xFF	; 255
     2b0:	80 83       	st	Z, r24
     2b2:	df 91       	pop	r29
     2b4:	cf 91       	pop	r28
     2b6:	08 95       	ret

000002b8 <vListInsert>:
     2b8:	cf 93       	push	r28
     2ba:	df 93       	push	r29
     2bc:	eb 01       	movw	r28, r22
     2be:	48 81       	ld	r20, Y
     2c0:	59 81       	ldd	r21, Y+1	; 0x01
     2c2:	4f 3f       	cpi	r20, 0xFF	; 255
     2c4:	2f ef       	ldi	r18, 0xFF	; 255
     2c6:	52 07       	cpc	r21, r18
     2c8:	21 f4       	brne	.+8      	; 0x2d2 <vListInsert+0x1a>
     2ca:	fc 01       	movw	r30, r24
     2cc:	a7 81       	ldd	r26, Z+7	; 0x07
     2ce:	b0 85       	ldd	r27, Z+8	; 0x08
     2d0:	0d c0       	rjmp	.+26     	; 0x2ec <vListInsert+0x34>
     2d2:	dc 01       	movw	r26, r24
     2d4:	13 96       	adiw	r26, 0x03	; 3
     2d6:	01 c0       	rjmp	.+2      	; 0x2da <vListInsert+0x22>
     2d8:	df 01       	movw	r26, r30
     2da:	12 96       	adiw	r26, 0x02	; 2
     2dc:	ed 91       	ld	r30, X+
     2de:	fc 91       	ld	r31, X
     2e0:	13 97       	sbiw	r26, 0x03	; 3
     2e2:	20 81       	ld	r18, Z
     2e4:	31 81       	ldd	r19, Z+1	; 0x01
     2e6:	42 17       	cp	r20, r18
     2e8:	53 07       	cpc	r21, r19
     2ea:	b0 f7       	brcc	.-20     	; 0x2d8 <vListInsert+0x20>
     2ec:	12 96       	adiw	r26, 0x02	; 2
     2ee:	ed 91       	ld	r30, X+
     2f0:	fc 91       	ld	r31, X
     2f2:	13 97       	sbiw	r26, 0x03	; 3
     2f4:	fb 83       	std	Y+3, r31	; 0x03
     2f6:	ea 83       	std	Y+2, r30	; 0x02
     2f8:	d5 83       	std	Z+5, r29	; 0x05
     2fa:	c4 83       	std	Z+4, r28	; 0x04
     2fc:	bd 83       	std	Y+5, r27	; 0x05
     2fe:	ac 83       	std	Y+4, r26	; 0x04
     300:	13 96       	adiw	r26, 0x03	; 3
     302:	dc 93       	st	X, r29
     304:	ce 93       	st	-X, r28
     306:	12 97       	sbiw	r26, 0x02	; 2
     308:	99 87       	std	Y+9, r25	; 0x09
     30a:	88 87       	std	Y+8, r24	; 0x08
     30c:	fc 01       	movw	r30, r24
     30e:	20 81       	ld	r18, Z
     310:	2f 5f       	subi	r18, 0xFF	; 255
     312:	20 83       	st	Z, r18
     314:	df 91       	pop	r29
     316:	cf 91       	pop	r28
     318:	08 95       	ret

0000031a <uxListRemove>:
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	fc 01       	movw	r30, r24
     320:	a0 85       	ldd	r26, Z+8	; 0x08
     322:	b1 85       	ldd	r27, Z+9	; 0x09
     324:	c2 81       	ldd	r28, Z+2	; 0x02
     326:	d3 81       	ldd	r29, Z+3	; 0x03
     328:	84 81       	ldd	r24, Z+4	; 0x04
     32a:	95 81       	ldd	r25, Z+5	; 0x05
     32c:	9d 83       	std	Y+5, r25	; 0x05
     32e:	8c 83       	std	Y+4, r24	; 0x04
     330:	c4 81       	ldd	r28, Z+4	; 0x04
     332:	d5 81       	ldd	r29, Z+5	; 0x05
     334:	82 81       	ldd	r24, Z+2	; 0x02
     336:	93 81       	ldd	r25, Z+3	; 0x03
     338:	9b 83       	std	Y+3, r25	; 0x03
     33a:	8a 83       	std	Y+2, r24	; 0x02
     33c:	11 96       	adiw	r26, 0x01	; 1
     33e:	8d 91       	ld	r24, X+
     340:	9c 91       	ld	r25, X
     342:	12 97       	sbiw	r26, 0x02	; 2
     344:	e8 17       	cp	r30, r24
     346:	f9 07       	cpc	r31, r25
     348:	31 f4       	brne	.+12     	; 0x356 <uxListRemove+0x3c>
     34a:	84 81       	ldd	r24, Z+4	; 0x04
     34c:	95 81       	ldd	r25, Z+5	; 0x05
     34e:	12 96       	adiw	r26, 0x02	; 2
     350:	9c 93       	st	X, r25
     352:	8e 93       	st	-X, r24
     354:	11 97       	sbiw	r26, 0x01	; 1
     356:	11 86       	std	Z+9, r1	; 0x09
     358:	10 86       	std	Z+8, r1	; 0x08
     35a:	8c 91       	ld	r24, X
     35c:	81 50       	subi	r24, 0x01	; 1
     35e:	8c 93       	st	X, r24
     360:	df 91       	pop	r29
     362:	cf 91       	pop	r28
     364:	08 95       	ret

00000366 <pxPortInitialiseStack>:
     366:	31 e1       	ldi	r19, 0x11	; 17
     368:	fc 01       	movw	r30, r24
     36a:	30 83       	st	Z, r19
     36c:	31 97       	sbiw	r30, 0x01	; 1
     36e:	22 e2       	ldi	r18, 0x22	; 34
     370:	20 83       	st	Z, r18
     372:	31 97       	sbiw	r30, 0x01	; 1
     374:	a3 e3       	ldi	r26, 0x33	; 51
     376:	a0 83       	st	Z, r26
     378:	31 97       	sbiw	r30, 0x01	; 1
     37a:	60 83       	st	Z, r22
     37c:	31 97       	sbiw	r30, 0x01	; 1
     37e:	70 83       	st	Z, r23
     380:	31 97       	sbiw	r30, 0x01	; 1
     382:	10 82       	st	Z, r1
     384:	31 97       	sbiw	r30, 0x01	; 1
     386:	60 e8       	ldi	r22, 0x80	; 128
     388:	60 83       	st	Z, r22
     38a:	31 97       	sbiw	r30, 0x01	; 1
     38c:	10 82       	st	Z, r1
     38e:	31 97       	sbiw	r30, 0x01	; 1
     390:	62 e0       	ldi	r22, 0x02	; 2
     392:	60 83       	st	Z, r22
     394:	31 97       	sbiw	r30, 0x01	; 1
     396:	63 e0       	ldi	r22, 0x03	; 3
     398:	60 83       	st	Z, r22
     39a:	31 97       	sbiw	r30, 0x01	; 1
     39c:	64 e0       	ldi	r22, 0x04	; 4
     39e:	60 83       	st	Z, r22
     3a0:	31 97       	sbiw	r30, 0x01	; 1
     3a2:	65 e0       	ldi	r22, 0x05	; 5
     3a4:	60 83       	st	Z, r22
     3a6:	31 97       	sbiw	r30, 0x01	; 1
     3a8:	66 e0       	ldi	r22, 0x06	; 6
     3aa:	60 83       	st	Z, r22
     3ac:	31 97       	sbiw	r30, 0x01	; 1
     3ae:	67 e0       	ldi	r22, 0x07	; 7
     3b0:	60 83       	st	Z, r22
     3b2:	31 97       	sbiw	r30, 0x01	; 1
     3b4:	68 e0       	ldi	r22, 0x08	; 8
     3b6:	60 83       	st	Z, r22
     3b8:	31 97       	sbiw	r30, 0x01	; 1
     3ba:	69 e0       	ldi	r22, 0x09	; 9
     3bc:	60 83       	st	Z, r22
     3be:	31 97       	sbiw	r30, 0x01	; 1
     3c0:	60 e1       	ldi	r22, 0x10	; 16
     3c2:	60 83       	st	Z, r22
     3c4:	31 97       	sbiw	r30, 0x01	; 1
     3c6:	30 83       	st	Z, r19
     3c8:	31 97       	sbiw	r30, 0x01	; 1
     3ca:	32 e1       	ldi	r19, 0x12	; 18
     3cc:	30 83       	st	Z, r19
     3ce:	31 97       	sbiw	r30, 0x01	; 1
     3d0:	33 e1       	ldi	r19, 0x13	; 19
     3d2:	30 83       	st	Z, r19
     3d4:	31 97       	sbiw	r30, 0x01	; 1
     3d6:	34 e1       	ldi	r19, 0x14	; 20
     3d8:	30 83       	st	Z, r19
     3da:	31 97       	sbiw	r30, 0x01	; 1
     3dc:	35 e1       	ldi	r19, 0x15	; 21
     3de:	30 83       	st	Z, r19
     3e0:	31 97       	sbiw	r30, 0x01	; 1
     3e2:	36 e1       	ldi	r19, 0x16	; 22
     3e4:	30 83       	st	Z, r19
     3e6:	31 97       	sbiw	r30, 0x01	; 1
     3e8:	37 e1       	ldi	r19, 0x17	; 23
     3ea:	30 83       	st	Z, r19
     3ec:	31 97       	sbiw	r30, 0x01	; 1
     3ee:	38 e1       	ldi	r19, 0x18	; 24
     3f0:	30 83       	st	Z, r19
     3f2:	31 97       	sbiw	r30, 0x01	; 1
     3f4:	39 e1       	ldi	r19, 0x19	; 25
     3f6:	30 83       	st	Z, r19
     3f8:	31 97       	sbiw	r30, 0x01	; 1
     3fa:	30 e2       	ldi	r19, 0x20	; 32
     3fc:	30 83       	st	Z, r19
     3fe:	31 97       	sbiw	r30, 0x01	; 1
     400:	31 e2       	ldi	r19, 0x21	; 33
     402:	30 83       	st	Z, r19
     404:	31 97       	sbiw	r30, 0x01	; 1
     406:	20 83       	st	Z, r18
     408:	31 97       	sbiw	r30, 0x01	; 1
     40a:	23 e2       	ldi	r18, 0x23	; 35
     40c:	20 83       	st	Z, r18
     40e:	31 97       	sbiw	r30, 0x01	; 1
     410:	40 83       	st	Z, r20
     412:	31 97       	sbiw	r30, 0x01	; 1
     414:	50 83       	st	Z, r21
     416:	31 97       	sbiw	r30, 0x01	; 1
     418:	26 e2       	ldi	r18, 0x26	; 38
     41a:	20 83       	st	Z, r18
     41c:	31 97       	sbiw	r30, 0x01	; 1
     41e:	27 e2       	ldi	r18, 0x27	; 39
     420:	20 83       	st	Z, r18
     422:	31 97       	sbiw	r30, 0x01	; 1
     424:	28 e2       	ldi	r18, 0x28	; 40
     426:	20 83       	st	Z, r18
     428:	31 97       	sbiw	r30, 0x01	; 1
     42a:	29 e2       	ldi	r18, 0x29	; 41
     42c:	20 83       	st	Z, r18
     42e:	31 97       	sbiw	r30, 0x01	; 1
     430:	20 e3       	ldi	r18, 0x30	; 48
     432:	20 83       	st	Z, r18
     434:	31 97       	sbiw	r30, 0x01	; 1
     436:	21 e3       	ldi	r18, 0x31	; 49
     438:	20 83       	st	Z, r18
     43a:	86 97       	sbiw	r24, 0x26	; 38
     43c:	08 95       	ret

0000043e <xPortStartScheduler>:
     43e:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     442:	8c e7       	ldi	r24, 0x7C	; 124
     444:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     448:	8b e0       	ldi	r24, 0x0B	; 11
     44a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     44e:	ef e6       	ldi	r30, 0x6F	; 111
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	80 81       	ld	r24, Z
     454:	82 60       	ori	r24, 0x02	; 2
     456:	80 83       	st	Z, r24
     458:	a0 91 22 08 	lds	r26, 0x0822	; 0x800822 <pxCurrentTCB>
     45c:	b0 91 23 08 	lds	r27, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     460:	cd 91       	ld	r28, X+
     462:	cd bf       	out	0x3d, r28	; 61
     464:	dd 91       	ld	r29, X+
     466:	de bf       	out	0x3e, r29	; 62
     468:	ff 91       	pop	r31
     46a:	ef 91       	pop	r30
     46c:	df 91       	pop	r29
     46e:	cf 91       	pop	r28
     470:	bf 91       	pop	r27
     472:	af 91       	pop	r26
     474:	9f 91       	pop	r25
     476:	8f 91       	pop	r24
     478:	7f 91       	pop	r23
     47a:	6f 91       	pop	r22
     47c:	5f 91       	pop	r21
     47e:	4f 91       	pop	r20
     480:	3f 91       	pop	r19
     482:	2f 91       	pop	r18
     484:	1f 91       	pop	r17
     486:	0f 91       	pop	r16
     488:	ff 90       	pop	r15
     48a:	ef 90       	pop	r14
     48c:	df 90       	pop	r13
     48e:	cf 90       	pop	r12
     490:	bf 90       	pop	r11
     492:	af 90       	pop	r10
     494:	9f 90       	pop	r9
     496:	8f 90       	pop	r8
     498:	7f 90       	pop	r7
     49a:	6f 90       	pop	r6
     49c:	5f 90       	pop	r5
     49e:	4f 90       	pop	r4
     4a0:	3f 90       	pop	r3
     4a2:	2f 90       	pop	r2
     4a4:	1f 90       	pop	r1
     4a6:	0f 90       	pop	r0
     4a8:	0f be       	out	0x3f, r0	; 63
     4aa:	0f 90       	pop	r0
     4ac:	08 95       	ret
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	08 95       	ret

000004b2 <vPortYield>:
     4b2:	0f 92       	push	r0
     4b4:	0f b6       	in	r0, 0x3f	; 63
     4b6:	f8 94       	cli
     4b8:	0f 92       	push	r0
     4ba:	1f 92       	push	r1
     4bc:	11 24       	eor	r1, r1
     4be:	2f 92       	push	r2
     4c0:	3f 92       	push	r3
     4c2:	4f 92       	push	r4
     4c4:	5f 92       	push	r5
     4c6:	6f 92       	push	r6
     4c8:	7f 92       	push	r7
     4ca:	8f 92       	push	r8
     4cc:	9f 92       	push	r9
     4ce:	af 92       	push	r10
     4d0:	bf 92       	push	r11
     4d2:	cf 92       	push	r12
     4d4:	df 92       	push	r13
     4d6:	ef 92       	push	r14
     4d8:	ff 92       	push	r15
     4da:	0f 93       	push	r16
     4dc:	1f 93       	push	r17
     4de:	2f 93       	push	r18
     4e0:	3f 93       	push	r19
     4e2:	4f 93       	push	r20
     4e4:	5f 93       	push	r21
     4e6:	6f 93       	push	r22
     4e8:	7f 93       	push	r23
     4ea:	8f 93       	push	r24
     4ec:	9f 93       	push	r25
     4ee:	af 93       	push	r26
     4f0:	bf 93       	push	r27
     4f2:	cf 93       	push	r28
     4f4:	df 93       	push	r29
     4f6:	ef 93       	push	r30
     4f8:	ff 93       	push	r31
     4fa:	a0 91 22 08 	lds	r26, 0x0822	; 0x800822 <pxCurrentTCB>
     4fe:	b0 91 23 08 	lds	r27, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     502:	0d b6       	in	r0, 0x3d	; 61
     504:	0d 92       	st	X+, r0
     506:	0e b6       	in	r0, 0x3e	; 62
     508:	0d 92       	st	X+, r0
     50a:	0e 94 76 09 	call	0x12ec	; 0x12ec <vTaskSwitchContext>
     50e:	a0 91 22 08 	lds	r26, 0x0822	; 0x800822 <pxCurrentTCB>
     512:	b0 91 23 08 	lds	r27, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     516:	cd 91       	ld	r28, X+
     518:	cd bf       	out	0x3d, r28	; 61
     51a:	dd 91       	ld	r29, X+
     51c:	de bf       	out	0x3e, r29	; 62
     51e:	ff 91       	pop	r31
     520:	ef 91       	pop	r30
     522:	df 91       	pop	r29
     524:	cf 91       	pop	r28
     526:	bf 91       	pop	r27
     528:	af 91       	pop	r26
     52a:	9f 91       	pop	r25
     52c:	8f 91       	pop	r24
     52e:	7f 91       	pop	r23
     530:	6f 91       	pop	r22
     532:	5f 91       	pop	r21
     534:	4f 91       	pop	r20
     536:	3f 91       	pop	r19
     538:	2f 91       	pop	r18
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	ff 90       	pop	r15
     540:	ef 90       	pop	r14
     542:	df 90       	pop	r13
     544:	cf 90       	pop	r12
     546:	bf 90       	pop	r11
     548:	af 90       	pop	r10
     54a:	9f 90       	pop	r9
     54c:	8f 90       	pop	r8
     54e:	7f 90       	pop	r7
     550:	6f 90       	pop	r6
     552:	5f 90       	pop	r5
     554:	4f 90       	pop	r4
     556:	3f 90       	pop	r3
     558:	2f 90       	pop	r2
     55a:	1f 90       	pop	r1
     55c:	0f 90       	pop	r0
     55e:	0f be       	out	0x3f, r0	; 63
     560:	0f 90       	pop	r0
     562:	08 95       	ret

00000564 <vPortYieldFromTick>:
     564:	0f 92       	push	r0
     566:	0f b6       	in	r0, 0x3f	; 63
     568:	f8 94       	cli
     56a:	0f 92       	push	r0
     56c:	1f 92       	push	r1
     56e:	11 24       	eor	r1, r1
     570:	2f 92       	push	r2
     572:	3f 92       	push	r3
     574:	4f 92       	push	r4
     576:	5f 92       	push	r5
     578:	6f 92       	push	r6
     57a:	7f 92       	push	r7
     57c:	8f 92       	push	r8
     57e:	9f 92       	push	r9
     580:	af 92       	push	r10
     582:	bf 92       	push	r11
     584:	cf 92       	push	r12
     586:	df 92       	push	r13
     588:	ef 92       	push	r14
     58a:	ff 92       	push	r15
     58c:	0f 93       	push	r16
     58e:	1f 93       	push	r17
     590:	2f 93       	push	r18
     592:	3f 93       	push	r19
     594:	4f 93       	push	r20
     596:	5f 93       	push	r21
     598:	6f 93       	push	r22
     59a:	7f 93       	push	r23
     59c:	8f 93       	push	r24
     59e:	9f 93       	push	r25
     5a0:	af 93       	push	r26
     5a2:	bf 93       	push	r27
     5a4:	cf 93       	push	r28
     5a6:	df 93       	push	r29
     5a8:	ef 93       	push	r30
     5aa:	ff 93       	push	r31
     5ac:	a0 91 22 08 	lds	r26, 0x0822	; 0x800822 <pxCurrentTCB>
     5b0:	b0 91 23 08 	lds	r27, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     5b4:	0d b6       	in	r0, 0x3d	; 61
     5b6:	0d 92       	st	X+, r0
     5b8:	0e b6       	in	r0, 0x3e	; 62
     5ba:	0d 92       	st	X+, r0
     5bc:	0e 94 b8 07 	call	0xf70	; 0xf70 <xTaskIncrementTick>
     5c0:	81 11       	cpse	r24, r1
     5c2:	0e 94 76 09 	call	0x12ec	; 0x12ec <vTaskSwitchContext>
     5c6:	a0 91 22 08 	lds	r26, 0x0822	; 0x800822 <pxCurrentTCB>
     5ca:	b0 91 23 08 	lds	r27, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     5ce:	cd 91       	ld	r28, X+
     5d0:	cd bf       	out	0x3d, r28	; 61
     5d2:	dd 91       	ld	r29, X+
     5d4:	de bf       	out	0x3e, r29	; 62
     5d6:	ff 91       	pop	r31
     5d8:	ef 91       	pop	r30
     5da:	df 91       	pop	r29
     5dc:	cf 91       	pop	r28
     5de:	bf 91       	pop	r27
     5e0:	af 91       	pop	r26
     5e2:	9f 91       	pop	r25
     5e4:	8f 91       	pop	r24
     5e6:	7f 91       	pop	r23
     5e8:	6f 91       	pop	r22
     5ea:	5f 91       	pop	r21
     5ec:	4f 91       	pop	r20
     5ee:	3f 91       	pop	r19
     5f0:	2f 91       	pop	r18
     5f2:	1f 91       	pop	r17
     5f4:	0f 91       	pop	r16
     5f6:	ff 90       	pop	r15
     5f8:	ef 90       	pop	r14
     5fa:	df 90       	pop	r13
     5fc:	cf 90       	pop	r12
     5fe:	bf 90       	pop	r11
     600:	af 90       	pop	r10
     602:	9f 90       	pop	r9
     604:	8f 90       	pop	r8
     606:	7f 90       	pop	r7
     608:	6f 90       	pop	r6
     60a:	5f 90       	pop	r5
     60c:	4f 90       	pop	r4
     60e:	3f 90       	pop	r3
     610:	2f 90       	pop	r2
     612:	1f 90       	pop	r1
     614:	0f 90       	pop	r0
     616:	0f be       	out	0x3f, r0	; 63
     618:	0f 90       	pop	r0
     61a:	08 95       	ret

0000061c <__vector_11>:
     61c:	0e 94 b2 02 	call	0x564	; 0x564 <vPortYieldFromTick>
     620:	18 95       	reti

00000622 <pvPortMalloc>:
     622:	0f 93       	push	r16
     624:	1f 93       	push	r17
     626:	cf 93       	push	r28
     628:	df 93       	push	r29
     62a:	ec 01       	movw	r28, r24
     62c:	0e 94 a3 07 	call	0xf46	; 0xf46 <vTaskSuspendAll>
     630:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <xHeapHasBeenInitialised.2023>
     634:	81 11       	cpse	r24, r1
     636:	1d c0       	rjmp	.+58     	; 0x672 <pvPortMalloc+0x50>
     638:	e9 ee       	ldi	r30, 0xE9	; 233
     63a:	f1 e0       	ldi	r31, 0x01	; 1
     63c:	8e ee       	ldi	r24, 0xEE	; 238
     63e:	91 e0       	ldi	r25, 0x01	; 1
     640:	91 83       	std	Z+1, r25	; 0x01
     642:	80 83       	st	Z, r24
     644:	13 82       	std	Z+3, r1	; 0x03
     646:	12 82       	std	Z+2, r1	; 0x02
     648:	e5 ee       	ldi	r30, 0xE5	; 229
     64a:	f1 e0       	ldi	r31, 0x01	; 1
     64c:	8b ed       	ldi	r24, 0xDB	; 219
     64e:	95 e0       	ldi	r25, 0x05	; 5
     650:	93 83       	std	Z+3, r25	; 0x03
     652:	82 83       	std	Z+2, r24	; 0x02
     654:	11 82       	std	Z+1, r1	; 0x01
     656:	10 82       	st	Z, r1
     658:	ad ee       	ldi	r26, 0xED	; 237
     65a:	b1 e0       	ldi	r27, 0x01	; 1
     65c:	14 96       	adiw	r26, 0x04	; 4
     65e:	9c 93       	st	X, r25
     660:	8e 93       	st	-X, r24
     662:	13 97       	sbiw	r26, 0x03	; 3
     664:	12 96       	adiw	r26, 0x02	; 2
     666:	fc 93       	st	X, r31
     668:	ee 93       	st	-X, r30
     66a:	11 97       	sbiw	r26, 0x01	; 1
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <xHeapHasBeenInitialised.2023>
     672:	20 97       	sbiw	r28, 0x00	; 0
     674:	09 f4       	brne	.+2      	; 0x678 <pvPortMalloc+0x56>
     676:	5f c0       	rjmp	.+190    	; 0x736 <pvPortMalloc+0x114>
     678:	9e 01       	movw	r18, r28
     67a:	2c 5f       	subi	r18, 0xFC	; 252
     67c:	3f 4f       	sbci	r19, 0xFF	; 255
     67e:	23 96       	adiw	r28, 0x03	; 3
     680:	ca 3d       	cpi	r28, 0xDA	; 218
     682:	d5 40       	sbci	r29, 0x05	; 5
     684:	08 f0       	brcs	.+2      	; 0x688 <pvPortMalloc+0x66>
     686:	5a c0       	rjmp	.+180    	; 0x73c <pvPortMalloc+0x11a>
     688:	e0 91 e9 01 	lds	r30, 0x01E9	; 0x8001e9 <xStart>
     68c:	f0 91 ea 01 	lds	r31, 0x01EA	; 0x8001ea <xStart+0x1>
     690:	a9 ee       	ldi	r26, 0xE9	; 233
     692:	b1 e0       	ldi	r27, 0x01	; 1
     694:	02 c0       	rjmp	.+4      	; 0x69a <pvPortMalloc+0x78>
     696:	df 01       	movw	r26, r30
     698:	fc 01       	movw	r30, r24
     69a:	82 81       	ldd	r24, Z+2	; 0x02
     69c:	93 81       	ldd	r25, Z+3	; 0x03
     69e:	82 17       	cp	r24, r18
     6a0:	93 07       	cpc	r25, r19
     6a2:	20 f4       	brcc	.+8      	; 0x6ac <pvPortMalloc+0x8a>
     6a4:	80 81       	ld	r24, Z
     6a6:	91 81       	ldd	r25, Z+1	; 0x01
     6a8:	00 97       	sbiw	r24, 0x00	; 0
     6aa:	a9 f7       	brne	.-22     	; 0x696 <pvPortMalloc+0x74>
     6ac:	c1 e0       	ldi	r28, 0x01	; 1
     6ae:	e5 3e       	cpi	r30, 0xE5	; 229
     6b0:	fc 07       	cpc	r31, r28
     6b2:	09 f4       	brne	.+2      	; 0x6b6 <pvPortMalloc+0x94>
     6b4:	46 c0       	rjmp	.+140    	; 0x742 <pvPortMalloc+0x120>
     6b6:	cd 91       	ld	r28, X+
     6b8:	dc 91       	ld	r29, X
     6ba:	11 97       	sbiw	r26, 0x01	; 1
     6bc:	8e 01       	movw	r16, r28
     6be:	0c 5f       	subi	r16, 0xFC	; 252
     6c0:	1f 4f       	sbci	r17, 0xFF	; 255
     6c2:	80 81       	ld	r24, Z
     6c4:	91 81       	ldd	r25, Z+1	; 0x01
     6c6:	8d 93       	st	X+, r24
     6c8:	9c 93       	st	X, r25
     6ca:	82 81       	ldd	r24, Z+2	; 0x02
     6cc:	93 81       	ldd	r25, Z+3	; 0x03
     6ce:	82 1b       	sub	r24, r18
     6d0:	93 0b       	sbc	r25, r19
     6d2:	89 30       	cpi	r24, 0x09	; 9
     6d4:	91 05       	cpc	r25, r1
     6d6:	10 f1       	brcs	.+68     	; 0x71c <pvPortMalloc+0xfa>
     6d8:	bf 01       	movw	r22, r30
     6da:	62 0f       	add	r22, r18
     6dc:	73 1f       	adc	r23, r19
     6de:	db 01       	movw	r26, r22
     6e0:	13 96       	adiw	r26, 0x03	; 3
     6e2:	9c 93       	st	X, r25
     6e4:	8e 93       	st	-X, r24
     6e6:	12 97       	sbiw	r26, 0x02	; 2
     6e8:	33 83       	std	Z+3, r19	; 0x03
     6ea:	22 83       	std	Z+2, r18	; 0x02
     6ec:	12 96       	adiw	r26, 0x02	; 2
     6ee:	4d 91       	ld	r20, X+
     6f0:	5c 91       	ld	r21, X
     6f2:	13 97       	sbiw	r26, 0x03	; 3
     6f4:	89 ee       	ldi	r24, 0xE9	; 233
     6f6:	91 e0       	ldi	r25, 0x01	; 1
     6f8:	01 c0       	rjmp	.+2      	; 0x6fc <pvPortMalloc+0xda>
     6fa:	cd 01       	movw	r24, r26
     6fc:	ec 01       	movw	r28, r24
     6fe:	a8 81       	ld	r26, Y
     700:	b9 81       	ldd	r27, Y+1	; 0x01
     702:	12 96       	adiw	r26, 0x02	; 2
     704:	2d 91       	ld	r18, X+
     706:	3c 91       	ld	r19, X
     708:	13 97       	sbiw	r26, 0x03	; 3
     70a:	24 17       	cp	r18, r20
     70c:	35 07       	cpc	r19, r21
     70e:	a8 f3       	brcs	.-22     	; 0x6fa <pvPortMalloc+0xd8>
     710:	eb 01       	movw	r28, r22
     712:	b9 83       	std	Y+1, r27	; 0x01
     714:	a8 83       	st	Y, r26
     716:	dc 01       	movw	r26, r24
     718:	6d 93       	st	X+, r22
     71a:	7c 93       	st	X, r23
     71c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <xFreeBytesRemaining>
     720:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <xFreeBytesRemaining+0x1>
     724:	22 81       	ldd	r18, Z+2	; 0x02
     726:	33 81       	ldd	r19, Z+3	; 0x03
     728:	82 1b       	sub	r24, r18
     72a:	93 0b       	sbc	r25, r19
     72c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <xFreeBytesRemaining+0x1>
     730:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <xFreeBytesRemaining>
     734:	08 c0       	rjmp	.+16     	; 0x746 <pvPortMalloc+0x124>
     736:	00 e0       	ldi	r16, 0x00	; 0
     738:	10 e0       	ldi	r17, 0x00	; 0
     73a:	05 c0       	rjmp	.+10     	; 0x746 <pvPortMalloc+0x124>
     73c:	00 e0       	ldi	r16, 0x00	; 0
     73e:	10 e0       	ldi	r17, 0x00	; 0
     740:	02 c0       	rjmp	.+4      	; 0x746 <pvPortMalloc+0x124>
     742:	00 e0       	ldi	r16, 0x00	; 0
     744:	10 e0       	ldi	r17, 0x00	; 0
     746:	0e 94 75 08 	call	0x10ea	; 0x10ea <xTaskResumeAll>
     74a:	c8 01       	movw	r24, r16
     74c:	df 91       	pop	r29
     74e:	cf 91       	pop	r28
     750:	1f 91       	pop	r17
     752:	0f 91       	pop	r16
     754:	08 95       	ret

00000756 <vPortFree>:
     756:	0f 93       	push	r16
     758:	1f 93       	push	r17
     75a:	cf 93       	push	r28
     75c:	df 93       	push	r29
     75e:	00 97       	sbiw	r24, 0x00	; 0
     760:	41 f1       	breq	.+80     	; 0x7b2 <vPortFree+0x5c>
     762:	ec 01       	movw	r28, r24
     764:	8c 01       	movw	r16, r24
     766:	04 50       	subi	r16, 0x04	; 4
     768:	11 09       	sbc	r17, r1
     76a:	0e 94 a3 07 	call	0xf46	; 0xf46 <vTaskSuspendAll>
     76e:	f8 01       	movw	r30, r16
     770:	42 81       	ldd	r20, Z+2	; 0x02
     772:	53 81       	ldd	r21, Z+3	; 0x03
     774:	a9 ee       	ldi	r26, 0xE9	; 233
     776:	b1 e0       	ldi	r27, 0x01	; 1
     778:	01 c0       	rjmp	.+2      	; 0x77c <vPortFree+0x26>
     77a:	df 01       	movw	r26, r30
     77c:	ed 91       	ld	r30, X+
     77e:	fc 91       	ld	r31, X
     780:	11 97       	sbiw	r26, 0x01	; 1
     782:	22 81       	ldd	r18, Z+2	; 0x02
     784:	33 81       	ldd	r19, Z+3	; 0x03
     786:	24 17       	cp	r18, r20
     788:	35 07       	cpc	r19, r21
     78a:	b8 f3       	brcs	.-18     	; 0x77a <vPortFree+0x24>
     78c:	24 97       	sbiw	r28, 0x04	; 4
     78e:	f9 83       	std	Y+1, r31	; 0x01
     790:	e8 83       	st	Y, r30
     792:	0d 93       	st	X+, r16
     794:	1c 93       	st	X, r17
     796:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <xFreeBytesRemaining>
     79a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <xFreeBytesRemaining+0x1>
     79e:	8a 81       	ldd	r24, Y+2	; 0x02
     7a0:	9b 81       	ldd	r25, Y+3	; 0x03
     7a2:	82 0f       	add	r24, r18
     7a4:	93 1f       	adc	r25, r19
     7a6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <xFreeBytesRemaining+0x1>
     7aa:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <xFreeBytesRemaining>
     7ae:	0e 94 75 08 	call	0x10ea	; 0x10ea <xTaskResumeAll>
     7b2:	df 91       	pop	r29
     7b4:	cf 91       	pop	r28
     7b6:	1f 91       	pop	r17
     7b8:	0f 91       	pop	r16
     7ba:	08 95       	ret

000007bc <prvCopyDataToQueue>:
     7bc:	1f 93       	push	r17
     7be:	cf 93       	push	r28
     7c0:	df 93       	push	r29
     7c2:	ec 01       	movw	r28, r24
     7c4:	14 2f       	mov	r17, r20
     7c6:	4c 8d       	ldd	r20, Y+28	; 0x1c
     7c8:	41 11       	cpse	r20, r1
     7ca:	0c c0       	rjmp	.+24     	; 0x7e4 <prvCopyDataToQueue+0x28>
     7cc:	88 81       	ld	r24, Y
     7ce:	99 81       	ldd	r25, Y+1	; 0x01
     7d0:	89 2b       	or	r24, r25
     7d2:	09 f0       	breq	.+2      	; 0x7d6 <prvCopyDataToQueue+0x1a>
     7d4:	45 c0       	rjmp	.+138    	; 0x860 <prvCopyDataToQueue+0xa4>
     7d6:	8a 81       	ldd	r24, Y+2	; 0x02
     7d8:	9b 81       	ldd	r25, Y+3	; 0x03
     7da:	0e 94 01 0b 	call	0x1602	; 0x1602 <xTaskPriorityDisinherit>
     7de:	1b 82       	std	Y+3, r1	; 0x03
     7e0:	1a 82       	std	Y+2, r1	; 0x02
     7e2:	45 c0       	rjmp	.+138    	; 0x86e <prvCopyDataToQueue+0xb2>
     7e4:	11 11       	cpse	r17, r1
     7e6:	17 c0       	rjmp	.+46     	; 0x816 <prvCopyDataToQueue+0x5a>
     7e8:	50 e0       	ldi	r21, 0x00	; 0
     7ea:	8c 81       	ldd	r24, Y+4	; 0x04
     7ec:	9d 81       	ldd	r25, Y+5	; 0x05
     7ee:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <memcpy>
     7f2:	2c 8d       	ldd	r18, Y+28	; 0x1c
     7f4:	8c 81       	ldd	r24, Y+4	; 0x04
     7f6:	9d 81       	ldd	r25, Y+5	; 0x05
     7f8:	82 0f       	add	r24, r18
     7fa:	91 1d       	adc	r25, r1
     7fc:	9d 83       	std	Y+5, r25	; 0x05
     7fe:	8c 83       	std	Y+4, r24	; 0x04
     800:	2a 81       	ldd	r18, Y+2	; 0x02
     802:	3b 81       	ldd	r19, Y+3	; 0x03
     804:	82 17       	cp	r24, r18
     806:	93 07       	cpc	r25, r19
     808:	68 f1       	brcs	.+90     	; 0x864 <prvCopyDataToQueue+0xa8>
     80a:	88 81       	ld	r24, Y
     80c:	99 81       	ldd	r25, Y+1	; 0x01
     80e:	9d 83       	std	Y+5, r25	; 0x05
     810:	8c 83       	std	Y+4, r24	; 0x04
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	2c c0       	rjmp	.+88     	; 0x86e <prvCopyDataToQueue+0xb2>
     816:	50 e0       	ldi	r21, 0x00	; 0
     818:	8e 81       	ldd	r24, Y+6	; 0x06
     81a:	9f 81       	ldd	r25, Y+7	; 0x07
     81c:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <memcpy>
     820:	8c 8d       	ldd	r24, Y+28	; 0x1c
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	91 95       	neg	r25
     826:	81 95       	neg	r24
     828:	91 09       	sbc	r25, r1
     82a:	2e 81       	ldd	r18, Y+6	; 0x06
     82c:	3f 81       	ldd	r19, Y+7	; 0x07
     82e:	28 0f       	add	r18, r24
     830:	39 1f       	adc	r19, r25
     832:	3f 83       	std	Y+7, r19	; 0x07
     834:	2e 83       	std	Y+6, r18	; 0x06
     836:	48 81       	ld	r20, Y
     838:	59 81       	ldd	r21, Y+1	; 0x01
     83a:	24 17       	cp	r18, r20
     83c:	35 07       	cpc	r19, r21
     83e:	30 f4       	brcc	.+12     	; 0x84c <prvCopyDataToQueue+0x90>
     840:	2a 81       	ldd	r18, Y+2	; 0x02
     842:	3b 81       	ldd	r19, Y+3	; 0x03
     844:	82 0f       	add	r24, r18
     846:	93 1f       	adc	r25, r19
     848:	9f 83       	std	Y+7, r25	; 0x07
     84a:	8e 83       	std	Y+6, r24	; 0x06
     84c:	12 30       	cpi	r17, 0x02	; 2
     84e:	61 f4       	brne	.+24     	; 0x868 <prvCopyDataToQueue+0xac>
     850:	8a 8d       	ldd	r24, Y+26	; 0x1a
     852:	88 23       	and	r24, r24
     854:	59 f0       	breq	.+22     	; 0x86c <prvCopyDataToQueue+0xb0>
     856:	8a 8d       	ldd	r24, Y+26	; 0x1a
     858:	81 50       	subi	r24, 0x01	; 1
     85a:	8a 8f       	std	Y+26, r24	; 0x1a
     85c:	80 e0       	ldi	r24, 0x00	; 0
     85e:	07 c0       	rjmp	.+14     	; 0x86e <prvCopyDataToQueue+0xb2>
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	05 c0       	rjmp	.+10     	; 0x86e <prvCopyDataToQueue+0xb2>
     864:	80 e0       	ldi	r24, 0x00	; 0
     866:	03 c0       	rjmp	.+6      	; 0x86e <prvCopyDataToQueue+0xb2>
     868:	80 e0       	ldi	r24, 0x00	; 0
     86a:	01 c0       	rjmp	.+2      	; 0x86e <prvCopyDataToQueue+0xb2>
     86c:	80 e0       	ldi	r24, 0x00	; 0
     86e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     870:	9f 5f       	subi	r25, 0xFF	; 255
     872:	9a 8f       	std	Y+26, r25	; 0x1a
     874:	df 91       	pop	r29
     876:	cf 91       	pop	r28
     878:	1f 91       	pop	r17
     87a:	08 95       	ret

0000087c <prvCopyDataFromQueue>:
     87c:	fc 01       	movw	r30, r24
     87e:	44 8d       	ldd	r20, Z+28	; 0x1c
     880:	44 23       	and	r20, r20
     882:	a9 f0       	breq	.+42     	; 0x8ae <prvCopyDataFromQueue+0x32>
     884:	50 e0       	ldi	r21, 0x00	; 0
     886:	26 81       	ldd	r18, Z+6	; 0x06
     888:	37 81       	ldd	r19, Z+7	; 0x07
     88a:	24 0f       	add	r18, r20
     88c:	35 1f       	adc	r19, r21
     88e:	37 83       	std	Z+7, r19	; 0x07
     890:	26 83       	std	Z+6, r18	; 0x06
     892:	82 81       	ldd	r24, Z+2	; 0x02
     894:	93 81       	ldd	r25, Z+3	; 0x03
     896:	28 17       	cp	r18, r24
     898:	39 07       	cpc	r19, r25
     89a:	20 f0       	brcs	.+8      	; 0x8a4 <prvCopyDataFromQueue+0x28>
     89c:	80 81       	ld	r24, Z
     89e:	91 81       	ldd	r25, Z+1	; 0x01
     8a0:	97 83       	std	Z+7, r25	; 0x07
     8a2:	86 83       	std	Z+6, r24	; 0x06
     8a4:	cb 01       	movw	r24, r22
     8a6:	66 81       	ldd	r22, Z+6	; 0x06
     8a8:	77 81       	ldd	r23, Z+7	; 0x07
     8aa:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <memcpy>
     8ae:	08 95       	ret

000008b0 <prvUnlockQueue>:
     8b0:	0f 93       	push	r16
     8b2:	1f 93       	push	r17
     8b4:	cf 93       	push	r28
     8b6:	df 93       	push	r29
     8b8:	ec 01       	movw	r28, r24
     8ba:	0f b6       	in	r0, 0x3f	; 63
     8bc:	f8 94       	cli
     8be:	0f 92       	push	r0
     8c0:	8e 8d       	ldd	r24, Y+30	; 0x1e
     8c2:	18 16       	cp	r1, r24
     8c4:	bc f4       	brge	.+46     	; 0x8f4 <prvUnlockQueue+0x44>
     8c6:	89 89       	ldd	r24, Y+17	; 0x11
     8c8:	81 11       	cpse	r24, r1
     8ca:	05 c0       	rjmp	.+10     	; 0x8d6 <prvUnlockQueue+0x26>
     8cc:	13 c0       	rjmp	.+38     	; 0x8f4 <prvUnlockQueue+0x44>
     8ce:	89 89       	ldd	r24, Y+17	; 0x11
     8d0:	81 11       	cpse	r24, r1
     8d2:	04 c0       	rjmp	.+8      	; 0x8dc <prvUnlockQueue+0x2c>
     8d4:	0f c0       	rjmp	.+30     	; 0x8f4 <prvUnlockQueue+0x44>
     8d6:	8e 01       	movw	r16, r28
     8d8:	0f 5e       	subi	r16, 0xEF	; 239
     8da:	1f 4f       	sbci	r17, 0xFF	; 255
     8dc:	c8 01       	movw	r24, r16
     8de:	0e 94 0f 0a 	call	0x141e	; 0x141e <xTaskRemoveFromEventList>
     8e2:	81 11       	cpse	r24, r1
     8e4:	0e 94 9b 0a 	call	0x1536	; 0x1536 <vTaskMissedYield>
     8e8:	8e 8d       	ldd	r24, Y+30	; 0x1e
     8ea:	81 50       	subi	r24, 0x01	; 1
     8ec:	8e 8f       	std	Y+30, r24	; 0x1e
     8ee:	8e 8d       	ldd	r24, Y+30	; 0x1e
     8f0:	18 16       	cp	r1, r24
     8f2:	6c f3       	brlt	.-38     	; 0x8ce <prvUnlockQueue+0x1e>
     8f4:	8f ef       	ldi	r24, 0xFF	; 255
     8f6:	8e 8f       	std	Y+30, r24	; 0x1e
     8f8:	0f 90       	pop	r0
     8fa:	0f be       	out	0x3f, r0	; 63
     8fc:	0f b6       	in	r0, 0x3f	; 63
     8fe:	f8 94       	cli
     900:	0f 92       	push	r0
     902:	8d 8d       	ldd	r24, Y+29	; 0x1d
     904:	18 16       	cp	r1, r24
     906:	bc f4       	brge	.+46     	; 0x936 <__stack+0x37>
     908:	88 85       	ldd	r24, Y+8	; 0x08
     90a:	81 11       	cpse	r24, r1
     90c:	05 c0       	rjmp	.+10     	; 0x918 <__stack+0x19>
     90e:	13 c0       	rjmp	.+38     	; 0x936 <__stack+0x37>
     910:	88 85       	ldd	r24, Y+8	; 0x08
     912:	81 11       	cpse	r24, r1
     914:	04 c0       	rjmp	.+8      	; 0x91e <__stack+0x1f>
     916:	0f c0       	rjmp	.+30     	; 0x936 <__stack+0x37>
     918:	8e 01       	movw	r16, r28
     91a:	08 5f       	subi	r16, 0xF8	; 248
     91c:	1f 4f       	sbci	r17, 0xFF	; 255
     91e:	c8 01       	movw	r24, r16
     920:	0e 94 0f 0a 	call	0x141e	; 0x141e <xTaskRemoveFromEventList>
     924:	81 11       	cpse	r24, r1
     926:	0e 94 9b 0a 	call	0x1536	; 0x1536 <vTaskMissedYield>
     92a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     92c:	81 50       	subi	r24, 0x01	; 1
     92e:	8d 8f       	std	Y+29, r24	; 0x1d
     930:	8d 8d       	ldd	r24, Y+29	; 0x1d
     932:	18 16       	cp	r1, r24
     934:	6c f3       	brlt	.-38     	; 0x910 <__stack+0x11>
     936:	8f ef       	ldi	r24, 0xFF	; 255
     938:	8d 8f       	std	Y+29, r24	; 0x1d
     93a:	0f 90       	pop	r0
     93c:	0f be       	out	0x3f, r0	; 63
     93e:	df 91       	pop	r29
     940:	cf 91       	pop	r28
     942:	1f 91       	pop	r17
     944:	0f 91       	pop	r16
     946:	08 95       	ret

00000948 <xQueueGenericReset>:
     948:	cf 93       	push	r28
     94a:	df 93       	push	r29
     94c:	ec 01       	movw	r28, r24
     94e:	0f b6       	in	r0, 0x3f	; 63
     950:	f8 94       	cli
     952:	0f 92       	push	r0
     954:	48 81       	ld	r20, Y
     956:	59 81       	ldd	r21, Y+1	; 0x01
     958:	2c 8d       	ldd	r18, Y+28	; 0x1c
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	7b 8d       	ldd	r23, Y+27	; 0x1b
     95e:	72 9f       	mul	r23, r18
     960:	c0 01       	movw	r24, r0
     962:	73 9f       	mul	r23, r19
     964:	90 0d       	add	r25, r0
     966:	11 24       	eor	r1, r1
     968:	fa 01       	movw	r30, r20
     96a:	e8 0f       	add	r30, r24
     96c:	f9 1f       	adc	r31, r25
     96e:	fb 83       	std	Y+3, r31	; 0x03
     970:	ea 83       	std	Y+2, r30	; 0x02
     972:	1a 8e       	std	Y+26, r1	; 0x1a
     974:	5d 83       	std	Y+5, r21	; 0x05
     976:	4c 83       	std	Y+4, r20	; 0x04
     978:	82 1b       	sub	r24, r18
     97a:	93 0b       	sbc	r25, r19
     97c:	84 0f       	add	r24, r20
     97e:	95 1f       	adc	r25, r21
     980:	9f 83       	std	Y+7, r25	; 0x07
     982:	8e 83       	std	Y+6, r24	; 0x06
     984:	8f ef       	ldi	r24, 0xFF	; 255
     986:	8d 8f       	std	Y+29, r24	; 0x1d
     988:	8e 8f       	std	Y+30, r24	; 0x1e
     98a:	61 11       	cpse	r22, r1
     98c:	0c c0       	rjmp	.+24     	; 0x9a6 <xQueueGenericReset+0x5e>
     98e:	88 85       	ldd	r24, Y+8	; 0x08
     990:	88 23       	and	r24, r24
     992:	89 f0       	breq	.+34     	; 0x9b6 <xQueueGenericReset+0x6e>
     994:	ce 01       	movw	r24, r28
     996:	08 96       	adiw	r24, 0x08	; 8
     998:	0e 94 0f 0a 	call	0x141e	; 0x141e <xTaskRemoveFromEventList>
     99c:	81 30       	cpi	r24, 0x01	; 1
     99e:	59 f4       	brne	.+22     	; 0x9b6 <xQueueGenericReset+0x6e>
     9a0:	0e 94 59 02 	call	0x4b2	; 0x4b2 <vPortYield>
     9a4:	08 c0       	rjmp	.+16     	; 0x9b6 <xQueueGenericReset+0x6e>
     9a6:	ce 01       	movw	r24, r28
     9a8:	08 96       	adiw	r24, 0x08	; 8
     9aa:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     9ae:	ce 01       	movw	r24, r28
     9b0:	41 96       	adiw	r24, 0x11	; 17
     9b2:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     9b6:	0f 90       	pop	r0
     9b8:	0f be       	out	0x3f, r0	; 63
     9ba:	81 e0       	ldi	r24, 0x01	; 1
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	08 95       	ret

000009c2 <xQueueGenericCreate>:
     9c2:	0f 93       	push	r16
     9c4:	1f 93       	push	r17
     9c6:	cf 93       	push	r28
     9c8:	df 93       	push	r29
     9ca:	08 2f       	mov	r16, r24
     9cc:	16 2f       	mov	r17, r22
     9ce:	66 23       	and	r22, r22
     9d0:	b9 f0       	breq	.+46     	; 0xa00 <xQueueGenericCreate+0x3e>
     9d2:	86 9f       	mul	r24, r22
     9d4:	c0 01       	movw	r24, r0
     9d6:	11 24       	eor	r1, r1
     9d8:	80 96       	adiw	r24, 0x20	; 32
     9da:	0e 94 11 03 	call	0x622	; 0x622 <pvPortMalloc>
     9de:	ec 01       	movw	r28, r24
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	21 f4       	brne	.+8      	; 0x9ec <xQueueGenericCreate+0x2a>
     9e4:	14 c0       	rjmp	.+40     	; 0xa0e <xQueueGenericCreate+0x4c>
     9e6:	d9 83       	std	Y+1, r29	; 0x01
     9e8:	c8 83       	st	Y, r28
     9ea:	03 c0       	rjmp	.+6      	; 0x9f2 <xQueueGenericCreate+0x30>
     9ec:	4f 96       	adiw	r24, 0x1f	; 31
     9ee:	99 83       	std	Y+1, r25	; 0x01
     9f0:	88 83       	st	Y, r24
     9f2:	0b 8f       	std	Y+27, r16	; 0x1b
     9f4:	1c 8f       	std	Y+28, r17	; 0x1c
     9f6:	61 e0       	ldi	r22, 0x01	; 1
     9f8:	ce 01       	movw	r24, r28
     9fa:	0e 94 a4 04 	call	0x948	; 0x948 <xQueueGenericReset>
     9fe:	07 c0       	rjmp	.+14     	; 0xa0e <xQueueGenericCreate+0x4c>
     a00:	8f e1       	ldi	r24, 0x1F	; 31
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	0e 94 11 03 	call	0x622	; 0x622 <pvPortMalloc>
     a08:	ec 01       	movw	r28, r24
     a0a:	89 2b       	or	r24, r25
     a0c:	61 f7       	brne	.-40     	; 0x9e6 <xQueueGenericCreate+0x24>
     a0e:	ce 01       	movw	r24, r28
     a10:	df 91       	pop	r29
     a12:	cf 91       	pop	r28
     a14:	1f 91       	pop	r17
     a16:	0f 91       	pop	r16
     a18:	08 95       	ret

00000a1a <xQueueGenericSendFromISR>:
     a1a:	0f 93       	push	r16
     a1c:	1f 93       	push	r17
     a1e:	cf 93       	push	r28
     a20:	df 93       	push	r29
     a22:	fa 01       	movw	r30, r20
     a24:	dc 01       	movw	r26, r24
     a26:	5a 96       	adiw	r26, 0x1a	; 26
     a28:	5c 91       	ld	r21, X
     a2a:	5a 97       	sbiw	r26, 0x1a	; 26
     a2c:	5b 96       	adiw	r26, 0x1b	; 27
     a2e:	3c 91       	ld	r19, X
     a30:	53 17       	cp	r21, r19
     a32:	10 f0       	brcs	.+4      	; 0xa38 <xQueueGenericSendFromISR+0x1e>
     a34:	22 30       	cpi	r18, 0x02	; 2
     a36:	e9 f4       	brne	.+58     	; 0xa72 <xQueueGenericSendFromISR+0x58>
     a38:	42 2f       	mov	r20, r18
     a3a:	8f 01       	movw	r16, r30
     a3c:	ec 01       	movw	r28, r24
     a3e:	0e 94 de 03 	call	0x7bc	; 0x7bc <prvCopyDataToQueue>
     a42:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a44:	8f 3f       	cpi	r24, 0xFF	; 255
     a46:	81 f4       	brne	.+32     	; 0xa68 <xQueueGenericSendFromISR+0x4e>
     a48:	89 89       	ldd	r24, Y+17	; 0x11
     a4a:	88 23       	and	r24, r24
     a4c:	a1 f0       	breq	.+40     	; 0xa76 <xQueueGenericSendFromISR+0x5c>
     a4e:	ce 01       	movw	r24, r28
     a50:	41 96       	adiw	r24, 0x11	; 17
     a52:	0e 94 0f 0a 	call	0x141e	; 0x141e <xTaskRemoveFromEventList>
     a56:	88 23       	and	r24, r24
     a58:	81 f0       	breq	.+32     	; 0xa7a <xQueueGenericSendFromISR+0x60>
     a5a:	01 15       	cp	r16, r1
     a5c:	11 05       	cpc	r17, r1
     a5e:	79 f0       	breq	.+30     	; 0xa7e <xQueueGenericSendFromISR+0x64>
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	f8 01       	movw	r30, r16
     a64:	80 83       	st	Z, r24
     a66:	0c c0       	rjmp	.+24     	; 0xa80 <xQueueGenericSendFromISR+0x66>
     a68:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a6a:	8f 5f       	subi	r24, 0xFF	; 255
     a6c:	8e 8f       	std	Y+30, r24	; 0x1e
     a6e:	81 e0       	ldi	r24, 0x01	; 1
     a70:	07 c0       	rjmp	.+14     	; 0xa80 <xQueueGenericSendFromISR+0x66>
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	05 c0       	rjmp	.+10     	; 0xa80 <xQueueGenericSendFromISR+0x66>
     a76:	81 e0       	ldi	r24, 0x01	; 1
     a78:	03 c0       	rjmp	.+6      	; 0xa80 <xQueueGenericSendFromISR+0x66>
     a7a:	81 e0       	ldi	r24, 0x01	; 1
     a7c:	01 c0       	rjmp	.+2      	; 0xa80 <xQueueGenericSendFromISR+0x66>
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	1f 91       	pop	r17
     a86:	0f 91       	pop	r16
     a88:	08 95       	ret

00000a8a <xQueueGenericReceive>:
     a8a:	9f 92       	push	r9
     a8c:	af 92       	push	r10
     a8e:	bf 92       	push	r11
     a90:	cf 92       	push	r12
     a92:	df 92       	push	r13
     a94:	ef 92       	push	r14
     a96:	ff 92       	push	r15
     a98:	0f 93       	push	r16
     a9a:	1f 93       	push	r17
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
     aa0:	00 d0       	rcall	.+0      	; 0xaa2 <xQueueGenericReceive+0x18>
     aa2:	00 d0       	rcall	.+0      	; 0xaa4 <xQueueGenericReceive+0x1a>
     aa4:	1f 92       	push	r1
     aa6:	cd b7       	in	r28, 0x3d	; 61
     aa8:	de b7       	in	r29, 0x3e	; 62
     aaa:	8c 01       	movw	r16, r24
     aac:	6b 01       	movw	r12, r22
     aae:	5d 83       	std	Y+5, r21	; 0x05
     ab0:	4c 83       	std	Y+4, r20	; 0x04
     ab2:	92 2e       	mov	r9, r18
     ab4:	b1 2c       	mov	r11, r1
     ab6:	aa 24       	eor	r10, r10
     ab8:	a3 94       	inc	r10
     aba:	7c 01       	movw	r14, r24
     abc:	81 e1       	ldi	r24, 0x11	; 17
     abe:	e8 0e       	add	r14, r24
     ac0:	f1 1c       	adc	r15, r1
     ac2:	0f b6       	in	r0, 0x3f	; 63
     ac4:	f8 94       	cli
     ac6:	0f 92       	push	r0
     ac8:	f8 01       	movw	r30, r16
     aca:	82 8d       	ldd	r24, Z+26	; 0x1a
     acc:	88 23       	and	r24, r24
     ace:	99 f1       	breq	.+102    	; 0xb36 <xQueueGenericReceive+0xac>
     ad0:	e6 80       	ldd	r14, Z+6	; 0x06
     ad2:	f7 80       	ldd	r15, Z+7	; 0x07
     ad4:	b6 01       	movw	r22, r12
     ad6:	c8 01       	movw	r24, r16
     ad8:	0e 94 3e 04 	call	0x87c	; 0x87c <prvCopyDataFromQueue>
     adc:	91 10       	cpse	r9, r1
     ade:	1a c0       	rjmp	.+52     	; 0xb14 <xQueueGenericReceive+0x8a>
     ae0:	f8 01       	movw	r30, r16
     ae2:	82 8d       	ldd	r24, Z+26	; 0x1a
     ae4:	81 50       	subi	r24, 0x01	; 1
     ae6:	82 8f       	std	Z+26, r24	; 0x1a
     ae8:	80 81       	ld	r24, Z
     aea:	91 81       	ldd	r25, Z+1	; 0x01
     aec:	89 2b       	or	r24, r25
     aee:	29 f4       	brne	.+10     	; 0xafa <xQueueGenericReceive+0x70>
     af0:	0e 94 41 0b 	call	0x1682	; 0x1682 <pvTaskIncrementMutexHeldCount>
     af4:	f8 01       	movw	r30, r16
     af6:	93 83       	std	Z+3, r25	; 0x03
     af8:	82 83       	std	Z+2, r24	; 0x02
     afa:	f8 01       	movw	r30, r16
     afc:	80 85       	ldd	r24, Z+8	; 0x08
     afe:	88 23       	and	r24, r24
     b00:	b1 f0       	breq	.+44     	; 0xb2e <xQueueGenericReceive+0xa4>
     b02:	c8 01       	movw	r24, r16
     b04:	08 96       	adiw	r24, 0x08	; 8
     b06:	0e 94 0f 0a 	call	0x141e	; 0x141e <xTaskRemoveFromEventList>
     b0a:	81 30       	cpi	r24, 0x01	; 1
     b0c:	81 f4       	brne	.+32     	; 0xb2e <xQueueGenericReceive+0xa4>
     b0e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <vPortYield>
     b12:	0d c0       	rjmp	.+26     	; 0xb2e <xQueueGenericReceive+0xa4>
     b14:	f8 01       	movw	r30, r16
     b16:	f7 82       	std	Z+7, r15	; 0x07
     b18:	e6 82       	std	Z+6, r14	; 0x06
     b1a:	81 89       	ldd	r24, Z+17	; 0x11
     b1c:	88 23       	and	r24, r24
     b1e:	39 f0       	breq	.+14     	; 0xb2e <xQueueGenericReceive+0xa4>
     b20:	c8 01       	movw	r24, r16
     b22:	41 96       	adiw	r24, 0x11	; 17
     b24:	0e 94 0f 0a 	call	0x141e	; 0x141e <xTaskRemoveFromEventList>
     b28:	81 11       	cpse	r24, r1
     b2a:	0e 94 59 02 	call	0x4b2	; 0x4b2 <vPortYield>
     b2e:	0f 90       	pop	r0
     b30:	0f be       	out	0x3f, r0	; 63
     b32:	81 e0       	ldi	r24, 0x01	; 1
     b34:	5c c0       	rjmp	.+184    	; 0xbee <xQueueGenericReceive+0x164>
     b36:	8c 81       	ldd	r24, Y+4	; 0x04
     b38:	9d 81       	ldd	r25, Y+5	; 0x05
     b3a:	89 2b       	or	r24, r25
     b3c:	21 f4       	brne	.+8      	; 0xb46 <xQueueGenericReceive+0xbc>
     b3e:	0f 90       	pop	r0
     b40:	0f be       	out	0x3f, r0	; 63
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	54 c0       	rjmp	.+168    	; 0xbee <xQueueGenericReceive+0x164>
     b46:	b1 10       	cpse	r11, r1
     b48:	05 c0       	rjmp	.+10     	; 0xb54 <xQueueGenericReceive+0xca>
     b4a:	ce 01       	movw	r24, r28
     b4c:	01 96       	adiw	r24, 0x01	; 1
     b4e:	0e 94 57 0a 	call	0x14ae	; 0x14ae <vTaskSetTimeOutState>
     b52:	ba 2c       	mov	r11, r10
     b54:	0f 90       	pop	r0
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	0e 94 a3 07 	call	0xf46	; 0xf46 <vTaskSuspendAll>
     b5c:	0f b6       	in	r0, 0x3f	; 63
     b5e:	f8 94       	cli
     b60:	0f 92       	push	r0
     b62:	f8 01       	movw	r30, r16
     b64:	85 8d       	ldd	r24, Z+29	; 0x1d
     b66:	8f 3f       	cpi	r24, 0xFF	; 255
     b68:	09 f4       	brne	.+2      	; 0xb6c <xQueueGenericReceive+0xe2>
     b6a:	15 8e       	std	Z+29, r1	; 0x1d
     b6c:	f8 01       	movw	r30, r16
     b6e:	86 8d       	ldd	r24, Z+30	; 0x1e
     b70:	8f 3f       	cpi	r24, 0xFF	; 255
     b72:	09 f4       	brne	.+2      	; 0xb76 <xQueueGenericReceive+0xec>
     b74:	16 8e       	std	Z+30, r1	; 0x1e
     b76:	0f 90       	pop	r0
     b78:	0f be       	out	0x3f, r0	; 63
     b7a:	be 01       	movw	r22, r28
     b7c:	6c 5f       	subi	r22, 0xFC	; 252
     b7e:	7f 4f       	sbci	r23, 0xFF	; 255
     b80:	ce 01       	movw	r24, r28
     b82:	01 96       	adiw	r24, 0x01	; 1
     b84:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <xTaskCheckForTimeOut>
     b88:	81 11       	cpse	r24, r1
     b8a:	2b c0       	rjmp	.+86     	; 0xbe2 <xQueueGenericReceive+0x158>
     b8c:	0f b6       	in	r0, 0x3f	; 63
     b8e:	f8 94       	cli
     b90:	0f 92       	push	r0
     b92:	f8 01       	movw	r30, r16
     b94:	82 8d       	ldd	r24, Z+26	; 0x1a
     b96:	0f 90       	pop	r0
     b98:	0f be       	out	0x3f, r0	; 63
     b9a:	81 11       	cpse	r24, r1
     b9c:	1c c0       	rjmp	.+56     	; 0xbd6 <xQueueGenericReceive+0x14c>
     b9e:	80 81       	ld	r24, Z
     ba0:	91 81       	ldd	r25, Z+1	; 0x01
     ba2:	89 2b       	or	r24, r25
     ba4:	49 f4       	brne	.+18     	; 0xbb8 <xQueueGenericReceive+0x12e>
     ba6:	0f b6       	in	r0, 0x3f	; 63
     ba8:	f8 94       	cli
     baa:	0f 92       	push	r0
     bac:	82 81       	ldd	r24, Z+2	; 0x02
     bae:	93 81       	ldd	r25, Z+3	; 0x03
     bb0:	0e 94 9f 0a 	call	0x153e	; 0x153e <vTaskPriorityInherit>
     bb4:	0f 90       	pop	r0
     bb6:	0f be       	out	0x3f, r0	; 63
     bb8:	6c 81       	ldd	r22, Y+4	; 0x04
     bba:	7d 81       	ldd	r23, Y+5	; 0x05
     bbc:	c7 01       	movw	r24, r14
     bbe:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <vTaskPlaceOnEventList>
     bc2:	c8 01       	movw	r24, r16
     bc4:	0e 94 58 04 	call	0x8b0	; 0x8b0 <prvUnlockQueue>
     bc8:	0e 94 75 08 	call	0x10ea	; 0x10ea <xTaskResumeAll>
     bcc:	81 11       	cpse	r24, r1
     bce:	79 cf       	rjmp	.-270    	; 0xac2 <xQueueGenericReceive+0x38>
     bd0:	0e 94 59 02 	call	0x4b2	; 0x4b2 <vPortYield>
     bd4:	76 cf       	rjmp	.-276    	; 0xac2 <xQueueGenericReceive+0x38>
     bd6:	c8 01       	movw	r24, r16
     bd8:	0e 94 58 04 	call	0x8b0	; 0x8b0 <prvUnlockQueue>
     bdc:	0e 94 75 08 	call	0x10ea	; 0x10ea <xTaskResumeAll>
     be0:	70 cf       	rjmp	.-288    	; 0xac2 <xQueueGenericReceive+0x38>
     be2:	c8 01       	movw	r24, r16
     be4:	0e 94 58 04 	call	0x8b0	; 0x8b0 <prvUnlockQueue>
     be8:	0e 94 75 08 	call	0x10ea	; 0x10ea <xTaskResumeAll>
     bec:	80 e0       	ldi	r24, 0x00	; 0
     bee:	0f 90       	pop	r0
     bf0:	0f 90       	pop	r0
     bf2:	0f 90       	pop	r0
     bf4:	0f 90       	pop	r0
     bf6:	0f 90       	pop	r0
     bf8:	df 91       	pop	r29
     bfa:	cf 91       	pop	r28
     bfc:	1f 91       	pop	r17
     bfe:	0f 91       	pop	r16
     c00:	ff 90       	pop	r15
     c02:	ef 90       	pop	r14
     c04:	df 90       	pop	r13
     c06:	cf 90       	pop	r12
     c08:	bf 90       	pop	r11
     c0a:	af 90       	pop	r10
     c0c:	9f 90       	pop	r9
     c0e:	08 95       	ret

00000c10 <uxQueueMessagesWaiting>:
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	0f 92       	push	r0
     c16:	fc 01       	movw	r30, r24
     c18:	82 8d       	ldd	r24, Z+26	; 0x1a
     c1a:	0f 90       	pop	r0
     c1c:	0f be       	out	0x3f, r0	; 63
     c1e:	08 95       	ret

00000c20 <prvResetNextTaskUnblockTime>:
     c20:	e0 91 f3 07 	lds	r30, 0x07F3	; 0x8007f3 <pxDelayedTaskList>
     c24:	f0 91 f4 07 	lds	r31, 0x07F4	; 0x8007f4 <pxDelayedTaskList+0x1>
     c28:	80 81       	ld	r24, Z
     c2a:	81 11       	cpse	r24, r1
     c2c:	07 c0       	rjmp	.+14     	; 0xc3c <prvResetNextTaskUnblockTime+0x1c>
     c2e:	8f ef       	ldi	r24, 0xFF	; 255
     c30:	9f ef       	ldi	r25, 0xFF	; 255
     c32:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <xNextTaskUnblockTime+0x1>
     c36:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <xNextTaskUnblockTime>
     c3a:	08 95       	ret
     c3c:	e0 91 f3 07 	lds	r30, 0x07F3	; 0x8007f3 <pxDelayedTaskList>
     c40:	f0 91 f4 07 	lds	r31, 0x07F4	; 0x8007f4 <pxDelayedTaskList+0x1>
     c44:	05 80       	ldd	r0, Z+5	; 0x05
     c46:	f6 81       	ldd	r31, Z+6	; 0x06
     c48:	e0 2d       	mov	r30, r0
     c4a:	06 80       	ldd	r0, Z+6	; 0x06
     c4c:	f7 81       	ldd	r31, Z+7	; 0x07
     c4e:	e0 2d       	mov	r30, r0
     c50:	82 81       	ldd	r24, Z+2	; 0x02
     c52:	93 81       	ldd	r25, Z+3	; 0x03
     c54:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <xNextTaskUnblockTime+0x1>
     c58:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <xNextTaskUnblockTime>
     c5c:	08 95       	ret

00000c5e <prvAddCurrentTaskToDelayedList>:
     c5e:	cf 93       	push	r28
     c60:	df 93       	push	r29
     c62:	ec 01       	movw	r28, r24
     c64:	e0 91 22 08 	lds	r30, 0x0822	; 0x800822 <pxCurrentTCB>
     c68:	f0 91 23 08 	lds	r31, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     c6c:	93 83       	std	Z+3, r25	; 0x03
     c6e:	82 83       	std	Z+2, r24	; 0x02
     c70:	80 91 d0 07 	lds	r24, 0x07D0	; 0x8007d0 <xTickCount>
     c74:	90 91 d1 07 	lds	r25, 0x07D1	; 0x8007d1 <xTickCount+0x1>
     c78:	c8 17       	cp	r28, r24
     c7a:	d9 07       	cpc	r29, r25
     c7c:	68 f4       	brcc	.+26     	; 0xc98 <prvAddCurrentTaskToDelayedList+0x3a>
     c7e:	60 91 22 08 	lds	r22, 0x0822	; 0x800822 <pxCurrentTCB>
     c82:	70 91 23 08 	lds	r23, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     c86:	80 91 f1 07 	lds	r24, 0x07F1	; 0x8007f1 <pxOverflowDelayedTaskList>
     c8a:	90 91 f2 07 	lds	r25, 0x07F2	; 0x8007f2 <pxOverflowDelayedTaskList+0x1>
     c8e:	6e 5f       	subi	r22, 0xFE	; 254
     c90:	7f 4f       	sbci	r23, 0xFF	; 255
     c92:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <vListInsert>
     c96:	17 c0       	rjmp	.+46     	; 0xcc6 <prvAddCurrentTaskToDelayedList+0x68>
     c98:	60 91 22 08 	lds	r22, 0x0822	; 0x800822 <pxCurrentTCB>
     c9c:	70 91 23 08 	lds	r23, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     ca0:	80 91 f3 07 	lds	r24, 0x07F3	; 0x8007f3 <pxDelayedTaskList>
     ca4:	90 91 f4 07 	lds	r25, 0x07F4	; 0x8007f4 <pxDelayedTaskList+0x1>
     ca8:	6e 5f       	subi	r22, 0xFE	; 254
     caa:	7f 4f       	sbci	r23, 0xFF	; 255
     cac:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <vListInsert>
     cb0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <xNextTaskUnblockTime>
     cb4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <xNextTaskUnblockTime+0x1>
     cb8:	c8 17       	cp	r28, r24
     cba:	d9 07       	cpc	r29, r25
     cbc:	20 f4       	brcc	.+8      	; 0xcc6 <prvAddCurrentTaskToDelayedList+0x68>
     cbe:	d0 93 0d 01 	sts	0x010D, r29	; 0x80010d <xNextTaskUnblockTime+0x1>
     cc2:	c0 93 0c 01 	sts	0x010C, r28	; 0x80010c <xNextTaskUnblockTime>
     cc6:	df 91       	pop	r29
     cc8:	cf 91       	pop	r28
     cca:	08 95       	ret

00000ccc <xTaskGenericCreate>:
     ccc:	4f 92       	push	r4
     cce:	5f 92       	push	r5
     cd0:	6f 92       	push	r6
     cd2:	7f 92       	push	r7
     cd4:	8f 92       	push	r8
     cd6:	9f 92       	push	r9
     cd8:	af 92       	push	r10
     cda:	bf 92       	push	r11
     cdc:	cf 92       	push	r12
     cde:	df 92       	push	r13
     ce0:	ef 92       	push	r14
     ce2:	ff 92       	push	r15
     ce4:	0f 93       	push	r16
     ce6:	1f 93       	push	r17
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
     cec:	4c 01       	movw	r8, r24
     cee:	eb 01       	movw	r28, r22
     cf0:	5a 01       	movw	r10, r20
     cf2:	29 01       	movw	r4, r18
     cf4:	c1 14       	cp	r12, r1
     cf6:	d1 04       	cpc	r13, r1
     cf8:	39 f4       	brne	.+14     	; 0xd08 <xTaskGenericCreate+0x3c>
     cfa:	ca 01       	movw	r24, r20
     cfc:	0e 94 11 03 	call	0x622	; 0x622 <pvPortMalloc>
     d00:	6c 01       	movw	r12, r24
     d02:	89 2b       	or	r24, r25
     d04:	09 f4       	brne	.+2      	; 0xd08 <xTaskGenericCreate+0x3c>
     d06:	de c0       	rjmp	.+444    	; 0xec4 <xTaskGenericCreate+0x1f8>
     d08:	88 e2       	ldi	r24, 0x28	; 40
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	0e 94 11 03 	call	0x622	; 0x622 <pvPortMalloc>
     d10:	3c 01       	movw	r6, r24
     d12:	00 97       	sbiw	r24, 0x00	; 0
     d14:	79 f0       	breq	.+30     	; 0xd34 <xTaskGenericCreate+0x68>
     d16:	fc 01       	movw	r30, r24
     d18:	d0 8e       	std	Z+24, r13	; 0x18
     d1a:	c7 8a       	std	Z+23, r12	; 0x17
     d1c:	f1 e0       	ldi	r31, 0x01	; 1
     d1e:	af 1a       	sub	r10, r31
     d20:	b1 08       	sbc	r11, r1
     d22:	ca 0c       	add	r12, r10
     d24:	db 1c       	adc	r13, r11
     d26:	88 81       	ld	r24, Y
     d28:	f3 01       	movw	r30, r6
     d2a:	81 8f       	std	Z+25, r24	; 0x19
     d2c:	88 81       	ld	r24, Y
     d2e:	81 11       	cpse	r24, r1
     d30:	05 c0       	rjmp	.+10     	; 0xd3c <xTaskGenericCreate+0x70>
     d32:	14 c0       	rjmp	.+40     	; 0xd5c <xTaskGenericCreate+0x90>
     d34:	c6 01       	movw	r24, r12
     d36:	0e 94 ab 03 	call	0x756	; 0x756 <vPortFree>
     d3a:	c4 c0       	rjmp	.+392    	; 0xec4 <xTaskGenericCreate+0x1f8>
     d3c:	d3 01       	movw	r26, r6
     d3e:	5a 96       	adiw	r26, 0x1a	; 26
     d40:	fe 01       	movw	r30, r28
     d42:	31 96       	adiw	r30, 0x01	; 1
     d44:	9e 01       	movw	r18, r28
     d46:	28 5f       	subi	r18, 0xF8	; 248
     d48:	3f 4f       	sbci	r19, 0xFF	; 255
     d4a:	ef 01       	movw	r28, r30
     d4c:	81 91       	ld	r24, Z+
     d4e:	8d 93       	st	X+, r24
     d50:	88 81       	ld	r24, Y
     d52:	88 23       	and	r24, r24
     d54:	19 f0       	breq	.+6      	; 0xd5c <xTaskGenericCreate+0x90>
     d56:	e2 17       	cp	r30, r18
     d58:	f3 07       	cpc	r31, r19
     d5a:	b9 f7       	brne	.-18     	; 0xd4a <xTaskGenericCreate+0x7e>
     d5c:	f3 01       	movw	r30, r6
     d5e:	10 a2       	std	Z+32, r1	; 0x20
     d60:	10 2f       	mov	r17, r16
     d62:	03 30       	cpi	r16, 0x03	; 3
     d64:	08 f0       	brcs	.+2      	; 0xd68 <xTaskGenericCreate+0x9c>
     d66:	12 e0       	ldi	r17, 0x02	; 2
     d68:	f3 01       	movw	r30, r6
     d6a:	16 8b       	std	Z+22, r17	; 0x16
     d6c:	11 a3       	std	Z+33, r17	; 0x21
     d6e:	12 a2       	std	Z+34, r1	; 0x22
     d70:	e3 01       	movw	r28, r6
     d72:	22 96       	adiw	r28, 0x02	; 2
     d74:	ce 01       	movw	r24, r28
     d76:	0e 94 37 01 	call	0x26e	; 0x26e <vListInitialiseItem>
     d7a:	c3 01       	movw	r24, r6
     d7c:	0c 96       	adiw	r24, 0x0c	; 12
     d7e:	0e 94 37 01 	call	0x26e	; 0x26e <vListInitialiseItem>
     d82:	f3 01       	movw	r30, r6
     d84:	71 86       	std	Z+9, r7	; 0x09
     d86:	60 86       	std	Z+8, r6	; 0x08
     d88:	83 e0       	ldi	r24, 0x03	; 3
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	81 1b       	sub	r24, r17
     d8e:	91 09       	sbc	r25, r1
     d90:	95 87       	std	Z+13, r25	; 0x0d
     d92:	84 87       	std	Z+12, r24	; 0x0c
     d94:	73 8a       	std	Z+19, r7	; 0x13
     d96:	62 8a       	std	Z+18, r6	; 0x12
     d98:	13 a2       	std	Z+35, r1	; 0x23
     d9a:	14 a2       	std	Z+36, r1	; 0x24
     d9c:	15 a2       	std	Z+37, r1	; 0x25
     d9e:	16 a2       	std	Z+38, r1	; 0x26
     da0:	17 a2       	std	Z+39, r1	; 0x27
     da2:	a2 01       	movw	r20, r4
     da4:	b4 01       	movw	r22, r8
     da6:	c6 01       	movw	r24, r12
     da8:	0e 94 b3 01 	call	0x366	; 0x366 <pxPortInitialiseStack>
     dac:	f3 01       	movw	r30, r6
     dae:	91 83       	std	Z+1, r25	; 0x01
     db0:	80 83       	st	Z, r24
     db2:	e1 14       	cp	r14, r1
     db4:	f1 04       	cpc	r15, r1
     db6:	19 f0       	breq	.+6      	; 0xdbe <xTaskGenericCreate+0xf2>
     db8:	f7 01       	movw	r30, r14
     dba:	71 82       	std	Z+1, r7	; 0x01
     dbc:	60 82       	st	Z, r6
     dbe:	0f b6       	in	r0, 0x3f	; 63
     dc0:	f8 94       	cli
     dc2:	0f 92       	push	r0
     dc4:	80 91 d2 07 	lds	r24, 0x07D2	; 0x8007d2 <uxCurrentNumberOfTasks>
     dc8:	8f 5f       	subi	r24, 0xFF	; 255
     dca:	80 93 d2 07 	sts	0x07D2, r24	; 0x8007d2 <uxCurrentNumberOfTasks>
     dce:	80 91 22 08 	lds	r24, 0x0822	; 0x800822 <pxCurrentTCB>
     dd2:	90 91 23 08 	lds	r25, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     dd6:	89 2b       	or	r24, r25
     dd8:	a9 f5       	brne	.+106    	; 0xe44 <xTaskGenericCreate+0x178>
     dda:	70 92 23 08 	sts	0x0823, r7	; 0x800823 <pxCurrentTCB+0x1>
     dde:	60 92 22 08 	sts	0x0822, r6	; 0x800822 <pxCurrentTCB>
     de2:	80 91 d2 07 	lds	r24, 0x07D2	; 0x8007d2 <uxCurrentNumberOfTasks>
     de6:	81 30       	cpi	r24, 0x01	; 1
     de8:	e1 f5       	brne	.+120    	; 0xe62 <xTaskGenericCreate+0x196>
     dea:	87 e0       	ldi	r24, 0x07	; 7
     dec:	98 e0       	ldi	r25, 0x08	; 8
     dee:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     df2:	80 e1       	ldi	r24, 0x10	; 16
     df4:	98 e0       	ldi	r25, 0x08	; 8
     df6:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     dfa:	89 e1       	ldi	r24, 0x19	; 25
     dfc:	98 e0       	ldi	r25, 0x08	; 8
     dfe:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     e02:	8e ef       	ldi	r24, 0xFE	; 254
     e04:	97 e0       	ldi	r25, 0x07	; 7
     e06:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     e0a:	85 ef       	ldi	r24, 0xF5	; 245
     e0c:	97 e0       	ldi	r25, 0x07	; 7
     e0e:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     e12:	88 ee       	ldi	r24, 0xE8	; 232
     e14:	97 e0       	ldi	r25, 0x07	; 7
     e16:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     e1a:	8f ed       	ldi	r24, 0xDF	; 223
     e1c:	97 e0       	ldi	r25, 0x07	; 7
     e1e:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     e22:	85 ed       	ldi	r24, 0xD5	; 213
     e24:	97 e0       	ldi	r25, 0x07	; 7
     e26:	0e 94 29 01 	call	0x252	; 0x252 <vListInitialise>
     e2a:	8e ef       	ldi	r24, 0xFE	; 254
     e2c:	97 e0       	ldi	r25, 0x07	; 7
     e2e:	90 93 f4 07 	sts	0x07F4, r25	; 0x8007f4 <pxDelayedTaskList+0x1>
     e32:	80 93 f3 07 	sts	0x07F3, r24	; 0x8007f3 <pxDelayedTaskList>
     e36:	85 ef       	ldi	r24, 0xF5	; 245
     e38:	97 e0       	ldi	r25, 0x07	; 7
     e3a:	90 93 f2 07 	sts	0x07F2, r25	; 0x8007f2 <pxOverflowDelayedTaskList+0x1>
     e3e:	80 93 f1 07 	sts	0x07F1, r24	; 0x8007f1 <pxOverflowDelayedTaskList>
     e42:	0f c0       	rjmp	.+30     	; 0xe62 <xTaskGenericCreate+0x196>
     e44:	80 91 ce 07 	lds	r24, 0x07CE	; 0x8007ce <xSchedulerRunning>
     e48:	81 11       	cpse	r24, r1
     e4a:	0b c0       	rjmp	.+22     	; 0xe62 <xTaskGenericCreate+0x196>
     e4c:	e0 91 22 08 	lds	r30, 0x0822	; 0x800822 <pxCurrentTCB>
     e50:	f0 91 23 08 	lds	r31, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     e54:	86 89       	ldd	r24, Z+22	; 0x16
     e56:	08 17       	cp	r16, r24
     e58:	20 f0       	brcs	.+8      	; 0xe62 <xTaskGenericCreate+0x196>
     e5a:	70 92 23 08 	sts	0x0823, r7	; 0x800823 <pxCurrentTCB+0x1>
     e5e:	60 92 22 08 	sts	0x0822, r6	; 0x800822 <pxCurrentTCB>
     e62:	80 91 ca 07 	lds	r24, 0x07CA	; 0x8007ca <uxTaskNumber>
     e66:	8f 5f       	subi	r24, 0xFF	; 255
     e68:	80 93 ca 07 	sts	0x07CA, r24	; 0x8007ca <uxTaskNumber>
     e6c:	f3 01       	movw	r30, r6
     e6e:	86 89       	ldd	r24, Z+22	; 0x16
     e70:	90 91 cf 07 	lds	r25, 0x07CF	; 0x8007cf <uxTopReadyPriority>
     e74:	98 17       	cp	r25, r24
     e76:	10 f4       	brcc	.+4      	; 0xe7c <xTaskGenericCreate+0x1b0>
     e78:	80 93 cf 07 	sts	0x07CF, r24	; 0x8007cf <uxTopReadyPriority>
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	9c 01       	movw	r18, r24
     e80:	22 0f       	add	r18, r18
     e82:	33 1f       	adc	r19, r19
     e84:	22 0f       	add	r18, r18
     e86:	33 1f       	adc	r19, r19
     e88:	22 0f       	add	r18, r18
     e8a:	33 1f       	adc	r19, r19
     e8c:	82 0f       	add	r24, r18
     e8e:	93 1f       	adc	r25, r19
     e90:	be 01       	movw	r22, r28
     e92:	89 5f       	subi	r24, 0xF9	; 249
     e94:	97 4f       	sbci	r25, 0xF7	; 247
     e96:	0e 94 3b 01 	call	0x276	; 0x276 <vListInsertEnd>
     e9a:	0f 90       	pop	r0
     e9c:	0f be       	out	0x3f, r0	; 63
     e9e:	80 91 ce 07 	lds	r24, 0x07CE	; 0x8007ce <xSchedulerRunning>
     ea2:	88 23       	and	r24, r24
     ea4:	59 f0       	breq	.+22     	; 0xebc <xTaskGenericCreate+0x1f0>
     ea6:	e0 91 22 08 	lds	r30, 0x0822	; 0x800822 <pxCurrentTCB>
     eaa:	f0 91 23 08 	lds	r31, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
     eae:	86 89       	ldd	r24, Z+22	; 0x16
     eb0:	80 17       	cp	r24, r16
     eb2:	30 f4       	brcc	.+12     	; 0xec0 <xTaskGenericCreate+0x1f4>
     eb4:	0e 94 59 02 	call	0x4b2	; 0x4b2 <vPortYield>
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	05 c0       	rjmp	.+10     	; 0xec6 <xTaskGenericCreate+0x1fa>
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	03 c0       	rjmp	.+6      	; 0xec6 <xTaskGenericCreate+0x1fa>
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	01 c0       	rjmp	.+2      	; 0xec6 <xTaskGenericCreate+0x1fa>
     ec4:	8f ef       	ldi	r24, 0xFF	; 255
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	1f 91       	pop	r17
     ecc:	0f 91       	pop	r16
     ece:	ff 90       	pop	r15
     ed0:	ef 90       	pop	r14
     ed2:	df 90       	pop	r13
     ed4:	cf 90       	pop	r12
     ed6:	bf 90       	pop	r11
     ed8:	af 90       	pop	r10
     eda:	9f 90       	pop	r9
     edc:	8f 90       	pop	r8
     ede:	7f 90       	pop	r7
     ee0:	6f 90       	pop	r6
     ee2:	5f 90       	pop	r5
     ee4:	4f 90       	pop	r4
     ee6:	08 95       	ret

00000ee8 <vTaskStartScheduler>:
     ee8:	af 92       	push	r10
     eea:	bf 92       	push	r11
     eec:	cf 92       	push	r12
     eee:	df 92       	push	r13
     ef0:	ef 92       	push	r14
     ef2:	ff 92       	push	r15
     ef4:	0f 93       	push	r16
     ef6:	a1 2c       	mov	r10, r1
     ef8:	b1 2c       	mov	r11, r1
     efa:	c1 2c       	mov	r12, r1
     efc:	d1 2c       	mov	r13, r1
     efe:	0f 2e       	mov	r0, r31
     f00:	f3 ed       	ldi	r31, 0xD3	; 211
     f02:	ef 2e       	mov	r14, r31
     f04:	f7 e0       	ldi	r31, 0x07	; 7
     f06:	ff 2e       	mov	r15, r31
     f08:	f0 2d       	mov	r31, r0
     f0a:	00 e0       	ldi	r16, 0x00	; 0
     f0c:	20 e0       	ldi	r18, 0x00	; 0
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	45 e5       	ldi	r20, 0x55	; 85
     f12:	50 e0       	ldi	r21, 0x00	; 0
     f14:	6c ed       	ldi	r22, 0xDC	; 220
     f16:	71 e0       	ldi	r23, 0x01	; 1
     f18:	89 e3       	ldi	r24, 0x39	; 57
     f1a:	99 e0       	ldi	r25, 0x09	; 9
     f1c:	0e 94 66 06 	call	0xccc	; 0xccc <xTaskGenericCreate>
     f20:	81 30       	cpi	r24, 0x01	; 1
     f22:	49 f4       	brne	.+18     	; 0xf36 <vTaskStartScheduler+0x4e>
     f24:	f8 94       	cli
     f26:	80 93 ce 07 	sts	0x07CE, r24	; 0x8007ce <xSchedulerRunning>
     f2a:	10 92 d1 07 	sts	0x07D1, r1	; 0x8007d1 <xTickCount+0x1>
     f2e:	10 92 d0 07 	sts	0x07D0, r1	; 0x8007d0 <xTickCount>
     f32:	0e 94 1f 02 	call	0x43e	; 0x43e <xPortStartScheduler>
     f36:	0f 91       	pop	r16
     f38:	ff 90       	pop	r15
     f3a:	ef 90       	pop	r14
     f3c:	df 90       	pop	r13
     f3e:	cf 90       	pop	r12
     f40:	bf 90       	pop	r11
     f42:	af 90       	pop	r10
     f44:	08 95       	ret

00000f46 <vTaskSuspendAll>:
     f46:	80 91 c9 07 	lds	r24, 0x07C9	; 0x8007c9 <uxSchedulerSuspended>
     f4a:	8f 5f       	subi	r24, 0xFF	; 255
     f4c:	80 93 c9 07 	sts	0x07C9, r24	; 0x8007c9 <uxSchedulerSuspended>
     f50:	08 95       	ret

00000f52 <xTaskGetTickCount>:
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	f8 94       	cli
     f56:	0f 92       	push	r0
     f58:	80 91 d0 07 	lds	r24, 0x07D0	; 0x8007d0 <xTickCount>
     f5c:	90 91 d1 07 	lds	r25, 0x07D1	; 0x8007d1 <xTickCount+0x1>
     f60:	0f 90       	pop	r0
     f62:	0f be       	out	0x3f, r0	; 63
     f64:	08 95       	ret

00000f66 <xTaskGetTickCountFromISR>:
     f66:	80 91 d0 07 	lds	r24, 0x07D0	; 0x8007d0 <xTickCount>
     f6a:	90 91 d1 07 	lds	r25, 0x07D1	; 0x8007d1 <xTickCount+0x1>
     f6e:	08 95       	ret

00000f70 <xTaskIncrementTick>:
     f70:	cf 92       	push	r12
     f72:	df 92       	push	r13
     f74:	ef 92       	push	r14
     f76:	ff 92       	push	r15
     f78:	0f 93       	push	r16
     f7a:	1f 93       	push	r17
     f7c:	cf 93       	push	r28
     f7e:	df 93       	push	r29
     f80:	80 91 c9 07 	lds	r24, 0x07C9	; 0x8007c9 <uxSchedulerSuspended>
     f84:	81 11       	cpse	r24, r1
     f86:	9b c0       	rjmp	.+310    	; 0x10be <xTaskIncrementTick+0x14e>
     f88:	80 91 d0 07 	lds	r24, 0x07D0	; 0x8007d0 <xTickCount>
     f8c:	90 91 d1 07 	lds	r25, 0x07D1	; 0x8007d1 <xTickCount+0x1>
     f90:	01 96       	adiw	r24, 0x01	; 1
     f92:	90 93 d1 07 	sts	0x07D1, r25	; 0x8007d1 <xTickCount+0x1>
     f96:	80 93 d0 07 	sts	0x07D0, r24	; 0x8007d0 <xTickCount>
     f9a:	e0 90 d0 07 	lds	r14, 0x07D0	; 0x8007d0 <xTickCount>
     f9e:	f0 90 d1 07 	lds	r15, 0x07D1	; 0x8007d1 <xTickCount+0x1>
     fa2:	e1 14       	cp	r14, r1
     fa4:	f1 04       	cpc	r15, r1
     fa6:	b9 f4       	brne	.+46     	; 0xfd6 <xTaskIncrementTick+0x66>
     fa8:	80 91 f3 07 	lds	r24, 0x07F3	; 0x8007f3 <pxDelayedTaskList>
     fac:	90 91 f4 07 	lds	r25, 0x07F4	; 0x8007f4 <pxDelayedTaskList+0x1>
     fb0:	20 91 f1 07 	lds	r18, 0x07F1	; 0x8007f1 <pxOverflowDelayedTaskList>
     fb4:	30 91 f2 07 	lds	r19, 0x07F2	; 0x8007f2 <pxOverflowDelayedTaskList+0x1>
     fb8:	30 93 f4 07 	sts	0x07F4, r19	; 0x8007f4 <pxDelayedTaskList+0x1>
     fbc:	20 93 f3 07 	sts	0x07F3, r18	; 0x8007f3 <pxDelayedTaskList>
     fc0:	90 93 f2 07 	sts	0x07F2, r25	; 0x8007f2 <pxOverflowDelayedTaskList+0x1>
     fc4:	80 93 f1 07 	sts	0x07F1, r24	; 0x8007f1 <pxOverflowDelayedTaskList>
     fc8:	80 91 cb 07 	lds	r24, 0x07CB	; 0x8007cb <xNumOfOverflows>
     fcc:	8f 5f       	subi	r24, 0xFF	; 255
     fce:	80 93 cb 07 	sts	0x07CB, r24	; 0x8007cb <xNumOfOverflows>
     fd2:	0e 94 10 06 	call	0xc20	; 0xc20 <prvResetNextTaskUnblockTime>
     fd6:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <xNextTaskUnblockTime>
     fda:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <xNextTaskUnblockTime+0x1>
     fde:	e8 16       	cp	r14, r24
     fe0:	f9 06       	cpc	r15, r25
     fe2:	10 f4       	brcc	.+4      	; 0xfe8 <xTaskIncrementTick+0x78>
     fe4:	d1 2c       	mov	r13, r1
     fe6:	53 c0       	rjmp	.+166    	; 0x108e <xTaskIncrementTick+0x11e>
     fe8:	d1 2c       	mov	r13, r1
     fea:	cc 24       	eor	r12, r12
     fec:	c3 94       	inc	r12
     fee:	e0 91 f3 07 	lds	r30, 0x07F3	; 0x8007f3 <pxDelayedTaskList>
     ff2:	f0 91 f4 07 	lds	r31, 0x07F4	; 0x8007f4 <pxDelayedTaskList+0x1>
     ff6:	80 81       	ld	r24, Z
     ff8:	81 11       	cpse	r24, r1
     ffa:	07 c0       	rjmp	.+14     	; 0x100a <xTaskIncrementTick+0x9a>
     ffc:	8f ef       	ldi	r24, 0xFF	; 255
     ffe:	9f ef       	ldi	r25, 0xFF	; 255
    1000:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <xNextTaskUnblockTime+0x1>
    1004:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <xNextTaskUnblockTime>
    1008:	42 c0       	rjmp	.+132    	; 0x108e <xTaskIncrementTick+0x11e>
    100a:	e0 91 f3 07 	lds	r30, 0x07F3	; 0x8007f3 <pxDelayedTaskList>
    100e:	f0 91 f4 07 	lds	r31, 0x07F4	; 0x8007f4 <pxDelayedTaskList+0x1>
    1012:	05 80       	ldd	r0, Z+5	; 0x05
    1014:	f6 81       	ldd	r31, Z+6	; 0x06
    1016:	e0 2d       	mov	r30, r0
    1018:	c6 81       	ldd	r28, Z+6	; 0x06
    101a:	d7 81       	ldd	r29, Z+7	; 0x07
    101c:	8a 81       	ldd	r24, Y+2	; 0x02
    101e:	9b 81       	ldd	r25, Y+3	; 0x03
    1020:	e8 16       	cp	r14, r24
    1022:	f9 06       	cpc	r15, r25
    1024:	28 f4       	brcc	.+10     	; 0x1030 <xTaskIncrementTick+0xc0>
    1026:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <xNextTaskUnblockTime+0x1>
    102a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <xNextTaskUnblockTime>
    102e:	2f c0       	rjmp	.+94     	; 0x108e <xTaskIncrementTick+0x11e>
    1030:	8e 01       	movw	r16, r28
    1032:	0e 5f       	subi	r16, 0xFE	; 254
    1034:	1f 4f       	sbci	r17, 0xFF	; 255
    1036:	c8 01       	movw	r24, r16
    1038:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    103c:	8c 89       	ldd	r24, Y+20	; 0x14
    103e:	9d 89       	ldd	r25, Y+21	; 0x15
    1040:	89 2b       	or	r24, r25
    1042:	21 f0       	breq	.+8      	; 0x104c <xTaskIncrementTick+0xdc>
    1044:	ce 01       	movw	r24, r28
    1046:	0c 96       	adiw	r24, 0x0c	; 12
    1048:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    104c:	8e 89       	ldd	r24, Y+22	; 0x16
    104e:	90 91 cf 07 	lds	r25, 0x07CF	; 0x8007cf <uxTopReadyPriority>
    1052:	98 17       	cp	r25, r24
    1054:	10 f4       	brcc	.+4      	; 0x105a <xTaskIncrementTick+0xea>
    1056:	80 93 cf 07 	sts	0x07CF, r24	; 0x8007cf <uxTopReadyPriority>
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	9c 01       	movw	r18, r24
    105e:	22 0f       	add	r18, r18
    1060:	33 1f       	adc	r19, r19
    1062:	22 0f       	add	r18, r18
    1064:	33 1f       	adc	r19, r19
    1066:	22 0f       	add	r18, r18
    1068:	33 1f       	adc	r19, r19
    106a:	82 0f       	add	r24, r18
    106c:	93 1f       	adc	r25, r19
    106e:	b8 01       	movw	r22, r16
    1070:	89 5f       	subi	r24, 0xF9	; 249
    1072:	97 4f       	sbci	r25, 0xF7	; 247
    1074:	0e 94 3b 01 	call	0x276	; 0x276 <vListInsertEnd>
    1078:	e0 91 22 08 	lds	r30, 0x0822	; 0x800822 <pxCurrentTCB>
    107c:	f0 91 23 08 	lds	r31, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    1080:	9e 89       	ldd	r25, Y+22	; 0x16
    1082:	86 89       	ldd	r24, Z+22	; 0x16
    1084:	98 17       	cp	r25, r24
    1086:	08 f4       	brcc	.+2      	; 0x108a <xTaskIncrementTick+0x11a>
    1088:	b2 cf       	rjmp	.-156    	; 0xfee <xTaskIncrementTick+0x7e>
    108a:	dc 2c       	mov	r13, r12
    108c:	b0 cf       	rjmp	.-160    	; 0xfee <xTaskIncrementTick+0x7e>
    108e:	e0 91 22 08 	lds	r30, 0x0822	; 0x800822 <pxCurrentTCB>
    1092:	f0 91 23 08 	lds	r31, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    1096:	86 89       	ldd	r24, Z+22	; 0x16
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	fc 01       	movw	r30, r24
    109c:	ee 0f       	add	r30, r30
    109e:	ff 1f       	adc	r31, r31
    10a0:	ee 0f       	add	r30, r30
    10a2:	ff 1f       	adc	r31, r31
    10a4:	ee 0f       	add	r30, r30
    10a6:	ff 1f       	adc	r31, r31
    10a8:	8e 0f       	add	r24, r30
    10aa:	9f 1f       	adc	r25, r31
    10ac:	fc 01       	movw	r30, r24
    10ae:	e9 5f       	subi	r30, 0xF9	; 249
    10b0:	f7 4f       	sbci	r31, 0xF7	; 247
    10b2:	80 81       	ld	r24, Z
    10b4:	82 30       	cpi	r24, 0x02	; 2
    10b6:	48 f0       	brcs	.+18     	; 0x10ca <xTaskIncrementTick+0x15a>
    10b8:	dd 24       	eor	r13, r13
    10ba:	d3 94       	inc	r13
    10bc:	06 c0       	rjmp	.+12     	; 0x10ca <xTaskIncrementTick+0x15a>
    10be:	80 91 cd 07 	lds	r24, 0x07CD	; 0x8007cd <uxPendedTicks>
    10c2:	8f 5f       	subi	r24, 0xFF	; 255
    10c4:	80 93 cd 07 	sts	0x07CD, r24	; 0x8007cd <uxPendedTicks>
    10c8:	d1 2c       	mov	r13, r1
    10ca:	80 91 cc 07 	lds	r24, 0x07CC	; 0x8007cc <xYieldPending>
    10ce:	88 23       	and	r24, r24
    10d0:	11 f0       	breq	.+4      	; 0x10d6 <xTaskIncrementTick+0x166>
    10d2:	dd 24       	eor	r13, r13
    10d4:	d3 94       	inc	r13
    10d6:	8d 2d       	mov	r24, r13
    10d8:	df 91       	pop	r29
    10da:	cf 91       	pop	r28
    10dc:	1f 91       	pop	r17
    10de:	0f 91       	pop	r16
    10e0:	ff 90       	pop	r15
    10e2:	ef 90       	pop	r14
    10e4:	df 90       	pop	r13
    10e6:	cf 90       	pop	r12
    10e8:	08 95       	ret

000010ea <xTaskResumeAll>:
    10ea:	df 92       	push	r13
    10ec:	ef 92       	push	r14
    10ee:	ff 92       	push	r15
    10f0:	0f 93       	push	r16
    10f2:	1f 93       	push	r17
    10f4:	cf 93       	push	r28
    10f6:	df 93       	push	r29
    10f8:	0f b6       	in	r0, 0x3f	; 63
    10fa:	f8 94       	cli
    10fc:	0f 92       	push	r0
    10fe:	80 91 c9 07 	lds	r24, 0x07C9	; 0x8007c9 <uxSchedulerSuspended>
    1102:	81 50       	subi	r24, 0x01	; 1
    1104:	80 93 c9 07 	sts	0x07C9, r24	; 0x8007c9 <uxSchedulerSuspended>
    1108:	80 91 c9 07 	lds	r24, 0x07C9	; 0x8007c9 <uxSchedulerSuspended>
    110c:	81 11       	cpse	r24, r1
    110e:	62 c0       	rjmp	.+196    	; 0x11d4 <xTaskResumeAll+0xea>
    1110:	80 91 d2 07 	lds	r24, 0x07D2	; 0x8007d2 <uxCurrentNumberOfTasks>
    1114:	81 11       	cpse	r24, r1
    1116:	33 c0       	rjmp	.+102    	; 0x117e <xTaskResumeAll+0x94>
    1118:	60 c0       	rjmp	.+192    	; 0x11da <xTaskResumeAll+0xf0>
    111a:	d7 01       	movw	r26, r14
    111c:	15 96       	adiw	r26, 0x05	; 5
    111e:	ed 91       	ld	r30, X+
    1120:	fc 91       	ld	r31, X
    1122:	16 97       	sbiw	r26, 0x06	; 6
    1124:	c6 81       	ldd	r28, Z+6	; 0x06
    1126:	d7 81       	ldd	r29, Z+7	; 0x07
    1128:	ce 01       	movw	r24, r28
    112a:	0c 96       	adiw	r24, 0x0c	; 12
    112c:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    1130:	8e 01       	movw	r16, r28
    1132:	0e 5f       	subi	r16, 0xFE	; 254
    1134:	1f 4f       	sbci	r17, 0xFF	; 255
    1136:	c8 01       	movw	r24, r16
    1138:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    113c:	8e 89       	ldd	r24, Y+22	; 0x16
    113e:	90 91 cf 07 	lds	r25, 0x07CF	; 0x8007cf <uxTopReadyPriority>
    1142:	98 17       	cp	r25, r24
    1144:	10 f4       	brcc	.+4      	; 0x114a <xTaskResumeAll+0x60>
    1146:	80 93 cf 07 	sts	0x07CF, r24	; 0x8007cf <uxTopReadyPriority>
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	9c 01       	movw	r18, r24
    114e:	22 0f       	add	r18, r18
    1150:	33 1f       	adc	r19, r19
    1152:	22 0f       	add	r18, r18
    1154:	33 1f       	adc	r19, r19
    1156:	22 0f       	add	r18, r18
    1158:	33 1f       	adc	r19, r19
    115a:	82 0f       	add	r24, r18
    115c:	93 1f       	adc	r25, r19
    115e:	b8 01       	movw	r22, r16
    1160:	89 5f       	subi	r24, 0xF9	; 249
    1162:	97 4f       	sbci	r25, 0xF7	; 247
    1164:	0e 94 3b 01 	call	0x276	; 0x276 <vListInsertEnd>
    1168:	e0 91 22 08 	lds	r30, 0x0822	; 0x800822 <pxCurrentTCB>
    116c:	f0 91 23 08 	lds	r31, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    1170:	9e 89       	ldd	r25, Y+22	; 0x16
    1172:	86 89       	ldd	r24, Z+22	; 0x16
    1174:	98 17       	cp	r25, r24
    1176:	58 f0       	brcs	.+22     	; 0x118e <xTaskResumeAll+0xa4>
    1178:	d0 92 cc 07 	sts	0x07CC, r13	; 0x8007cc <xYieldPending>
    117c:	08 c0       	rjmp	.+16     	; 0x118e <xTaskResumeAll+0xa4>
    117e:	0f 2e       	mov	r0, r31
    1180:	f8 ee       	ldi	r31, 0xE8	; 232
    1182:	ef 2e       	mov	r14, r31
    1184:	f7 e0       	ldi	r31, 0x07	; 7
    1186:	ff 2e       	mov	r15, r31
    1188:	f0 2d       	mov	r31, r0
    118a:	dd 24       	eor	r13, r13
    118c:	d3 94       	inc	r13
    118e:	f7 01       	movw	r30, r14
    1190:	80 81       	ld	r24, Z
    1192:	81 11       	cpse	r24, r1
    1194:	c2 cf       	rjmp	.-124    	; 0x111a <xTaskResumeAll+0x30>
    1196:	80 91 cd 07 	lds	r24, 0x07CD	; 0x8007cd <uxPendedTicks>
    119a:	88 23       	and	r24, r24
    119c:	99 f0       	breq	.+38     	; 0x11c4 <xTaskResumeAll+0xda>
    119e:	80 91 cd 07 	lds	r24, 0x07CD	; 0x8007cd <uxPendedTicks>
    11a2:	88 23       	and	r24, r24
    11a4:	79 f0       	breq	.+30     	; 0x11c4 <xTaskResumeAll+0xda>
    11a6:	c1 e0       	ldi	r28, 0x01	; 1
    11a8:	0e 94 b8 07 	call	0xf70	; 0xf70 <xTaskIncrementTick>
    11ac:	81 11       	cpse	r24, r1
    11ae:	c0 93 cc 07 	sts	0x07CC, r28	; 0x8007cc <xYieldPending>
    11b2:	80 91 cd 07 	lds	r24, 0x07CD	; 0x8007cd <uxPendedTicks>
    11b6:	81 50       	subi	r24, 0x01	; 1
    11b8:	80 93 cd 07 	sts	0x07CD, r24	; 0x8007cd <uxPendedTicks>
    11bc:	80 91 cd 07 	lds	r24, 0x07CD	; 0x8007cd <uxPendedTicks>
    11c0:	81 11       	cpse	r24, r1
    11c2:	f2 cf       	rjmp	.-28     	; 0x11a8 <xTaskResumeAll+0xbe>
    11c4:	80 91 cc 07 	lds	r24, 0x07CC	; 0x8007cc <xYieldPending>
    11c8:	81 30       	cpi	r24, 0x01	; 1
    11ca:	31 f4       	brne	.+12     	; 0x11d8 <xTaskResumeAll+0xee>
    11cc:	0e 94 59 02 	call	0x4b2	; 0x4b2 <vPortYield>
    11d0:	81 e0       	ldi	r24, 0x01	; 1
    11d2:	03 c0       	rjmp	.+6      	; 0x11da <xTaskResumeAll+0xf0>
    11d4:	80 e0       	ldi	r24, 0x00	; 0
    11d6:	01 c0       	rjmp	.+2      	; 0x11da <xTaskResumeAll+0xf0>
    11d8:	80 e0       	ldi	r24, 0x00	; 0
    11da:	0f 90       	pop	r0
    11dc:	0f be       	out	0x3f, r0	; 63
    11de:	df 91       	pop	r29
    11e0:	cf 91       	pop	r28
    11e2:	1f 91       	pop	r17
    11e4:	0f 91       	pop	r16
    11e6:	ff 90       	pop	r15
    11e8:	ef 90       	pop	r14
    11ea:	df 90       	pop	r13
    11ec:	08 95       	ret

000011ee <vTaskDelayUntil>:
    11ee:	0f 93       	push	r16
    11f0:	1f 93       	push	r17
    11f2:	cf 93       	push	r28
    11f4:	df 93       	push	r29
    11f6:	8c 01       	movw	r16, r24
    11f8:	eb 01       	movw	r28, r22
    11fa:	0e 94 a3 07 	call	0xf46	; 0xf46 <vTaskSuspendAll>
    11fe:	20 91 d0 07 	lds	r18, 0x07D0	; 0x8007d0 <xTickCount>
    1202:	30 91 d1 07 	lds	r19, 0x07D1	; 0x8007d1 <xTickCount+0x1>
    1206:	f8 01       	movw	r30, r16
    1208:	80 81       	ld	r24, Z
    120a:	91 81       	ldd	r25, Z+1	; 0x01
    120c:	c8 0f       	add	r28, r24
    120e:	d9 1f       	adc	r29, r25
    1210:	28 17       	cp	r18, r24
    1212:	39 07       	cpc	r19, r25
    1214:	48 f4       	brcc	.+18     	; 0x1228 <vTaskDelayUntil+0x3a>
    1216:	c8 17       	cp	r28, r24
    1218:	d9 07       	cpc	r29, r25
    121a:	10 f5       	brcc	.+68     	; 0x1260 <vTaskDelayUntil+0x72>
    121c:	d1 83       	std	Z+1, r29	; 0x01
    121e:	c0 83       	st	Z, r28
    1220:	2c 17       	cp	r18, r28
    1222:	3d 07       	cpc	r19, r29
    1224:	90 f4       	brcc	.+36     	; 0x124a <vTaskDelayUntil+0x5c>
    1226:	07 c0       	rjmp	.+14     	; 0x1236 <vTaskDelayUntil+0x48>
    1228:	c8 17       	cp	r28, r24
    122a:	d9 07       	cpc	r29, r25
    122c:	a8 f0       	brcs	.+42     	; 0x1258 <vTaskDelayUntil+0x6a>
    122e:	2c 17       	cp	r18, r28
    1230:	3d 07       	cpc	r19, r29
    1232:	90 f0       	brcs	.+36     	; 0x1258 <vTaskDelayUntil+0x6a>
    1234:	15 c0       	rjmp	.+42     	; 0x1260 <vTaskDelayUntil+0x72>
    1236:	80 91 22 08 	lds	r24, 0x0822	; 0x800822 <pxCurrentTCB>
    123a:	90 91 23 08 	lds	r25, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    123e:	02 96       	adiw	r24, 0x02	; 2
    1240:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    1244:	ce 01       	movw	r24, r28
    1246:	0e 94 2f 06 	call	0xc5e	; 0xc5e <prvAddCurrentTaskToDelayedList>
    124a:	0e 94 75 08 	call	0x10ea	; 0x10ea <xTaskResumeAll>
    124e:	81 11       	cpse	r24, r1
    1250:	0b c0       	rjmp	.+22     	; 0x1268 <vTaskDelayUntil+0x7a>
    1252:	0e 94 59 02 	call	0x4b2	; 0x4b2 <vPortYield>
    1256:	08 c0       	rjmp	.+16     	; 0x1268 <vTaskDelayUntil+0x7a>
    1258:	f8 01       	movw	r30, r16
    125a:	d1 83       	std	Z+1, r29	; 0x01
    125c:	c0 83       	st	Z, r28
    125e:	eb cf       	rjmp	.-42     	; 0x1236 <vTaskDelayUntil+0x48>
    1260:	f8 01       	movw	r30, r16
    1262:	d1 83       	std	Z+1, r29	; 0x01
    1264:	c0 83       	st	Z, r28
    1266:	f1 cf       	rjmp	.-30     	; 0x124a <vTaskDelayUntil+0x5c>
    1268:	df 91       	pop	r29
    126a:	cf 91       	pop	r28
    126c:	1f 91       	pop	r17
    126e:	0f 91       	pop	r16
    1270:	08 95       	ret

00001272 <prvIdleTask>:
    1272:	0f ed       	ldi	r16, 0xDF	; 223
    1274:	17 e0       	ldi	r17, 0x07	; 7
    1276:	0f 2e       	mov	r0, r31
    1278:	f7 e0       	ldi	r31, 0x07	; 7
    127a:	ef 2e       	mov	r14, r31
    127c:	f8 e0       	ldi	r31, 0x08	; 8
    127e:	ff 2e       	mov	r15, r31
    1280:	f0 2d       	mov	r31, r0
    1282:	29 c0       	rjmp	.+82     	; 0x12d6 <prvIdleTask+0x64>
    1284:	0e 94 a3 07 	call	0xf46	; 0xf46 <vTaskSuspendAll>
    1288:	d8 01       	movw	r26, r16
    128a:	cc 91       	ld	r28, X
    128c:	0e 94 75 08 	call	0x10ea	; 0x10ea <xTaskResumeAll>
    1290:	cc 23       	and	r28, r28
    1292:	09 f1       	breq	.+66     	; 0x12d6 <prvIdleTask+0x64>
    1294:	0f b6       	in	r0, 0x3f	; 63
    1296:	f8 94       	cli
    1298:	0f 92       	push	r0
    129a:	d8 01       	movw	r26, r16
    129c:	15 96       	adiw	r26, 0x05	; 5
    129e:	ed 91       	ld	r30, X+
    12a0:	fc 91       	ld	r31, X
    12a2:	16 97       	sbiw	r26, 0x06	; 6
    12a4:	c6 81       	ldd	r28, Z+6	; 0x06
    12a6:	d7 81       	ldd	r29, Z+7	; 0x07
    12a8:	ce 01       	movw	r24, r28
    12aa:	02 96       	adiw	r24, 0x02	; 2
    12ac:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    12b0:	80 91 d2 07 	lds	r24, 0x07D2	; 0x8007d2 <uxCurrentNumberOfTasks>
    12b4:	81 50       	subi	r24, 0x01	; 1
    12b6:	80 93 d2 07 	sts	0x07D2, r24	; 0x8007d2 <uxCurrentNumberOfTasks>
    12ba:	80 91 de 07 	lds	r24, 0x07DE	; 0x8007de <uxTasksDeleted>
    12be:	81 50       	subi	r24, 0x01	; 1
    12c0:	80 93 de 07 	sts	0x07DE, r24	; 0x8007de <uxTasksDeleted>
    12c4:	0f 90       	pop	r0
    12c6:	0f be       	out	0x3f, r0	; 63
    12c8:	8f 89       	ldd	r24, Y+23	; 0x17
    12ca:	98 8d       	ldd	r25, Y+24	; 0x18
    12cc:	0e 94 ab 03 	call	0x756	; 0x756 <vPortFree>
    12d0:	ce 01       	movw	r24, r28
    12d2:	0e 94 ab 03 	call	0x756	; 0x756 <vPortFree>
    12d6:	80 91 de 07 	lds	r24, 0x07DE	; 0x8007de <uxTasksDeleted>
    12da:	81 11       	cpse	r24, r1
    12dc:	d3 cf       	rjmp	.-90     	; 0x1284 <prvIdleTask+0x12>
    12de:	f7 01       	movw	r30, r14
    12e0:	80 81       	ld	r24, Z
    12e2:	82 30       	cpi	r24, 0x02	; 2
    12e4:	c0 f3       	brcs	.-16     	; 0x12d6 <prvIdleTask+0x64>
    12e6:	0e 94 59 02 	call	0x4b2	; 0x4b2 <vPortYield>
    12ea:	f5 cf       	rjmp	.-22     	; 0x12d6 <prvIdleTask+0x64>

000012ec <vTaskSwitchContext>:
    12ec:	80 91 c9 07 	lds	r24, 0x07C9	; 0x8007c9 <uxSchedulerSuspended>
    12f0:	88 23       	and	r24, r24
    12f2:	21 f0       	breq	.+8      	; 0x12fc <vTaskSwitchContext+0x10>
    12f4:	81 e0       	ldi	r24, 0x01	; 1
    12f6:	80 93 cc 07 	sts	0x07CC, r24	; 0x8007cc <xYieldPending>
    12fa:	08 95       	ret
    12fc:	10 92 cc 07 	sts	0x07CC, r1	; 0x8007cc <xYieldPending>
    1300:	80 91 cf 07 	lds	r24, 0x07CF	; 0x8007cf <uxTopReadyPriority>
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	fc 01       	movw	r30, r24
    1308:	ee 0f       	add	r30, r30
    130a:	ff 1f       	adc	r31, r31
    130c:	ee 0f       	add	r30, r30
    130e:	ff 1f       	adc	r31, r31
    1310:	ee 0f       	add	r30, r30
    1312:	ff 1f       	adc	r31, r31
    1314:	8e 0f       	add	r24, r30
    1316:	9f 1f       	adc	r25, r31
    1318:	fc 01       	movw	r30, r24
    131a:	e9 5f       	subi	r30, 0xF9	; 249
    131c:	f7 4f       	sbci	r31, 0xF7	; 247
    131e:	80 81       	ld	r24, Z
    1320:	81 11       	cpse	r24, r1
    1322:	17 c0       	rjmp	.+46     	; 0x1352 <vTaskSwitchContext+0x66>
    1324:	80 91 cf 07 	lds	r24, 0x07CF	; 0x8007cf <uxTopReadyPriority>
    1328:	81 50       	subi	r24, 0x01	; 1
    132a:	80 93 cf 07 	sts	0x07CF, r24	; 0x8007cf <uxTopReadyPriority>
    132e:	80 91 cf 07 	lds	r24, 0x07CF	; 0x8007cf <uxTopReadyPriority>
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	fc 01       	movw	r30, r24
    1336:	ee 0f       	add	r30, r30
    1338:	ff 1f       	adc	r31, r31
    133a:	ee 0f       	add	r30, r30
    133c:	ff 1f       	adc	r31, r31
    133e:	ee 0f       	add	r30, r30
    1340:	ff 1f       	adc	r31, r31
    1342:	8e 0f       	add	r24, r30
    1344:	9f 1f       	adc	r25, r31
    1346:	fc 01       	movw	r30, r24
    1348:	e9 5f       	subi	r30, 0xF9	; 249
    134a:	f7 4f       	sbci	r31, 0xF7	; 247
    134c:	80 81       	ld	r24, Z
    134e:	88 23       	and	r24, r24
    1350:	49 f3       	breq	.-46     	; 0x1324 <vTaskSwitchContext+0x38>
    1352:	80 91 cf 07 	lds	r24, 0x07CF	; 0x8007cf <uxTopReadyPriority>
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	9c 01       	movw	r18, r24
    135a:	22 0f       	add	r18, r18
    135c:	33 1f       	adc	r19, r19
    135e:	22 0f       	add	r18, r18
    1360:	33 1f       	adc	r19, r19
    1362:	22 0f       	add	r18, r18
    1364:	33 1f       	adc	r19, r19
    1366:	28 0f       	add	r18, r24
    1368:	39 1f       	adc	r19, r25
    136a:	d9 01       	movw	r26, r18
    136c:	a9 5f       	subi	r26, 0xF9	; 249
    136e:	b7 4f       	sbci	r27, 0xF7	; 247
    1370:	11 96       	adiw	r26, 0x01	; 1
    1372:	ed 91       	ld	r30, X+
    1374:	fc 91       	ld	r31, X
    1376:	12 97       	sbiw	r26, 0x02	; 2
    1378:	02 80       	ldd	r0, Z+2	; 0x02
    137a:	f3 81       	ldd	r31, Z+3	; 0x03
    137c:	e0 2d       	mov	r30, r0
    137e:	12 96       	adiw	r26, 0x02	; 2
    1380:	fc 93       	st	X, r31
    1382:	ee 93       	st	-X, r30
    1384:	11 97       	sbiw	r26, 0x01	; 1
    1386:	26 5f       	subi	r18, 0xF6	; 246
    1388:	37 4f       	sbci	r19, 0xF7	; 247
    138a:	e2 17       	cp	r30, r18
    138c:	f3 07       	cpc	r31, r19
    138e:	29 f4       	brne	.+10     	; 0x139a <vTaskSwitchContext+0xae>
    1390:	22 81       	ldd	r18, Z+2	; 0x02
    1392:	33 81       	ldd	r19, Z+3	; 0x03
    1394:	fd 01       	movw	r30, r26
    1396:	32 83       	std	Z+2, r19	; 0x02
    1398:	21 83       	std	Z+1, r18	; 0x01
    139a:	fc 01       	movw	r30, r24
    139c:	ee 0f       	add	r30, r30
    139e:	ff 1f       	adc	r31, r31
    13a0:	ee 0f       	add	r30, r30
    13a2:	ff 1f       	adc	r31, r31
    13a4:	ee 0f       	add	r30, r30
    13a6:	ff 1f       	adc	r31, r31
    13a8:	8e 0f       	add	r24, r30
    13aa:	9f 1f       	adc	r25, r31
    13ac:	fc 01       	movw	r30, r24
    13ae:	e9 5f       	subi	r30, 0xF9	; 249
    13b0:	f7 4f       	sbci	r31, 0xF7	; 247
    13b2:	01 80       	ldd	r0, Z+1	; 0x01
    13b4:	f2 81       	ldd	r31, Z+2	; 0x02
    13b6:	e0 2d       	mov	r30, r0
    13b8:	86 81       	ldd	r24, Z+6	; 0x06
    13ba:	97 81       	ldd	r25, Z+7	; 0x07
    13bc:	90 93 23 08 	sts	0x0823, r25	; 0x800823 <pxCurrentTCB+0x1>
    13c0:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <pxCurrentTCB>
    13c4:	08 95       	ret

000013c6 <vTaskPlaceOnEventList>:
    13c6:	cf 93       	push	r28
    13c8:	df 93       	push	r29
    13ca:	eb 01       	movw	r28, r22
    13cc:	60 91 22 08 	lds	r22, 0x0822	; 0x800822 <pxCurrentTCB>
    13d0:	70 91 23 08 	lds	r23, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    13d4:	64 5f       	subi	r22, 0xF4	; 244
    13d6:	7f 4f       	sbci	r23, 0xFF	; 255
    13d8:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <vListInsert>
    13dc:	80 91 22 08 	lds	r24, 0x0822	; 0x800822 <pxCurrentTCB>
    13e0:	90 91 23 08 	lds	r25, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    13e4:	02 96       	adiw	r24, 0x02	; 2
    13e6:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    13ea:	cf 3f       	cpi	r28, 0xFF	; 255
    13ec:	8f ef       	ldi	r24, 0xFF	; 255
    13ee:	d8 07       	cpc	r29, r24
    13f0:	59 f4       	brne	.+22     	; 0x1408 <vTaskPlaceOnEventList+0x42>
    13f2:	60 91 22 08 	lds	r22, 0x0822	; 0x800822 <pxCurrentTCB>
    13f6:	70 91 23 08 	lds	r23, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    13fa:	6e 5f       	subi	r22, 0xFE	; 254
    13fc:	7f 4f       	sbci	r23, 0xFF	; 255
    13fe:	85 ed       	ldi	r24, 0xD5	; 213
    1400:	97 e0       	ldi	r25, 0x07	; 7
    1402:	0e 94 3b 01 	call	0x276	; 0x276 <vListInsertEnd>
    1406:	08 c0       	rjmp	.+16     	; 0x1418 <vTaskPlaceOnEventList+0x52>
    1408:	80 91 d0 07 	lds	r24, 0x07D0	; 0x8007d0 <xTickCount>
    140c:	90 91 d1 07 	lds	r25, 0x07D1	; 0x8007d1 <xTickCount+0x1>
    1410:	8c 0f       	add	r24, r28
    1412:	9d 1f       	adc	r25, r29
    1414:	0e 94 2f 06 	call	0xc5e	; 0xc5e <prvAddCurrentTaskToDelayedList>
    1418:	df 91       	pop	r29
    141a:	cf 91       	pop	r28
    141c:	08 95       	ret

0000141e <xTaskRemoveFromEventList>:
    141e:	0f 93       	push	r16
    1420:	1f 93       	push	r17
    1422:	cf 93       	push	r28
    1424:	df 93       	push	r29
    1426:	dc 01       	movw	r26, r24
    1428:	15 96       	adiw	r26, 0x05	; 5
    142a:	ed 91       	ld	r30, X+
    142c:	fc 91       	ld	r31, X
    142e:	16 97       	sbiw	r26, 0x06	; 6
    1430:	c6 81       	ldd	r28, Z+6	; 0x06
    1432:	d7 81       	ldd	r29, Z+7	; 0x07
    1434:	8e 01       	movw	r16, r28
    1436:	04 5f       	subi	r16, 0xF4	; 244
    1438:	1f 4f       	sbci	r17, 0xFF	; 255
    143a:	c8 01       	movw	r24, r16
    143c:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    1440:	80 91 c9 07 	lds	r24, 0x07C9	; 0x8007c9 <uxSchedulerSuspended>
    1444:	81 11       	cpse	r24, r1
    1446:	1c c0       	rjmp	.+56     	; 0x1480 <xTaskRemoveFromEventList+0x62>
    1448:	0a 50       	subi	r16, 0x0A	; 10
    144a:	11 09       	sbc	r17, r1
    144c:	c8 01       	movw	r24, r16
    144e:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    1452:	8e 89       	ldd	r24, Y+22	; 0x16
    1454:	90 91 cf 07 	lds	r25, 0x07CF	; 0x8007cf <uxTopReadyPriority>
    1458:	98 17       	cp	r25, r24
    145a:	10 f4       	brcc	.+4      	; 0x1460 <xTaskRemoveFromEventList+0x42>
    145c:	80 93 cf 07 	sts	0x07CF, r24	; 0x8007cf <uxTopReadyPriority>
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	9c 01       	movw	r18, r24
    1464:	22 0f       	add	r18, r18
    1466:	33 1f       	adc	r19, r19
    1468:	22 0f       	add	r18, r18
    146a:	33 1f       	adc	r19, r19
    146c:	22 0f       	add	r18, r18
    146e:	33 1f       	adc	r19, r19
    1470:	82 0f       	add	r24, r18
    1472:	93 1f       	adc	r25, r19
    1474:	b8 01       	movw	r22, r16
    1476:	89 5f       	subi	r24, 0xF9	; 249
    1478:	97 4f       	sbci	r25, 0xF7	; 247
    147a:	0e 94 3b 01 	call	0x276	; 0x276 <vListInsertEnd>
    147e:	05 c0       	rjmp	.+10     	; 0x148a <xTaskRemoveFromEventList+0x6c>
    1480:	b8 01       	movw	r22, r16
    1482:	88 ee       	ldi	r24, 0xE8	; 232
    1484:	97 e0       	ldi	r25, 0x07	; 7
    1486:	0e 94 3b 01 	call	0x276	; 0x276 <vListInsertEnd>
    148a:	e0 91 22 08 	lds	r30, 0x0822	; 0x800822 <pxCurrentTCB>
    148e:	f0 91 23 08 	lds	r31, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    1492:	9e 89       	ldd	r25, Y+22	; 0x16
    1494:	86 89       	ldd	r24, Z+22	; 0x16
    1496:	89 17       	cp	r24, r25
    1498:	20 f4       	brcc	.+8      	; 0x14a2 <xTaskRemoveFromEventList+0x84>
    149a:	81 e0       	ldi	r24, 0x01	; 1
    149c:	80 93 cc 07 	sts	0x07CC, r24	; 0x8007cc <xYieldPending>
    14a0:	01 c0       	rjmp	.+2      	; 0x14a4 <xTaskRemoveFromEventList+0x86>
    14a2:	80 e0       	ldi	r24, 0x00	; 0
    14a4:	df 91       	pop	r29
    14a6:	cf 91       	pop	r28
    14a8:	1f 91       	pop	r17
    14aa:	0f 91       	pop	r16
    14ac:	08 95       	ret

000014ae <vTaskSetTimeOutState>:
    14ae:	20 91 cb 07 	lds	r18, 0x07CB	; 0x8007cb <xNumOfOverflows>
    14b2:	fc 01       	movw	r30, r24
    14b4:	20 83       	st	Z, r18
    14b6:	20 91 d0 07 	lds	r18, 0x07D0	; 0x8007d0 <xTickCount>
    14ba:	30 91 d1 07 	lds	r19, 0x07D1	; 0x8007d1 <xTickCount+0x1>
    14be:	32 83       	std	Z+2, r19	; 0x02
    14c0:	21 83       	std	Z+1, r18	; 0x01
    14c2:	08 95       	ret

000014c4 <xTaskCheckForTimeOut>:
    14c4:	0f b6       	in	r0, 0x3f	; 63
    14c6:	f8 94       	cli
    14c8:	0f 92       	push	r0
    14ca:	40 91 d0 07 	lds	r20, 0x07D0	; 0x8007d0 <xTickCount>
    14ce:	50 91 d1 07 	lds	r21, 0x07D1	; 0x8007d1 <xTickCount+0x1>
    14d2:	db 01       	movw	r26, r22
    14d4:	2d 91       	ld	r18, X+
    14d6:	3c 91       	ld	r19, X
    14d8:	2f 3f       	cpi	r18, 0xFF	; 255
    14da:	bf ef       	ldi	r27, 0xFF	; 255
    14dc:	3b 07       	cpc	r19, r27
    14de:	19 f1       	breq	.+70     	; 0x1526 <xTaskCheckForTimeOut+0x62>
    14e0:	e0 91 cb 07 	lds	r30, 0x07CB	; 0x8007cb <xNumOfOverflows>
    14e4:	dc 01       	movw	r26, r24
    14e6:	fc 91       	ld	r31, X
    14e8:	fe 17       	cp	r31, r30
    14ea:	39 f0       	breq	.+14     	; 0x14fa <xTaskCheckForTimeOut+0x36>
    14ec:	11 96       	adiw	r26, 0x01	; 1
    14ee:	ed 91       	ld	r30, X+
    14f0:	fc 91       	ld	r31, X
    14f2:	12 97       	sbiw	r26, 0x02	; 2
    14f4:	4e 17       	cp	r20, r30
    14f6:	5f 07       	cpc	r21, r31
    14f8:	c0 f4       	brcc	.+48     	; 0x152a <xTaskCheckForTimeOut+0x66>
    14fa:	dc 01       	movw	r26, r24
    14fc:	11 96       	adiw	r26, 0x01	; 1
    14fe:	ed 91       	ld	r30, X+
    1500:	fc 91       	ld	r31, X
    1502:	12 97       	sbiw	r26, 0x02	; 2
    1504:	da 01       	movw	r26, r20
    1506:	ae 1b       	sub	r26, r30
    1508:	bf 0b       	sbc	r27, r31
    150a:	a2 17       	cp	r26, r18
    150c:	b3 07       	cpc	r27, r19
    150e:	78 f4       	brcc	.+30     	; 0x152e <xTaskCheckForTimeOut+0x6a>
    1510:	db 01       	movw	r26, r22
    1512:	e4 1b       	sub	r30, r20
    1514:	f5 0b       	sbc	r31, r21
    1516:	2e 0f       	add	r18, r30
    1518:	3f 1f       	adc	r19, r31
    151a:	2d 93       	st	X+, r18
    151c:	3c 93       	st	X, r19
    151e:	0e 94 57 0a 	call	0x14ae	; 0x14ae <vTaskSetTimeOutState>
    1522:	80 e0       	ldi	r24, 0x00	; 0
    1524:	05 c0       	rjmp	.+10     	; 0x1530 <xTaskCheckForTimeOut+0x6c>
    1526:	80 e0       	ldi	r24, 0x00	; 0
    1528:	03 c0       	rjmp	.+6      	; 0x1530 <xTaskCheckForTimeOut+0x6c>
    152a:	81 e0       	ldi	r24, 0x01	; 1
    152c:	01 c0       	rjmp	.+2      	; 0x1530 <xTaskCheckForTimeOut+0x6c>
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	0f 90       	pop	r0
    1532:	0f be       	out	0x3f, r0	; 63
    1534:	08 95       	ret

00001536 <vTaskMissedYield>:
    1536:	81 e0       	ldi	r24, 0x01	; 1
    1538:	80 93 cc 07 	sts	0x07CC, r24	; 0x8007cc <xYieldPending>
    153c:	08 95       	ret

0000153e <vTaskPriorityInherit>:
    153e:	0f 93       	push	r16
    1540:	1f 93       	push	r17
    1542:	cf 93       	push	r28
    1544:	df 93       	push	r29
    1546:	fc 01       	movw	r30, r24
    1548:	89 2b       	or	r24, r25
    154a:	09 f4       	brne	.+2      	; 0x154e <vTaskPriorityInherit+0x10>
    154c:	55 c0       	rjmp	.+170    	; 0x15f8 <vTaskPriorityInherit+0xba>
    154e:	26 89       	ldd	r18, Z+22	; 0x16
    1550:	a0 91 22 08 	lds	r26, 0x0822	; 0x800822 <pxCurrentTCB>
    1554:	b0 91 23 08 	lds	r27, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    1558:	56 96       	adiw	r26, 0x16	; 22
    155a:	8c 91       	ld	r24, X
    155c:	28 17       	cp	r18, r24
    155e:	08 f0       	brcs	.+2      	; 0x1562 <vTaskPriorityInherit+0x24>
    1560:	4b c0       	rjmp	.+150    	; 0x15f8 <vTaskPriorityInherit+0xba>
    1562:	84 85       	ldd	r24, Z+12	; 0x0c
    1564:	95 85       	ldd	r25, Z+13	; 0x0d
    1566:	99 23       	and	r25, r25
    1568:	64 f0       	brlt	.+24     	; 0x1582 <vTaskPriorityInherit+0x44>
    156a:	a0 91 22 08 	lds	r26, 0x0822	; 0x800822 <pxCurrentTCB>
    156e:	b0 91 23 08 	lds	r27, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    1572:	56 96       	adiw	r26, 0x16	; 22
    1574:	3c 91       	ld	r19, X
    1576:	83 e0       	ldi	r24, 0x03	; 3
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	83 1b       	sub	r24, r19
    157c:	91 09       	sbc	r25, r1
    157e:	95 87       	std	Z+13, r25	; 0x0d
    1580:	84 87       	std	Z+12, r24	; 0x0c
    1582:	30 e0       	ldi	r19, 0x00	; 0
    1584:	c9 01       	movw	r24, r18
    1586:	88 0f       	add	r24, r24
    1588:	99 1f       	adc	r25, r25
    158a:	88 0f       	add	r24, r24
    158c:	99 1f       	adc	r25, r25
    158e:	88 0f       	add	r24, r24
    1590:	99 1f       	adc	r25, r25
    1592:	28 0f       	add	r18, r24
    1594:	39 1f       	adc	r19, r25
    1596:	29 5f       	subi	r18, 0xF9	; 249
    1598:	37 4f       	sbci	r19, 0xF7	; 247
    159a:	82 85       	ldd	r24, Z+10	; 0x0a
    159c:	93 85       	ldd	r25, Z+11	; 0x0b
    159e:	82 17       	cp	r24, r18
    15a0:	93 07       	cpc	r25, r19
    15a2:	19 f5       	brne	.+70     	; 0x15ea <vTaskPriorityInherit+0xac>
    15a4:	8f 01       	movw	r16, r30
    15a6:	ef 01       	movw	r28, r30
    15a8:	22 96       	adiw	r28, 0x02	; 2
    15aa:	ce 01       	movw	r24, r28
    15ac:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    15b0:	e0 91 22 08 	lds	r30, 0x0822	; 0x800822 <pxCurrentTCB>
    15b4:	f0 91 23 08 	lds	r31, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    15b8:	86 89       	ldd	r24, Z+22	; 0x16
    15ba:	f8 01       	movw	r30, r16
    15bc:	86 8b       	std	Z+22, r24	; 0x16
    15be:	90 91 cf 07 	lds	r25, 0x07CF	; 0x8007cf <uxTopReadyPriority>
    15c2:	98 17       	cp	r25, r24
    15c4:	10 f4       	brcc	.+4      	; 0x15ca <vTaskPriorityInherit+0x8c>
    15c6:	80 93 cf 07 	sts	0x07CF, r24	; 0x8007cf <uxTopReadyPriority>
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	9c 01       	movw	r18, r24
    15ce:	22 0f       	add	r18, r18
    15d0:	33 1f       	adc	r19, r19
    15d2:	22 0f       	add	r18, r18
    15d4:	33 1f       	adc	r19, r19
    15d6:	22 0f       	add	r18, r18
    15d8:	33 1f       	adc	r19, r19
    15da:	82 0f       	add	r24, r18
    15dc:	93 1f       	adc	r25, r19
    15de:	be 01       	movw	r22, r28
    15e0:	89 5f       	subi	r24, 0xF9	; 249
    15e2:	97 4f       	sbci	r25, 0xF7	; 247
    15e4:	0e 94 3b 01 	call	0x276	; 0x276 <vListInsertEnd>
    15e8:	07 c0       	rjmp	.+14     	; 0x15f8 <vTaskPriorityInherit+0xba>
    15ea:	a0 91 22 08 	lds	r26, 0x0822	; 0x800822 <pxCurrentTCB>
    15ee:	b0 91 23 08 	lds	r27, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    15f2:	56 96       	adiw	r26, 0x16	; 22
    15f4:	8c 91       	ld	r24, X
    15f6:	86 8b       	std	Z+22, r24	; 0x16
    15f8:	df 91       	pop	r29
    15fa:	cf 91       	pop	r28
    15fc:	1f 91       	pop	r17
    15fe:	0f 91       	pop	r16
    1600:	08 95       	ret

00001602 <xTaskPriorityDisinherit>:
    1602:	0f 93       	push	r16
    1604:	1f 93       	push	r17
    1606:	cf 93       	push	r28
    1608:	df 93       	push	r29
    160a:	fc 01       	movw	r30, r24
    160c:	89 2b       	or	r24, r25
    160e:	79 f1       	breq	.+94     	; 0x166e <xTaskPriorityDisinherit+0x6c>
    1610:	82 a1       	ldd	r24, Z+34	; 0x22
    1612:	81 50       	subi	r24, 0x01	; 1
    1614:	82 a3       	std	Z+34, r24	; 0x22
    1616:	26 89       	ldd	r18, Z+22	; 0x16
    1618:	91 a1       	ldd	r25, Z+33	; 0x21
    161a:	29 17       	cp	r18, r25
    161c:	51 f1       	breq	.+84     	; 0x1672 <xTaskPriorityDisinherit+0x70>
    161e:	81 11       	cpse	r24, r1
    1620:	2a c0       	rjmp	.+84     	; 0x1676 <xTaskPriorityDisinherit+0x74>
    1622:	ef 01       	movw	r28, r30
    1624:	8f 01       	movw	r16, r30
    1626:	0e 5f       	subi	r16, 0xFE	; 254
    1628:	1f 4f       	sbci	r17, 0xFF	; 255
    162a:	c8 01       	movw	r24, r16
    162c:	0e 94 8d 01 	call	0x31a	; 0x31a <uxListRemove>
    1630:	89 a1       	ldd	r24, Y+33	; 0x21
    1632:	8e 8b       	std	Y+22, r24	; 0x16
    1634:	23 e0       	ldi	r18, 0x03	; 3
    1636:	30 e0       	ldi	r19, 0x00	; 0
    1638:	28 1b       	sub	r18, r24
    163a:	31 09       	sbc	r19, r1
    163c:	3d 87       	std	Y+13, r19	; 0x0d
    163e:	2c 87       	std	Y+12, r18	; 0x0c
    1640:	90 91 cf 07 	lds	r25, 0x07CF	; 0x8007cf <uxTopReadyPriority>
    1644:	98 17       	cp	r25, r24
    1646:	10 f4       	brcc	.+4      	; 0x164c <xTaskPriorityDisinherit+0x4a>
    1648:	80 93 cf 07 	sts	0x07CF, r24	; 0x8007cf <uxTopReadyPriority>
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	9c 01       	movw	r18, r24
    1650:	22 0f       	add	r18, r18
    1652:	33 1f       	adc	r19, r19
    1654:	22 0f       	add	r18, r18
    1656:	33 1f       	adc	r19, r19
    1658:	22 0f       	add	r18, r18
    165a:	33 1f       	adc	r19, r19
    165c:	82 0f       	add	r24, r18
    165e:	93 1f       	adc	r25, r19
    1660:	b8 01       	movw	r22, r16
    1662:	89 5f       	subi	r24, 0xF9	; 249
    1664:	97 4f       	sbci	r25, 0xF7	; 247
    1666:	0e 94 3b 01 	call	0x276	; 0x276 <vListInsertEnd>
    166a:	81 e0       	ldi	r24, 0x01	; 1
    166c:	05 c0       	rjmp	.+10     	; 0x1678 <xTaskPriorityDisinherit+0x76>
    166e:	80 e0       	ldi	r24, 0x00	; 0
    1670:	03 c0       	rjmp	.+6      	; 0x1678 <xTaskPriorityDisinherit+0x76>
    1672:	80 e0       	ldi	r24, 0x00	; 0
    1674:	01 c0       	rjmp	.+2      	; 0x1678 <xTaskPriorityDisinherit+0x76>
    1676:	80 e0       	ldi	r24, 0x00	; 0
    1678:	df 91       	pop	r29
    167a:	cf 91       	pop	r28
    167c:	1f 91       	pop	r17
    167e:	0f 91       	pop	r16
    1680:	08 95       	ret

00001682 <pvTaskIncrementMutexHeldCount>:
    1682:	80 91 22 08 	lds	r24, 0x0822	; 0x800822 <pxCurrentTCB>
    1686:	90 91 23 08 	lds	r25, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    168a:	89 2b       	or	r24, r25
    168c:	39 f0       	breq	.+14     	; 0x169c <pvTaskIncrementMutexHeldCount+0x1a>
    168e:	e0 91 22 08 	lds	r30, 0x0822	; 0x800822 <pxCurrentTCB>
    1692:	f0 91 23 08 	lds	r31, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    1696:	82 a1       	ldd	r24, Z+34	; 0x22
    1698:	8f 5f       	subi	r24, 0xFF	; 255
    169a:	82 a3       	std	Z+34, r24	; 0x22
    169c:	80 91 22 08 	lds	r24, 0x0822	; 0x800822 <pxCurrentTCB>
    16a0:	90 91 23 08 	lds	r25, 0x0823	; 0x800823 <pxCurrentTCB+0x1>
    16a4:	08 95       	ret

000016a6 <attachInterrupt>:
    16a6:	82 30       	cpi	r24, 0x02	; 2
    16a8:	00 f5       	brcc	.+64     	; 0x16ea <attachInterrupt+0x44>
    16aa:	e8 2f       	mov	r30, r24
    16ac:	f0 e0       	ldi	r31, 0x00	; 0
    16ae:	ee 0f       	add	r30, r30
    16b0:	ff 1f       	adc	r31, r31
    16b2:	ec 5d       	subi	r30, 0xDC	; 220
    16b4:	f7 4f       	sbci	r31, 0xF7	; 247
    16b6:	71 83       	std	Z+1, r23	; 0x01
    16b8:	60 83       	st	Z, r22
    16ba:	88 23       	and	r24, r24
    16bc:	19 f0       	breq	.+6      	; 0x16c4 <attachInterrupt+0x1e>
    16be:	81 30       	cpi	r24, 0x01	; 1
    16c0:	49 f0       	breq	.+18     	; 0x16d4 <attachInterrupt+0x2e>
    16c2:	08 95       	ret
    16c4:	e9 e6       	ldi	r30, 0x69	; 105
    16c6:	f0 e0       	ldi	r31, 0x00	; 0
    16c8:	80 81       	ld	r24, Z
    16ca:	8c 7f       	andi	r24, 0xFC	; 252
    16cc:	48 2b       	or	r20, r24
    16ce:	40 83       	st	Z, r20
    16d0:	e8 9a       	sbi	0x1d, 0	; 29
    16d2:	08 95       	ret
    16d4:	e9 e6       	ldi	r30, 0x69	; 105
    16d6:	f0 e0       	ldi	r31, 0x00	; 0
    16d8:	80 81       	ld	r24, Z
    16da:	83 7f       	andi	r24, 0xF3	; 243
    16dc:	44 0f       	add	r20, r20
    16de:	55 1f       	adc	r21, r21
    16e0:	44 0f       	add	r20, r20
    16e2:	55 1f       	adc	r21, r21
    16e4:	48 2b       	or	r20, r24
    16e6:	40 83       	st	Z, r20
    16e8:	e9 9a       	sbi	0x1d, 1	; 29
    16ea:	08 95       	ret

000016ec <__vector_1>:
    16ec:	1f 92       	push	r1
    16ee:	0f 92       	push	r0
    16f0:	0f b6       	in	r0, 0x3f	; 63
    16f2:	0f 92       	push	r0
    16f4:	11 24       	eor	r1, r1
    16f6:	2f 93       	push	r18
    16f8:	3f 93       	push	r19
    16fa:	4f 93       	push	r20
    16fc:	5f 93       	push	r21
    16fe:	6f 93       	push	r22
    1700:	7f 93       	push	r23
    1702:	8f 93       	push	r24
    1704:	9f 93       	push	r25
    1706:	af 93       	push	r26
    1708:	bf 93       	push	r27
    170a:	ef 93       	push	r30
    170c:	ff 93       	push	r31
    170e:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <intFunc>
    1712:	90 91 25 08 	lds	r25, 0x0825	; 0x800825 <intFunc+0x1>
    1716:	89 2b       	or	r24, r25
    1718:	29 f0       	breq	.+10     	; 0x1724 <__vector_1+0x38>
    171a:	e0 91 24 08 	lds	r30, 0x0824	; 0x800824 <intFunc>
    171e:	f0 91 25 08 	lds	r31, 0x0825	; 0x800825 <intFunc+0x1>
    1722:	09 95       	icall
    1724:	ff 91       	pop	r31
    1726:	ef 91       	pop	r30
    1728:	bf 91       	pop	r27
    172a:	af 91       	pop	r26
    172c:	9f 91       	pop	r25
    172e:	8f 91       	pop	r24
    1730:	7f 91       	pop	r23
    1732:	6f 91       	pop	r22
    1734:	5f 91       	pop	r21
    1736:	4f 91       	pop	r20
    1738:	3f 91       	pop	r19
    173a:	2f 91       	pop	r18
    173c:	0f 90       	pop	r0
    173e:	0f be       	out	0x3f, r0	; 63
    1740:	0f 90       	pop	r0
    1742:	1f 90       	pop	r1
    1744:	18 95       	reti

00001746 <__vector_2>:
    1746:	1f 92       	push	r1
    1748:	0f 92       	push	r0
    174a:	0f b6       	in	r0, 0x3f	; 63
    174c:	0f 92       	push	r0
    174e:	11 24       	eor	r1, r1
    1750:	2f 93       	push	r18
    1752:	3f 93       	push	r19
    1754:	4f 93       	push	r20
    1756:	5f 93       	push	r21
    1758:	6f 93       	push	r22
    175a:	7f 93       	push	r23
    175c:	8f 93       	push	r24
    175e:	9f 93       	push	r25
    1760:	af 93       	push	r26
    1762:	bf 93       	push	r27
    1764:	ef 93       	push	r30
    1766:	ff 93       	push	r31
    1768:	80 91 26 08 	lds	r24, 0x0826	; 0x800826 <intFunc+0x2>
    176c:	90 91 27 08 	lds	r25, 0x0827	; 0x800827 <intFunc+0x3>
    1770:	89 2b       	or	r24, r25
    1772:	29 f0       	breq	.+10     	; 0x177e <__vector_2+0x38>
    1774:	e0 91 26 08 	lds	r30, 0x0826	; 0x800826 <intFunc+0x2>
    1778:	f0 91 27 08 	lds	r31, 0x0827	; 0x800827 <intFunc+0x3>
    177c:	09 95       	icall
    177e:	ff 91       	pop	r31
    1780:	ef 91       	pop	r30
    1782:	bf 91       	pop	r27
    1784:	af 91       	pop	r26
    1786:	9f 91       	pop	r25
    1788:	8f 91       	pop	r24
    178a:	7f 91       	pop	r23
    178c:	6f 91       	pop	r22
    178e:	5f 91       	pop	r21
    1790:	4f 91       	pop	r20
    1792:	3f 91       	pop	r19
    1794:	2f 91       	pop	r18
    1796:	0f 90       	pop	r0
    1798:	0f be       	out	0x3f, r0	; 63
    179a:	0f 90       	pop	r0
    179c:	1f 90       	pop	r1
    179e:	18 95       	reti

000017a0 <USART_init>:
    17a0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    17a4:	87 e6       	ldi	r24, 0x67	; 103
    17a6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    17aa:	8c e1       	ldi	r24, 0x1C	; 28
    17ac:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    17b0:	86 e0       	ldi	r24, 0x06	; 6
    17b2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
    17b6:	08 95       	ret

000017b8 <USART_send>:
    17b8:	e0 ec       	ldi	r30, 0xC0	; 192
    17ba:	f0 e0       	ldi	r31, 0x00	; 0
    17bc:	90 81       	ld	r25, Z
    17be:	95 ff       	sbrs	r25, 5
    17c0:	fd cf       	rjmp	.-6      	; 0x17bc <USART_send+0x4>
    17c2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    17c6:	08 95       	ret

000017c8 <USART_sendstr>:
    17c8:	cf 93       	push	r28
    17ca:	df 93       	push	r29
    17cc:	ec 01       	movw	r28, r24
    17ce:	88 81       	ld	r24, Y
    17d0:	88 23       	and	r24, r24
    17d2:	31 f0       	breq	.+12     	; 0x17e0 <USART_sendstr+0x18>
    17d4:	21 96       	adiw	r28, 0x01	; 1
    17d6:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <USART_send>
    17da:	89 91       	ld	r24, Y+
    17dc:	81 11       	cpse	r24, r1
    17de:	fb cf       	rjmp	.-10     	; 0x17d6 <USART_sendstr+0xe>
    17e0:	df 91       	pop	r29
    17e2:	cf 91       	pop	r28
    17e4:	08 95       	ret

000017e6 <memcpy>:
    17e6:	fb 01       	movw	r30, r22
    17e8:	dc 01       	movw	r26, r24
    17ea:	02 c0       	rjmp	.+4      	; 0x17f0 <memcpy+0xa>
    17ec:	01 90       	ld	r0, Z+
    17ee:	0d 92       	st	X+, r0
    17f0:	41 50       	subi	r20, 0x01	; 1
    17f2:	50 40       	sbci	r21, 0x00	; 0
    17f4:	d8 f7       	brcc	.-10     	; 0x17ec <memcpy+0x6>
    17f6:	08 95       	ret

000017f8 <_exit>:
    17f8:	f8 94       	cli

000017fa <__stop_program>:
    17fa:	ff cf       	rjmp	.-2      	; 0x17fa <__stop_program>
