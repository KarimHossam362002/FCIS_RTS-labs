
ArduinoUnoFreertos_6_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b8  00800100  000016ce  00001762  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000064d  008001b8  008001b8  0000181a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000181a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000184c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000378  00000000  00000000  0000188c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004528  00000000  00000000  00001c04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001258  00000000  00000000  0000612c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002682  00000000  00000000  00007384  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ad0  00000000  00000000  00009a08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001712  00000000  00000000  0000a4d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003f20  00000000  00000000  0000bbea  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000370  00000000  00000000  0000fb0a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 df 0a 	jmp	0x15be	; 0x15be <__vector_1>
       8:	0c 94 0c 0b 	jmp	0x1618	; 0x1618 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ee ec       	ldi	r30, 0xCE	; 206
      7c:	f6 e1       	ldi	r31, 0x16	; 22
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a8 3b       	cpi	r26, 0xB8	; 184
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	28 e0       	ldi	r18, 0x08	; 8
      8c:	a8 eb       	ldi	r26, 0xB8	; 184
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a5 30       	cpi	r26, 0x05	; 5
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 9c 00 	call	0x138	; 0x138 <main>
      9e:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <vReceiverTask>:
	}
}
/*-----------------------------------------------------------*/

static void vReceiverTask( void *pvParameters )
{
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	00 d0       	rcall	.+0      	; 0xac <vReceiverTask+0x6>
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
	/* This task is also defined within an infinite loop. */
	for( ;; )
	{
		///* As this task unblocks immediately that data is written to the queue this
		//call should always find the queue empty. */
		if( uxQueueMessagesWaiting( xQueue ) != 0 )
      b0:	80 91 03 08 	lds	r24, 0x0803	; 0x800803 <xQueue>
      b4:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <xQueue+0x1>
      b8:	0e 94 4e 06 	call	0xc9c	; 0xc9c <uxQueueMessagesWaiting>
      bc:	88 23       	and	r24, r24
      be:	21 f0       	breq	.+8      	; 0xc8 <vReceiverTask+0x22>
		{
		   USART_sendstr("Queue should be empty!\r\n");
      c0:	84 e0       	ldi	r24, 0x04	; 4
      c2:	91 e0       	ldi	r25, 0x01	; 1
      c4:	0e 94 4d 0b 	call	0x169a	; 0x169a <USART_sendstr>

		////////////////////// To Do 4//////////////////////////////
		/*
		   Receive the next element in the Queue and wait for a xTicksToWait for arriving at least one element.
		*/
		xQueueReceive(xQueue,&lReceivedValue,xTicksToWait);
      c8:	20 e0       	ldi	r18, 0x00	; 0
      ca:	41 e2       	ldi	r20, 0x21	; 33
      cc:	50 e0       	ldi	r21, 0x00	; 0
      ce:	be 01       	movw	r22, r28
      d0:	6f 5f       	subi	r22, 0xFF	; 255
      d2:	7f 4f       	sbci	r23, 0xFF	; 255
      d4:	80 91 03 08 	lds	r24, 0x0803	; 0x800803 <xQueue>
      d8:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <xQueue+0x1>
      dc:	0e 94 a2 05 	call	0xb44	; 0xb44 <xQueueGenericReceive>
		else
		{
			/* We did not receive anything from the queue even after waiting for 100ms.
			This must be an error as the sending tasks are free running and will be
			continuously writing to the queue. */
			USART_sendstr("Could not receive from the queue.\r\n" );
      e0:	89 e2       	ldi	r24, 0x29	; 41
      e2:	91 e0       	ldi	r25, 0x01	; 1
      e4:	0e 94 4d 0b 	call	0x169a	; 0x169a <USART_sendstr>
      e8:	e3 cf       	rjmp	.-58     	; 0xb0 <vReceiverTask+0xa>

000000ea <vSenderTask>:
	return 0;
}
/*-----------------------------------------------------------*/

static void vSenderTask( void *pvParameters )
{
      ea:	cf 93       	push	r28
      ec:	df 93       	push	r29
      ee:	00 d0       	rcall	.+0      	; 0xf0 <vSenderTask+0x6>
      f0:	00 d0       	rcall	.+0      	; 0xf2 <vSenderTask+0x8>
      f2:	cd b7       	in	r28, 0x3d	; 61
      f4:	de b7       	in	r29, 0x3e	; 62

	/* Two instances are created of this task so the value that is sent to the
	queue is passed in via the task parameter rather than be hard coded.  This way
	each instance can use a different value.  Cast the parameter to the required
	type. */
	lValueToSend =(char *)pvParameters;
      f6:	9a 83       	std	Y+2, r25	; 0x02
      f8:	89 83       	std	Y+1, r24	; 0x01

	/* As per most tasks, this task is implemented within an infinite loop. */
		USART_sendstr("sender");
      fa:	8d e4       	ldi	r24, 0x4D	; 77
      fc:	91 e0       	ldi	r25, 0x01	; 1
      fe:	0e 94 4d 0b 	call	0x169a	; 0x169a <USART_sendstr>
		TickType_t xLastWakeTime = xTaskGetTickCount();
     102:	0e 94 ee 07 	call	0xfdc	; 0xfdc <xTaskGetTickCount>
     106:	9c 83       	std	Y+4, r25	; 0x04
     108:	8b 83       	std	Y+3, r24	; 0x03
	{
		////////////////////// To Do 3//////////////////////////////
		/*
		   Insert back the element in the Queue without waiting for available space.
		*/
		xQueueSendToBack(xQueue,&lValueToSend,0);
     10a:	20 e0       	ldi	r18, 0x00	; 0
     10c:	40 e0       	ldi	r20, 0x00	; 0
     10e:	50 e0       	ldi	r21, 0x00	; 0
     110:	be 01       	movw	r22, r28
     112:	6f 5f       	subi	r22, 0xFF	; 255
     114:	7f 4f       	sbci	r23, 0xFF	; 255
     116:	80 91 03 08 	lds	r24, 0x0803	; 0x800803 <xQueue>
     11a:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <xQueue+0x1>
     11e:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <xQueueGenericSend>
		if( xStatus != pdPASS )
		{
			/* We could not write to the queue because it was full – this must
			be an error as the queue should never contain more than one item! */
			USART_sendstr("Could not send to the queue.");
     122:	84 e5       	ldi	r24, 0x54	; 84
     124:	91 e0       	ldi	r25, 0x01	; 1
     126:	0e 94 4d 0b 	call	0x169a	; 0x169a <USART_sendstr>
		}
			vTaskDelayUntil(&xLastWakeTime, (100 / portTICK_PERIOD_MS));
     12a:	64 e6       	ldi	r22, 0x64	; 100
     12c:	70 e0       	ldi	r23, 0x00	; 0
     12e:	ce 01       	movw	r24, r28
     130:	03 96       	adiw	r24, 0x03	; 3
     132:	0e 94 37 09 	call	0x126e	; 0x126e <vTaskDelayUntil>
	}
     136:	e9 cf       	rjmp	.-46     	; 0x10a <vSenderTask+0x20>

00000138 <main>:
QueueHandle_t xQueue;


int main( void )
{
	USART_init();
     138:	0e 94 39 0b 	call	0x1672	; 0x1672 <USART_init>
	////////////////////// To Do 1//////////////////////////////
	
    /* The queue is created to hold a maximum of 5 long values. 
    Create A Suitable Queue
     */
	xQueue = xQueueCreate(5,sizeof(char*));
     13c:	40 e0       	ldi	r20, 0x00	; 0
     13e:	62 e0       	ldi	r22, 0x02	; 2
     140:	85 e0       	ldi	r24, 0x05	; 5
     142:	0e 94 c5 04 	call	0x98a	; 0x98a <xQueueGenericCreate>
     146:	90 93 04 08 	sts	0x0804, r25	; 0x800804 <xQueue+0x1>
     14a:	80 93 03 08 	sts	0x0803, r24	; 0x800803 <xQueue>
	
	if( xQueue != NULL ) // Queue Handler
     14e:	89 2b       	or	r24, r25
     150:	49 f1       	breq	.+82     	; 0x1a4 <main+0x6c>
		so one task will continuously write 100 to the queue while the other task
		will continuously write 200 to the queue.  Both tasks are created at
		priority 1. */
		//xTaskCreate(vSenderTask,"Sender1",100,"From Sender1",1,NULL);
		//xTaskCreate(vSenderTask."Sender2",200,"from Sender2",1,NULL);
		xTaskCreate(vSenderTask,"Sender1",100,"From Sender1",1,NULL);
     152:	a1 2c       	mov	r10, r1
     154:	b1 2c       	mov	r11, r1
     156:	c1 2c       	mov	r12, r1
     158:	d1 2c       	mov	r13, r1
     15a:	e1 2c       	mov	r14, r1
     15c:	f1 2c       	mov	r15, r1
     15e:	01 e0       	ldi	r16, 0x01	; 1
     160:	21 e7       	ldi	r18, 0x71	; 113
     162:	31 e0       	ldi	r19, 0x01	; 1
     164:	44 e6       	ldi	r20, 0x64	; 100
     166:	50 e0       	ldi	r21, 0x00	; 0
     168:	66 e7       	ldi	r22, 0x76	; 118
     16a:	71 e0       	ldi	r23, 0x01	; 1
     16c:	85 e7       	ldi	r24, 0x75	; 117
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	0e 94 ac 06 	call	0xd58	; 0xd58 <xTaskGenericCreate>
		xTaskCreate(vSenderTask,"Sender1",200,"From Sender2",1,NULL);
     174:	2e e7       	ldi	r18, 0x7E	; 126
     176:	31 e0       	ldi	r19, 0x01	; 1
     178:	48 ec       	ldi	r20, 0xC8	; 200
     17a:	50 e0       	ldi	r21, 0x00	; 0
     17c:	66 e7       	ldi	r22, 0x76	; 118
     17e:	71 e0       	ldi	r23, 0x01	; 1
     180:	85 e7       	ldi	r24, 0x75	; 117
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	0e 94 ac 06 	call	0xd58	; 0xd58 <xTaskGenericCreate>

		/*2. Create the task that will read from the queue.  The task is created with
		priority 2, so above the priority of the sender tasks. */
		//xTaskCreate(vReceiverTask,"Receiver",256,NULL,2,NULL);
		xTaskCreate(vReceiverTask,"Receiver",256,NULL,2,NULL);
     188:	02 e0       	ldi	r16, 0x02	; 2
     18a:	20 e0       	ldi	r18, 0x00	; 0
     18c:	30 e0       	ldi	r19, 0x00	; 0
     18e:	40 e0       	ldi	r20, 0x00	; 0
     190:	51 e0       	ldi	r21, 0x01	; 1
     192:	6b e8       	ldi	r22, 0x8B	; 139
     194:	71 e0       	ldi	r23, 0x01	; 1
     196:	83 e5       	ldi	r24, 0x53	; 83
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	0e 94 ac 06 	call	0xd58	; 0xd58 <xTaskGenericCreate>
		/* Start the scheduler so the created tasks start executing. */
		vTaskStartScheduler();
     19e:	0e 94 bd 07 	call	0xf7a	; 0xf7a <vTaskStartScheduler>
     1a2:	04 c0       	rjmp	.+8      	; 0x1ac <main+0x74>
	}
	else
	{
		/* The queue could not be created. */
		USART_sendstr("The queue could not be created");
     1a4:	84 e9       	ldi	r24, 0x94	; 148
     1a6:	91 e0       	ldi	r25, 0x01	; 1
     1a8:	0e 94 4d 0b 	call	0x169a	; 0x169a <USART_sendstr>
     1ac:	ff cf       	rjmp	.-2      	; 0x1ac <main+0x74>

000001ae <vListInitialise>:
     1ae:	fc 01       	movw	r30, r24
     1b0:	03 96       	adiw	r24, 0x03	; 3
     1b2:	92 83       	std	Z+2, r25	; 0x02
     1b4:	81 83       	std	Z+1, r24	; 0x01
     1b6:	2f ef       	ldi	r18, 0xFF	; 255
     1b8:	3f ef       	ldi	r19, 0xFF	; 255
     1ba:	34 83       	std	Z+4, r19	; 0x04
     1bc:	23 83       	std	Z+3, r18	; 0x03
     1be:	96 83       	std	Z+6, r25	; 0x06
     1c0:	85 83       	std	Z+5, r24	; 0x05
     1c2:	90 87       	std	Z+8, r25	; 0x08
     1c4:	87 83       	std	Z+7, r24	; 0x07
     1c6:	10 82       	st	Z, r1
     1c8:	08 95       	ret

000001ca <vListInitialiseItem>:
     1ca:	fc 01       	movw	r30, r24
     1cc:	11 86       	std	Z+9, r1	; 0x09
     1ce:	10 86       	std	Z+8, r1	; 0x08
     1d0:	08 95       	ret

000001d2 <vListInsertEnd>:
     1d2:	cf 93       	push	r28
     1d4:	df 93       	push	r29
     1d6:	9c 01       	movw	r18, r24
     1d8:	fb 01       	movw	r30, r22
     1da:	dc 01       	movw	r26, r24
     1dc:	11 96       	adiw	r26, 0x01	; 1
     1de:	cd 91       	ld	r28, X+
     1e0:	dc 91       	ld	r29, X
     1e2:	12 97       	sbiw	r26, 0x02	; 2
     1e4:	d3 83       	std	Z+3, r29	; 0x03
     1e6:	c2 83       	std	Z+2, r28	; 0x02
     1e8:	8c 81       	ldd	r24, Y+4	; 0x04
     1ea:	9d 81       	ldd	r25, Y+5	; 0x05
     1ec:	95 83       	std	Z+5, r25	; 0x05
     1ee:	84 83       	std	Z+4, r24	; 0x04
     1f0:	8c 81       	ldd	r24, Y+4	; 0x04
     1f2:	9d 81       	ldd	r25, Y+5	; 0x05
     1f4:	dc 01       	movw	r26, r24
     1f6:	13 96       	adiw	r26, 0x03	; 3
     1f8:	7c 93       	st	X, r23
     1fa:	6e 93       	st	-X, r22
     1fc:	12 97       	sbiw	r26, 0x02	; 2
     1fe:	7d 83       	std	Y+5, r23	; 0x05
     200:	6c 83       	std	Y+4, r22	; 0x04
     202:	31 87       	std	Z+9, r19	; 0x09
     204:	20 87       	std	Z+8, r18	; 0x08
     206:	f9 01       	movw	r30, r18
     208:	80 81       	ld	r24, Z
     20a:	8f 5f       	subi	r24, 0xFF	; 255
     20c:	80 83       	st	Z, r24
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	08 95       	ret

00000214 <vListInsert>:
     214:	cf 93       	push	r28
     216:	df 93       	push	r29
     218:	eb 01       	movw	r28, r22
     21a:	48 81       	ld	r20, Y
     21c:	59 81       	ldd	r21, Y+1	; 0x01
     21e:	4f 3f       	cpi	r20, 0xFF	; 255
     220:	2f ef       	ldi	r18, 0xFF	; 255
     222:	52 07       	cpc	r21, r18
     224:	21 f4       	brne	.+8      	; 0x22e <vListInsert+0x1a>
     226:	fc 01       	movw	r30, r24
     228:	a7 81       	ldd	r26, Z+7	; 0x07
     22a:	b0 85       	ldd	r27, Z+8	; 0x08
     22c:	0d c0       	rjmp	.+26     	; 0x248 <vListInsert+0x34>
     22e:	dc 01       	movw	r26, r24
     230:	13 96       	adiw	r26, 0x03	; 3
     232:	01 c0       	rjmp	.+2      	; 0x236 <vListInsert+0x22>
     234:	df 01       	movw	r26, r30
     236:	12 96       	adiw	r26, 0x02	; 2
     238:	ed 91       	ld	r30, X+
     23a:	fc 91       	ld	r31, X
     23c:	13 97       	sbiw	r26, 0x03	; 3
     23e:	20 81       	ld	r18, Z
     240:	31 81       	ldd	r19, Z+1	; 0x01
     242:	42 17       	cp	r20, r18
     244:	53 07       	cpc	r21, r19
     246:	b0 f7       	brcc	.-20     	; 0x234 <vListInsert+0x20>
     248:	12 96       	adiw	r26, 0x02	; 2
     24a:	ed 91       	ld	r30, X+
     24c:	fc 91       	ld	r31, X
     24e:	13 97       	sbiw	r26, 0x03	; 3
     250:	fb 83       	std	Y+3, r31	; 0x03
     252:	ea 83       	std	Y+2, r30	; 0x02
     254:	d5 83       	std	Z+5, r29	; 0x05
     256:	c4 83       	std	Z+4, r28	; 0x04
     258:	bd 83       	std	Y+5, r27	; 0x05
     25a:	ac 83       	std	Y+4, r26	; 0x04
     25c:	13 96       	adiw	r26, 0x03	; 3
     25e:	dc 93       	st	X, r29
     260:	ce 93       	st	-X, r28
     262:	12 97       	sbiw	r26, 0x02	; 2
     264:	99 87       	std	Y+9, r25	; 0x09
     266:	88 87       	std	Y+8, r24	; 0x08
     268:	fc 01       	movw	r30, r24
     26a:	20 81       	ld	r18, Z
     26c:	2f 5f       	subi	r18, 0xFF	; 255
     26e:	20 83       	st	Z, r18
     270:	df 91       	pop	r29
     272:	cf 91       	pop	r28
     274:	08 95       	ret

00000276 <uxListRemove>:
     276:	cf 93       	push	r28
     278:	df 93       	push	r29
     27a:	fc 01       	movw	r30, r24
     27c:	a0 85       	ldd	r26, Z+8	; 0x08
     27e:	b1 85       	ldd	r27, Z+9	; 0x09
     280:	c2 81       	ldd	r28, Z+2	; 0x02
     282:	d3 81       	ldd	r29, Z+3	; 0x03
     284:	84 81       	ldd	r24, Z+4	; 0x04
     286:	95 81       	ldd	r25, Z+5	; 0x05
     288:	9d 83       	std	Y+5, r25	; 0x05
     28a:	8c 83       	std	Y+4, r24	; 0x04
     28c:	c4 81       	ldd	r28, Z+4	; 0x04
     28e:	d5 81       	ldd	r29, Z+5	; 0x05
     290:	82 81       	ldd	r24, Z+2	; 0x02
     292:	93 81       	ldd	r25, Z+3	; 0x03
     294:	9b 83       	std	Y+3, r25	; 0x03
     296:	8a 83       	std	Y+2, r24	; 0x02
     298:	11 96       	adiw	r26, 0x01	; 1
     29a:	8d 91       	ld	r24, X+
     29c:	9c 91       	ld	r25, X
     29e:	12 97       	sbiw	r26, 0x02	; 2
     2a0:	e8 17       	cp	r30, r24
     2a2:	f9 07       	cpc	r31, r25
     2a4:	31 f4       	brne	.+12     	; 0x2b2 <uxListRemove+0x3c>
     2a6:	84 81       	ldd	r24, Z+4	; 0x04
     2a8:	95 81       	ldd	r25, Z+5	; 0x05
     2aa:	12 96       	adiw	r26, 0x02	; 2
     2ac:	9c 93       	st	X, r25
     2ae:	8e 93       	st	-X, r24
     2b0:	11 97       	sbiw	r26, 0x01	; 1
     2b2:	11 86       	std	Z+9, r1	; 0x09
     2b4:	10 86       	std	Z+8, r1	; 0x08
     2b6:	8c 91       	ld	r24, X
     2b8:	81 50       	subi	r24, 0x01	; 1
     2ba:	8c 93       	st	X, r24
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	08 95       	ret

000002c2 <pxPortInitialiseStack>:
     2c2:	31 e1       	ldi	r19, 0x11	; 17
     2c4:	fc 01       	movw	r30, r24
     2c6:	30 83       	st	Z, r19
     2c8:	31 97       	sbiw	r30, 0x01	; 1
     2ca:	22 e2       	ldi	r18, 0x22	; 34
     2cc:	20 83       	st	Z, r18
     2ce:	31 97       	sbiw	r30, 0x01	; 1
     2d0:	a3 e3       	ldi	r26, 0x33	; 51
     2d2:	a0 83       	st	Z, r26
     2d4:	31 97       	sbiw	r30, 0x01	; 1
     2d6:	60 83       	st	Z, r22
     2d8:	31 97       	sbiw	r30, 0x01	; 1
     2da:	70 83       	st	Z, r23
     2dc:	31 97       	sbiw	r30, 0x01	; 1
     2de:	10 82       	st	Z, r1
     2e0:	31 97       	sbiw	r30, 0x01	; 1
     2e2:	60 e8       	ldi	r22, 0x80	; 128
     2e4:	60 83       	st	Z, r22
     2e6:	31 97       	sbiw	r30, 0x01	; 1
     2e8:	10 82       	st	Z, r1
     2ea:	31 97       	sbiw	r30, 0x01	; 1
     2ec:	62 e0       	ldi	r22, 0x02	; 2
     2ee:	60 83       	st	Z, r22
     2f0:	31 97       	sbiw	r30, 0x01	; 1
     2f2:	63 e0       	ldi	r22, 0x03	; 3
     2f4:	60 83       	st	Z, r22
     2f6:	31 97       	sbiw	r30, 0x01	; 1
     2f8:	64 e0       	ldi	r22, 0x04	; 4
     2fa:	60 83       	st	Z, r22
     2fc:	31 97       	sbiw	r30, 0x01	; 1
     2fe:	65 e0       	ldi	r22, 0x05	; 5
     300:	60 83       	st	Z, r22
     302:	31 97       	sbiw	r30, 0x01	; 1
     304:	66 e0       	ldi	r22, 0x06	; 6
     306:	60 83       	st	Z, r22
     308:	31 97       	sbiw	r30, 0x01	; 1
     30a:	67 e0       	ldi	r22, 0x07	; 7
     30c:	60 83       	st	Z, r22
     30e:	31 97       	sbiw	r30, 0x01	; 1
     310:	68 e0       	ldi	r22, 0x08	; 8
     312:	60 83       	st	Z, r22
     314:	31 97       	sbiw	r30, 0x01	; 1
     316:	69 e0       	ldi	r22, 0x09	; 9
     318:	60 83       	st	Z, r22
     31a:	31 97       	sbiw	r30, 0x01	; 1
     31c:	60 e1       	ldi	r22, 0x10	; 16
     31e:	60 83       	st	Z, r22
     320:	31 97       	sbiw	r30, 0x01	; 1
     322:	30 83       	st	Z, r19
     324:	31 97       	sbiw	r30, 0x01	; 1
     326:	32 e1       	ldi	r19, 0x12	; 18
     328:	30 83       	st	Z, r19
     32a:	31 97       	sbiw	r30, 0x01	; 1
     32c:	33 e1       	ldi	r19, 0x13	; 19
     32e:	30 83       	st	Z, r19
     330:	31 97       	sbiw	r30, 0x01	; 1
     332:	34 e1       	ldi	r19, 0x14	; 20
     334:	30 83       	st	Z, r19
     336:	31 97       	sbiw	r30, 0x01	; 1
     338:	35 e1       	ldi	r19, 0x15	; 21
     33a:	30 83       	st	Z, r19
     33c:	31 97       	sbiw	r30, 0x01	; 1
     33e:	36 e1       	ldi	r19, 0x16	; 22
     340:	30 83       	st	Z, r19
     342:	31 97       	sbiw	r30, 0x01	; 1
     344:	37 e1       	ldi	r19, 0x17	; 23
     346:	30 83       	st	Z, r19
     348:	31 97       	sbiw	r30, 0x01	; 1
     34a:	38 e1       	ldi	r19, 0x18	; 24
     34c:	30 83       	st	Z, r19
     34e:	31 97       	sbiw	r30, 0x01	; 1
     350:	39 e1       	ldi	r19, 0x19	; 25
     352:	30 83       	st	Z, r19
     354:	31 97       	sbiw	r30, 0x01	; 1
     356:	30 e2       	ldi	r19, 0x20	; 32
     358:	30 83       	st	Z, r19
     35a:	31 97       	sbiw	r30, 0x01	; 1
     35c:	31 e2       	ldi	r19, 0x21	; 33
     35e:	30 83       	st	Z, r19
     360:	31 97       	sbiw	r30, 0x01	; 1
     362:	20 83       	st	Z, r18
     364:	31 97       	sbiw	r30, 0x01	; 1
     366:	23 e2       	ldi	r18, 0x23	; 35
     368:	20 83       	st	Z, r18
     36a:	31 97       	sbiw	r30, 0x01	; 1
     36c:	40 83       	st	Z, r20
     36e:	31 97       	sbiw	r30, 0x01	; 1
     370:	50 83       	st	Z, r21
     372:	31 97       	sbiw	r30, 0x01	; 1
     374:	26 e2       	ldi	r18, 0x26	; 38
     376:	20 83       	st	Z, r18
     378:	31 97       	sbiw	r30, 0x01	; 1
     37a:	27 e2       	ldi	r18, 0x27	; 39
     37c:	20 83       	st	Z, r18
     37e:	31 97       	sbiw	r30, 0x01	; 1
     380:	28 e2       	ldi	r18, 0x28	; 40
     382:	20 83       	st	Z, r18
     384:	31 97       	sbiw	r30, 0x01	; 1
     386:	29 e2       	ldi	r18, 0x29	; 41
     388:	20 83       	st	Z, r18
     38a:	31 97       	sbiw	r30, 0x01	; 1
     38c:	20 e3       	ldi	r18, 0x30	; 48
     38e:	20 83       	st	Z, r18
     390:	31 97       	sbiw	r30, 0x01	; 1
     392:	21 e3       	ldi	r18, 0x31	; 49
     394:	20 83       	st	Z, r18
     396:	86 97       	sbiw	r24, 0x26	; 38
     398:	08 95       	ret

0000039a <xPortStartScheduler>:
     39a:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     39e:	8c e7       	ldi	r24, 0x7C	; 124
     3a0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     3a4:	8b e0       	ldi	r24, 0x0B	; 11
     3a6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     3aa:	ef e6       	ldi	r30, 0x6F	; 111
     3ac:	f0 e0       	ldi	r31, 0x00	; 0
     3ae:	80 81       	ld	r24, Z
     3b0:	82 60       	ori	r24, 0x02	; 2
     3b2:	80 83       	st	Z, r24
     3b4:	a0 91 fd 07 	lds	r26, 0x07FD	; 0x8007fd <pxCurrentTCB>
     3b8:	b0 91 fe 07 	lds	r27, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     3bc:	cd 91       	ld	r28, X+
     3be:	cd bf       	out	0x3d, r28	; 61
     3c0:	dd 91       	ld	r29, X+
     3c2:	de bf       	out	0x3e, r29	; 62
     3c4:	ff 91       	pop	r31
     3c6:	ef 91       	pop	r30
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	bf 91       	pop	r27
     3ce:	af 91       	pop	r26
     3d0:	9f 91       	pop	r25
     3d2:	8f 91       	pop	r24
     3d4:	7f 91       	pop	r23
     3d6:	6f 91       	pop	r22
     3d8:	5f 91       	pop	r21
     3da:	4f 91       	pop	r20
     3dc:	3f 91       	pop	r19
     3de:	2f 91       	pop	r18
     3e0:	1f 91       	pop	r17
     3e2:	0f 91       	pop	r16
     3e4:	ff 90       	pop	r15
     3e6:	ef 90       	pop	r14
     3e8:	df 90       	pop	r13
     3ea:	cf 90       	pop	r12
     3ec:	bf 90       	pop	r11
     3ee:	af 90       	pop	r10
     3f0:	9f 90       	pop	r9
     3f2:	8f 90       	pop	r8
     3f4:	7f 90       	pop	r7
     3f6:	6f 90       	pop	r6
     3f8:	5f 90       	pop	r5
     3fa:	4f 90       	pop	r4
     3fc:	3f 90       	pop	r3
     3fe:	2f 90       	pop	r2
     400:	1f 90       	pop	r1
     402:	0f 90       	pop	r0
     404:	0f be       	out	0x3f, r0	; 63
     406:	0f 90       	pop	r0
     408:	08 95       	ret
     40a:	81 e0       	ldi	r24, 0x01	; 1
     40c:	08 95       	ret

0000040e <vPortYield>:
     40e:	0f 92       	push	r0
     410:	0f b6       	in	r0, 0x3f	; 63
     412:	f8 94       	cli
     414:	0f 92       	push	r0
     416:	1f 92       	push	r1
     418:	11 24       	eor	r1, r1
     41a:	2f 92       	push	r2
     41c:	3f 92       	push	r3
     41e:	4f 92       	push	r4
     420:	5f 92       	push	r5
     422:	6f 92       	push	r6
     424:	7f 92       	push	r7
     426:	8f 92       	push	r8
     428:	9f 92       	push	r9
     42a:	af 92       	push	r10
     42c:	bf 92       	push	r11
     42e:	cf 92       	push	r12
     430:	df 92       	push	r13
     432:	ef 92       	push	r14
     434:	ff 92       	push	r15
     436:	0f 93       	push	r16
     438:	1f 93       	push	r17
     43a:	2f 93       	push	r18
     43c:	3f 93       	push	r19
     43e:	4f 93       	push	r20
     440:	5f 93       	push	r21
     442:	6f 93       	push	r22
     444:	7f 93       	push	r23
     446:	8f 93       	push	r24
     448:	9f 93       	push	r25
     44a:	af 93       	push	r26
     44c:	bf 93       	push	r27
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
     452:	ef 93       	push	r30
     454:	ff 93       	push	r31
     456:	a0 91 fd 07 	lds	r26, 0x07FD	; 0x8007fd <pxCurrentTCB>
     45a:	b0 91 fe 07 	lds	r27, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     45e:	0d b6       	in	r0, 0x3d	; 61
     460:	0d 92       	st	X+, r0
     462:	0e b6       	in	r0, 0x3e	; 62
     464:	0d 92       	st	X+, r0
     466:	0e 94 b6 09 	call	0x136c	; 0x136c <vTaskSwitchContext>
     46a:	a0 91 fd 07 	lds	r26, 0x07FD	; 0x8007fd <pxCurrentTCB>
     46e:	b0 91 fe 07 	lds	r27, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     472:	cd 91       	ld	r28, X+
     474:	cd bf       	out	0x3d, r28	; 61
     476:	dd 91       	ld	r29, X+
     478:	de bf       	out	0x3e, r29	; 62
     47a:	ff 91       	pop	r31
     47c:	ef 91       	pop	r30
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	bf 91       	pop	r27
     484:	af 91       	pop	r26
     486:	9f 91       	pop	r25
     488:	8f 91       	pop	r24
     48a:	7f 91       	pop	r23
     48c:	6f 91       	pop	r22
     48e:	5f 91       	pop	r21
     490:	4f 91       	pop	r20
     492:	3f 91       	pop	r19
     494:	2f 91       	pop	r18
     496:	1f 91       	pop	r17
     498:	0f 91       	pop	r16
     49a:	ff 90       	pop	r15
     49c:	ef 90       	pop	r14
     49e:	df 90       	pop	r13
     4a0:	cf 90       	pop	r12
     4a2:	bf 90       	pop	r11
     4a4:	af 90       	pop	r10
     4a6:	9f 90       	pop	r9
     4a8:	8f 90       	pop	r8
     4aa:	7f 90       	pop	r7
     4ac:	6f 90       	pop	r6
     4ae:	5f 90       	pop	r5
     4b0:	4f 90       	pop	r4
     4b2:	3f 90       	pop	r3
     4b4:	2f 90       	pop	r2
     4b6:	1f 90       	pop	r1
     4b8:	0f 90       	pop	r0
     4ba:	0f be       	out	0x3f, r0	; 63
     4bc:	0f 90       	pop	r0
     4be:	08 95       	ret

000004c0 <__vector_16>:
     4c0:	1f 92       	push	r1
     4c2:	0f 92       	push	r0
     4c4:	0f b6       	in	r0, 0x3f	; 63
     4c6:	0f 92       	push	r0
     4c8:	11 24       	eor	r1, r1
     4ca:	0f 90       	pop	r0
     4cc:	0f be       	out	0x3f, r0	; 63
     4ce:	0f 90       	pop	r0
     4d0:	1f 90       	pop	r1
     4d2:	18 95       	reti

000004d4 <vPortYieldFromTick>:
     4d4:	0f 92       	push	r0
     4d6:	0f b6       	in	r0, 0x3f	; 63
     4d8:	f8 94       	cli
     4da:	0f 92       	push	r0
     4dc:	1f 92       	push	r1
     4de:	11 24       	eor	r1, r1
     4e0:	2f 92       	push	r2
     4e2:	3f 92       	push	r3
     4e4:	4f 92       	push	r4
     4e6:	5f 92       	push	r5
     4e8:	6f 92       	push	r6
     4ea:	7f 92       	push	r7
     4ec:	8f 92       	push	r8
     4ee:	9f 92       	push	r9
     4f0:	af 92       	push	r10
     4f2:	bf 92       	push	r11
     4f4:	cf 92       	push	r12
     4f6:	df 92       	push	r13
     4f8:	ef 92       	push	r14
     4fa:	ff 92       	push	r15
     4fc:	0f 93       	push	r16
     4fe:	1f 93       	push	r17
     500:	2f 93       	push	r18
     502:	3f 93       	push	r19
     504:	4f 93       	push	r20
     506:	5f 93       	push	r21
     508:	6f 93       	push	r22
     50a:	7f 93       	push	r23
     50c:	8f 93       	push	r24
     50e:	9f 93       	push	r25
     510:	af 93       	push	r26
     512:	bf 93       	push	r27
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	ef 93       	push	r30
     51a:	ff 93       	push	r31
     51c:	a0 91 fd 07 	lds	r26, 0x07FD	; 0x8007fd <pxCurrentTCB>
     520:	b0 91 fe 07 	lds	r27, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     524:	0d b6       	in	r0, 0x3d	; 61
     526:	0d 92       	st	X+, r0
     528:	0e b6       	in	r0, 0x3e	; 62
     52a:	0d 92       	st	X+, r0
     52c:	0e 94 f8 07 	call	0xff0	; 0xff0 <xTaskIncrementTick>
     530:	81 11       	cpse	r24, r1
     532:	0e 94 b6 09 	call	0x136c	; 0x136c <vTaskSwitchContext>
     536:	a0 91 fd 07 	lds	r26, 0x07FD	; 0x8007fd <pxCurrentTCB>
     53a:	b0 91 fe 07 	lds	r27, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     53e:	cd 91       	ld	r28, X+
     540:	cd bf       	out	0x3d, r28	; 61
     542:	dd 91       	ld	r29, X+
     544:	de bf       	out	0x3e, r29	; 62
     546:	ff 91       	pop	r31
     548:	ef 91       	pop	r30
     54a:	df 91       	pop	r29
     54c:	cf 91       	pop	r28
     54e:	bf 91       	pop	r27
     550:	af 91       	pop	r26
     552:	9f 91       	pop	r25
     554:	8f 91       	pop	r24
     556:	7f 91       	pop	r23
     558:	6f 91       	pop	r22
     55a:	5f 91       	pop	r21
     55c:	4f 91       	pop	r20
     55e:	3f 91       	pop	r19
     560:	2f 91       	pop	r18
     562:	1f 91       	pop	r17
     564:	0f 91       	pop	r16
     566:	ff 90       	pop	r15
     568:	ef 90       	pop	r14
     56a:	df 90       	pop	r13
     56c:	cf 90       	pop	r12
     56e:	bf 90       	pop	r11
     570:	af 90       	pop	r10
     572:	9f 90       	pop	r9
     574:	8f 90       	pop	r8
     576:	7f 90       	pop	r7
     578:	6f 90       	pop	r6
     57a:	5f 90       	pop	r5
     57c:	4f 90       	pop	r4
     57e:	3f 90       	pop	r3
     580:	2f 90       	pop	r2
     582:	1f 90       	pop	r1
     584:	0f 90       	pop	r0
     586:	0f be       	out	0x3f, r0	; 63
     588:	0f 90       	pop	r0
     58a:	08 95       	ret

0000058c <__vector_11>:
     58c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <vPortYieldFromTick>
     590:	18 95       	reti

00000592 <pvPortMalloc>:
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	ec 01       	movw	r28, r24
     59c:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <vTaskSuspendAll>
     5a0:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <__data_end>
     5a4:	81 11       	cpse	r24, r1
     5a6:	1d c0       	rjmp	.+58     	; 0x5e2 <pvPortMalloc+0x50>
     5a8:	ed eb       	ldi	r30, 0xBD	; 189
     5aa:	f1 e0       	ldi	r31, 0x01	; 1
     5ac:	82 ec       	ldi	r24, 0xC2	; 194
     5ae:	91 e0       	ldi	r25, 0x01	; 1
     5b0:	91 83       	std	Z+1, r25	; 0x01
     5b2:	80 83       	st	Z, r24
     5b4:	13 82       	std	Z+3, r1	; 0x03
     5b6:	12 82       	std	Z+2, r1	; 0x02
     5b8:	e9 eb       	ldi	r30, 0xB9	; 185
     5ba:	f1 e0       	ldi	r31, 0x01	; 1
     5bc:	8b ed       	ldi	r24, 0xDB	; 219
     5be:	95 e0       	ldi	r25, 0x05	; 5
     5c0:	93 83       	std	Z+3, r25	; 0x03
     5c2:	82 83       	std	Z+2, r24	; 0x02
     5c4:	11 82       	std	Z+1, r1	; 0x01
     5c6:	10 82       	st	Z, r1
     5c8:	a1 ec       	ldi	r26, 0xC1	; 193
     5ca:	b1 e0       	ldi	r27, 0x01	; 1
     5cc:	14 96       	adiw	r26, 0x04	; 4
     5ce:	9c 93       	st	X, r25
     5d0:	8e 93       	st	-X, r24
     5d2:	13 97       	sbiw	r26, 0x03	; 3
     5d4:	12 96       	adiw	r26, 0x02	; 2
     5d6:	fc 93       	st	X, r31
     5d8:	ee 93       	st	-X, r30
     5da:	11 97       	sbiw	r26, 0x01	; 1
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <__data_end>
     5e2:	20 97       	sbiw	r28, 0x00	; 0
     5e4:	09 f4       	brne	.+2      	; 0x5e8 <pvPortMalloc+0x56>
     5e6:	5f c0       	rjmp	.+190    	; 0x6a6 <pvPortMalloc+0x114>
     5e8:	9e 01       	movw	r18, r28
     5ea:	2c 5f       	subi	r18, 0xFC	; 252
     5ec:	3f 4f       	sbci	r19, 0xFF	; 255
     5ee:	23 96       	adiw	r28, 0x03	; 3
     5f0:	ca 3d       	cpi	r28, 0xDA	; 218
     5f2:	d5 40       	sbci	r29, 0x05	; 5
     5f4:	08 f0       	brcs	.+2      	; 0x5f8 <pvPortMalloc+0x66>
     5f6:	5a c0       	rjmp	.+180    	; 0x6ac <pvPortMalloc+0x11a>
     5f8:	e0 91 bd 01 	lds	r30, 0x01BD	; 0x8001bd <xStart>
     5fc:	f0 91 be 01 	lds	r31, 0x01BE	; 0x8001be <xStart+0x1>
     600:	ad eb       	ldi	r26, 0xBD	; 189
     602:	b1 e0       	ldi	r27, 0x01	; 1
     604:	02 c0       	rjmp	.+4      	; 0x60a <pvPortMalloc+0x78>
     606:	df 01       	movw	r26, r30
     608:	fc 01       	movw	r30, r24
     60a:	82 81       	ldd	r24, Z+2	; 0x02
     60c:	93 81       	ldd	r25, Z+3	; 0x03
     60e:	82 17       	cp	r24, r18
     610:	93 07       	cpc	r25, r19
     612:	20 f4       	brcc	.+8      	; 0x61c <pvPortMalloc+0x8a>
     614:	80 81       	ld	r24, Z
     616:	91 81       	ldd	r25, Z+1	; 0x01
     618:	00 97       	sbiw	r24, 0x00	; 0
     61a:	a9 f7       	brne	.-22     	; 0x606 <pvPortMalloc+0x74>
     61c:	c1 e0       	ldi	r28, 0x01	; 1
     61e:	e9 3b       	cpi	r30, 0xB9	; 185
     620:	fc 07       	cpc	r31, r28
     622:	09 f4       	brne	.+2      	; 0x626 <pvPortMalloc+0x94>
     624:	46 c0       	rjmp	.+140    	; 0x6b2 <pvPortMalloc+0x120>
     626:	cd 91       	ld	r28, X+
     628:	dc 91       	ld	r29, X
     62a:	11 97       	sbiw	r26, 0x01	; 1
     62c:	8e 01       	movw	r16, r28
     62e:	0c 5f       	subi	r16, 0xFC	; 252
     630:	1f 4f       	sbci	r17, 0xFF	; 255
     632:	80 81       	ld	r24, Z
     634:	91 81       	ldd	r25, Z+1	; 0x01
     636:	8d 93       	st	X+, r24
     638:	9c 93       	st	X, r25
     63a:	82 81       	ldd	r24, Z+2	; 0x02
     63c:	93 81       	ldd	r25, Z+3	; 0x03
     63e:	82 1b       	sub	r24, r18
     640:	93 0b       	sbc	r25, r19
     642:	89 30       	cpi	r24, 0x09	; 9
     644:	91 05       	cpc	r25, r1
     646:	10 f1       	brcs	.+68     	; 0x68c <pvPortMalloc+0xfa>
     648:	bf 01       	movw	r22, r30
     64a:	62 0f       	add	r22, r18
     64c:	73 1f       	adc	r23, r19
     64e:	db 01       	movw	r26, r22
     650:	13 96       	adiw	r26, 0x03	; 3
     652:	9c 93       	st	X, r25
     654:	8e 93       	st	-X, r24
     656:	12 97       	sbiw	r26, 0x02	; 2
     658:	33 83       	std	Z+3, r19	; 0x03
     65a:	22 83       	std	Z+2, r18	; 0x02
     65c:	12 96       	adiw	r26, 0x02	; 2
     65e:	4d 91       	ld	r20, X+
     660:	5c 91       	ld	r21, X
     662:	13 97       	sbiw	r26, 0x03	; 3
     664:	8d eb       	ldi	r24, 0xBD	; 189
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	01 c0       	rjmp	.+2      	; 0x66c <pvPortMalloc+0xda>
     66a:	cd 01       	movw	r24, r26
     66c:	ec 01       	movw	r28, r24
     66e:	a8 81       	ld	r26, Y
     670:	b9 81       	ldd	r27, Y+1	; 0x01
     672:	12 96       	adiw	r26, 0x02	; 2
     674:	2d 91       	ld	r18, X+
     676:	3c 91       	ld	r19, X
     678:	13 97       	sbiw	r26, 0x03	; 3
     67a:	24 17       	cp	r18, r20
     67c:	35 07       	cpc	r19, r21
     67e:	a8 f3       	brcs	.-22     	; 0x66a <pvPortMalloc+0xd8>
     680:	eb 01       	movw	r28, r22
     682:	b9 83       	std	Y+1, r27	; 0x01
     684:	a8 83       	st	Y, r26
     686:	dc 01       	movw	r26, r24
     688:	6d 93       	st	X+, r22
     68a:	7c 93       	st	X, r23
     68c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     690:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     694:	22 81       	ldd	r18, Z+2	; 0x02
     696:	33 81       	ldd	r19, Z+3	; 0x03
     698:	82 1b       	sub	r24, r18
     69a:	93 0b       	sbc	r25, r19
     69c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     6a0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     6a4:	08 c0       	rjmp	.+16     	; 0x6b6 <pvPortMalloc+0x124>
     6a6:	00 e0       	ldi	r16, 0x00	; 0
     6a8:	10 e0       	ldi	r17, 0x00	; 0
     6aa:	05 c0       	rjmp	.+10     	; 0x6b6 <pvPortMalloc+0x124>
     6ac:	00 e0       	ldi	r16, 0x00	; 0
     6ae:	10 e0       	ldi	r17, 0x00	; 0
     6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <pvPortMalloc+0x124>
     6b2:	00 e0       	ldi	r16, 0x00	; 0
     6b4:	10 e0       	ldi	r17, 0x00	; 0
     6b6:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
     6ba:	c8 01       	movw	r24, r16
     6bc:	df 91       	pop	r29
     6be:	cf 91       	pop	r28
     6c0:	1f 91       	pop	r17
     6c2:	0f 91       	pop	r16
     6c4:	08 95       	ret

000006c6 <vPortFree>:
     6c6:	0f 93       	push	r16
     6c8:	1f 93       	push	r17
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	00 97       	sbiw	r24, 0x00	; 0
     6d0:	41 f1       	breq	.+80     	; 0x722 <vPortFree+0x5c>
     6d2:	ec 01       	movw	r28, r24
     6d4:	8c 01       	movw	r16, r24
     6d6:	04 50       	subi	r16, 0x04	; 4
     6d8:	11 09       	sbc	r17, r1
     6da:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <vTaskSuspendAll>
     6de:	f8 01       	movw	r30, r16
     6e0:	42 81       	ldd	r20, Z+2	; 0x02
     6e2:	53 81       	ldd	r21, Z+3	; 0x03
     6e4:	ad eb       	ldi	r26, 0xBD	; 189
     6e6:	b1 e0       	ldi	r27, 0x01	; 1
     6e8:	01 c0       	rjmp	.+2      	; 0x6ec <vPortFree+0x26>
     6ea:	df 01       	movw	r26, r30
     6ec:	ed 91       	ld	r30, X+
     6ee:	fc 91       	ld	r31, X
     6f0:	11 97       	sbiw	r26, 0x01	; 1
     6f2:	22 81       	ldd	r18, Z+2	; 0x02
     6f4:	33 81       	ldd	r19, Z+3	; 0x03
     6f6:	24 17       	cp	r18, r20
     6f8:	35 07       	cpc	r19, r21
     6fa:	b8 f3       	brcs	.-18     	; 0x6ea <vPortFree+0x24>
     6fc:	24 97       	sbiw	r28, 0x04	; 4
     6fe:	f9 83       	std	Y+1, r31	; 0x01
     700:	e8 83       	st	Y, r30
     702:	0d 93       	st	X+, r16
     704:	1c 93       	st	X, r17
     706:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     70a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     70e:	8a 81       	ldd	r24, Y+2	; 0x02
     710:	9b 81       	ldd	r25, Y+3	; 0x03
     712:	82 0f       	add	r24, r18
     714:	93 1f       	adc	r25, r19
     716:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     71a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     71e:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	1f 91       	pop	r17
     728:	0f 91       	pop	r16
     72a:	08 95       	ret

0000072c <prvCopyDataToQueue>:
     72c:	1f 93       	push	r17
     72e:	cf 93       	push	r28
     730:	df 93       	push	r29
     732:	ec 01       	movw	r28, r24
     734:	14 2f       	mov	r17, r20
     736:	4c 8d       	ldd	r20, Y+28	; 0x1c
     738:	44 23       	and	r20, r20
     73a:	d9 f1       	breq	.+118    	; 0x7b2 <prvCopyDataToQueue+0x86>
     73c:	11 11       	cpse	r17, r1
     73e:	16 c0       	rjmp	.+44     	; 0x76c <prvCopyDataToQueue+0x40>
     740:	50 e0       	ldi	r21, 0x00	; 0
     742:	8c 81       	ldd	r24, Y+4	; 0x04
     744:	9d 81       	ldd	r25, Y+5	; 0x05
     746:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <memcpy>
     74a:	2c 8d       	ldd	r18, Y+28	; 0x1c
     74c:	8c 81       	ldd	r24, Y+4	; 0x04
     74e:	9d 81       	ldd	r25, Y+5	; 0x05
     750:	82 0f       	add	r24, r18
     752:	91 1d       	adc	r25, r1
     754:	9d 83       	std	Y+5, r25	; 0x05
     756:	8c 83       	std	Y+4, r24	; 0x04
     758:	2a 81       	ldd	r18, Y+2	; 0x02
     75a:	3b 81       	ldd	r19, Y+3	; 0x03
     75c:	82 17       	cp	r24, r18
     75e:	93 07       	cpc	r25, r19
     760:	40 f1       	brcs	.+80     	; 0x7b2 <prvCopyDataToQueue+0x86>
     762:	88 81       	ld	r24, Y
     764:	99 81       	ldd	r25, Y+1	; 0x01
     766:	9d 83       	std	Y+5, r25	; 0x05
     768:	8c 83       	std	Y+4, r24	; 0x04
     76a:	23 c0       	rjmp	.+70     	; 0x7b2 <prvCopyDataToQueue+0x86>
     76c:	50 e0       	ldi	r21, 0x00	; 0
     76e:	8e 81       	ldd	r24, Y+6	; 0x06
     770:	9f 81       	ldd	r25, Y+7	; 0x07
     772:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <memcpy>
     776:	8c 8d       	ldd	r24, Y+28	; 0x1c
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	91 95       	neg	r25
     77c:	81 95       	neg	r24
     77e:	91 09       	sbc	r25, r1
     780:	2e 81       	ldd	r18, Y+6	; 0x06
     782:	3f 81       	ldd	r19, Y+7	; 0x07
     784:	28 0f       	add	r18, r24
     786:	39 1f       	adc	r19, r25
     788:	3f 83       	std	Y+7, r19	; 0x07
     78a:	2e 83       	std	Y+6, r18	; 0x06
     78c:	48 81       	ld	r20, Y
     78e:	59 81       	ldd	r21, Y+1	; 0x01
     790:	24 17       	cp	r18, r20
     792:	35 07       	cpc	r19, r21
     794:	30 f4       	brcc	.+12     	; 0x7a2 <prvCopyDataToQueue+0x76>
     796:	2a 81       	ldd	r18, Y+2	; 0x02
     798:	3b 81       	ldd	r19, Y+3	; 0x03
     79a:	82 0f       	add	r24, r18
     79c:	93 1f       	adc	r25, r19
     79e:	9f 83       	std	Y+7, r25	; 0x07
     7a0:	8e 83       	std	Y+6, r24	; 0x06
     7a2:	12 30       	cpi	r17, 0x02	; 2
     7a4:	31 f4       	brne	.+12     	; 0x7b2 <prvCopyDataToQueue+0x86>
     7a6:	8a 8d       	ldd	r24, Y+26	; 0x1a
     7a8:	88 23       	and	r24, r24
     7aa:	19 f0       	breq	.+6      	; 0x7b2 <prvCopyDataToQueue+0x86>
     7ac:	8a 8d       	ldd	r24, Y+26	; 0x1a
     7ae:	81 50       	subi	r24, 0x01	; 1
     7b0:	8a 8f       	std	Y+26, r24	; 0x1a
     7b2:	8a 8d       	ldd	r24, Y+26	; 0x1a
     7b4:	8f 5f       	subi	r24, 0xFF	; 255
     7b6:	8a 8f       	std	Y+26, r24	; 0x1a
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	1f 91       	pop	r17
     7c0:	08 95       	ret

000007c2 <prvNotifyQueueSetContainer>:
     7c2:	ff 92       	push	r15
     7c4:	0f 93       	push	r16
     7c6:	1f 93       	push	r17
     7c8:	cf 93       	push	r28
     7ca:	df 93       	push	r29
     7cc:	00 d0       	rcall	.+0      	; 0x7ce <prvNotifyQueueSetContainer+0xc>
     7ce:	cd b7       	in	r28, 0x3d	; 61
     7d0:	de b7       	in	r29, 0x3e	; 62
     7d2:	9a 83       	std	Y+2, r25	; 0x02
     7d4:	89 83       	std	Y+1, r24	; 0x01
     7d6:	fc 01       	movw	r30, r24
     7d8:	07 8d       	ldd	r16, Z+31	; 0x1f
     7da:	10 a1       	ldd	r17, Z+32	; 0x20
     7dc:	f8 01       	movw	r30, r16
     7de:	92 8d       	ldd	r25, Z+26	; 0x1a
     7e0:	83 8d       	ldd	r24, Z+27	; 0x1b
     7e2:	98 17       	cp	r25, r24
     7e4:	e8 f4       	brcc	.+58     	; 0x820 <prvNotifyQueueSetContainer+0x5e>
     7e6:	46 2f       	mov	r20, r22
     7e8:	be 01       	movw	r22, r28
     7ea:	6f 5f       	subi	r22, 0xFF	; 255
     7ec:	7f 4f       	sbci	r23, 0xFF	; 255
     7ee:	c8 01       	movw	r24, r16
     7f0:	0e 94 96 03 	call	0x72c	; 0x72c <prvCopyDataToQueue>
     7f4:	f8 2e       	mov	r15, r24
     7f6:	f8 01       	movw	r30, r16
     7f8:	86 8d       	ldd	r24, Z+30	; 0x1e
     7fa:	8f 3f       	cpi	r24, 0xFF	; 255
     7fc:	61 f4       	brne	.+24     	; 0x816 <prvNotifyQueueSetContainer+0x54>
     7fe:	81 89       	ldd	r24, Z+17	; 0x11
     800:	88 23       	and	r24, r24
     802:	79 f0       	breq	.+30     	; 0x822 <prvNotifyQueueSetContainer+0x60>
     804:	c8 01       	movw	r24, r16
     806:	41 96       	adiw	r24, 0x11	; 17
     808:	0e 94 4f 0a 	call	0x149e	; 0x149e <xTaskRemoveFromEventList>
     80c:	88 23       	and	r24, r24
     80e:	49 f0       	breq	.+18     	; 0x822 <prvNotifyQueueSetContainer+0x60>
     810:	ff 24       	eor	r15, r15
     812:	f3 94       	inc	r15
     814:	06 c0       	rjmp	.+12     	; 0x822 <prvNotifyQueueSetContainer+0x60>
     816:	f8 01       	movw	r30, r16
     818:	86 8d       	ldd	r24, Z+30	; 0x1e
     81a:	8f 5f       	subi	r24, 0xFF	; 255
     81c:	86 8f       	std	Z+30, r24	; 0x1e
     81e:	01 c0       	rjmp	.+2      	; 0x822 <prvNotifyQueueSetContainer+0x60>
     820:	f1 2c       	mov	r15, r1
     822:	8f 2d       	mov	r24, r15
     824:	0f 90       	pop	r0
     826:	0f 90       	pop	r0
     828:	df 91       	pop	r29
     82a:	cf 91       	pop	r28
     82c:	1f 91       	pop	r17
     82e:	0f 91       	pop	r16
     830:	ff 90       	pop	r15
     832:	08 95       	ret

00000834 <prvCopyDataFromQueue>:
     834:	fc 01       	movw	r30, r24
     836:	44 8d       	ldd	r20, Z+28	; 0x1c
     838:	44 23       	and	r20, r20
     83a:	a9 f0       	breq	.+42     	; 0x866 <prvCopyDataFromQueue+0x32>
     83c:	50 e0       	ldi	r21, 0x00	; 0
     83e:	26 81       	ldd	r18, Z+6	; 0x06
     840:	37 81       	ldd	r19, Z+7	; 0x07
     842:	24 0f       	add	r18, r20
     844:	35 1f       	adc	r19, r21
     846:	37 83       	std	Z+7, r19	; 0x07
     848:	26 83       	std	Z+6, r18	; 0x06
     84a:	82 81       	ldd	r24, Z+2	; 0x02
     84c:	93 81       	ldd	r25, Z+3	; 0x03
     84e:	28 17       	cp	r18, r24
     850:	39 07       	cpc	r19, r25
     852:	20 f0       	brcs	.+8      	; 0x85c <prvCopyDataFromQueue+0x28>
     854:	80 81       	ld	r24, Z
     856:	91 81       	ldd	r25, Z+1	; 0x01
     858:	97 83       	std	Z+7, r25	; 0x07
     85a:	86 83       	std	Z+6, r24	; 0x06
     85c:	cb 01       	movw	r24, r22
     85e:	66 81       	ldd	r22, Z+6	; 0x06
     860:	77 81       	ldd	r23, Z+7	; 0x07
     862:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <memcpy>
     866:	08 95       	ret

00000868 <prvUnlockQueue>:
     868:	0f 93       	push	r16
     86a:	1f 93       	push	r17
     86c:	cf 93       	push	r28
     86e:	df 93       	push	r29
     870:	ec 01       	movw	r28, r24
     872:	0f b6       	in	r0, 0x3f	; 63
     874:	f8 94       	cli
     876:	0f 92       	push	r0
     878:	8e 8d       	ldd	r24, Y+30	; 0x1e
     87a:	18 16       	cp	r1, r24
     87c:	fc f4       	brge	.+62     	; 0x8bc <prvUnlockQueue+0x54>
     87e:	8e 01       	movw	r16, r28
     880:	0f 5e       	subi	r16, 0xEF	; 239
     882:	1f 4f       	sbci	r17, 0xFF	; 255
     884:	8f 8d       	ldd	r24, Y+31	; 0x1f
     886:	98 a1       	ldd	r25, Y+32	; 0x20
     888:	89 2b       	or	r24, r25
     88a:	49 f0       	breq	.+18     	; 0x89e <prvUnlockQueue+0x36>
     88c:	60 e0       	ldi	r22, 0x00	; 0
     88e:	ce 01       	movw	r24, r28
     890:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <prvNotifyQueueSetContainer>
     894:	81 30       	cpi	r24, 0x01	; 1
     896:	61 f4       	brne	.+24     	; 0x8b0 <prvUnlockQueue+0x48>
     898:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <vTaskMissedYield>
     89c:	09 c0       	rjmp	.+18     	; 0x8b0 <prvUnlockQueue+0x48>
     89e:	89 89       	ldd	r24, Y+17	; 0x11
     8a0:	88 23       	and	r24, r24
     8a2:	61 f0       	breq	.+24     	; 0x8bc <prvUnlockQueue+0x54>
     8a4:	c8 01       	movw	r24, r16
     8a6:	0e 94 4f 0a 	call	0x149e	; 0x149e <xTaskRemoveFromEventList>
     8aa:	81 11       	cpse	r24, r1
     8ac:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <vTaskMissedYield>
     8b0:	8e 8d       	ldd	r24, Y+30	; 0x1e
     8b2:	81 50       	subi	r24, 0x01	; 1
     8b4:	8e 8f       	std	Y+30, r24	; 0x1e
     8b6:	8e 8d       	ldd	r24, Y+30	; 0x1e
     8b8:	18 16       	cp	r1, r24
     8ba:	24 f3       	brlt	.-56     	; 0x884 <prvUnlockQueue+0x1c>
     8bc:	8f ef       	ldi	r24, 0xFF	; 255
     8be:	8e 8f       	std	Y+30, r24	; 0x1e
     8c0:	0f 90       	pop	r0
     8c2:	0f be       	out	0x3f, r0	; 63
     8c4:	0f b6       	in	r0, 0x3f	; 63
     8c6:	f8 94       	cli
     8c8:	0f 92       	push	r0
     8ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
     8cc:	18 16       	cp	r1, r24
     8ce:	bc f4       	brge	.+46     	; 0x8fe <prvUnlockQueue+0x96>
     8d0:	88 85       	ldd	r24, Y+8	; 0x08
     8d2:	81 11       	cpse	r24, r1
     8d4:	05 c0       	rjmp	.+10     	; 0x8e0 <prvUnlockQueue+0x78>
     8d6:	13 c0       	rjmp	.+38     	; 0x8fe <prvUnlockQueue+0x96>
     8d8:	88 85       	ldd	r24, Y+8	; 0x08
     8da:	81 11       	cpse	r24, r1
     8dc:	04 c0       	rjmp	.+8      	; 0x8e6 <prvUnlockQueue+0x7e>
     8de:	0f c0       	rjmp	.+30     	; 0x8fe <prvUnlockQueue+0x96>
     8e0:	8e 01       	movw	r16, r28
     8e2:	08 5f       	subi	r16, 0xF8	; 248
     8e4:	1f 4f       	sbci	r17, 0xFF	; 255
     8e6:	c8 01       	movw	r24, r16
     8e8:	0e 94 4f 0a 	call	0x149e	; 0x149e <xTaskRemoveFromEventList>
     8ec:	81 11       	cpse	r24, r1
     8ee:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <vTaskMissedYield>
     8f2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     8f4:	81 50       	subi	r24, 0x01	; 1
     8f6:	8d 8f       	std	Y+29, r24	; 0x1d
     8f8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     8fa:	18 16       	cp	r1, r24
     8fc:	6c f3       	brlt	.-38     	; 0x8d8 <prvUnlockQueue+0x70>
     8fe:	8f ef       	ldi	r24, 0xFF	; 255
     900:	8d 8f       	std	Y+29, r24	; 0x1d
     902:	0f 90       	pop	r0
     904:	0f be       	out	0x3f, r0	; 63
     906:	df 91       	pop	r29
     908:	cf 91       	pop	r28
     90a:	1f 91       	pop	r17
     90c:	0f 91       	pop	r16
     90e:	08 95       	ret

00000910 <xQueueGenericReset>:
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
     914:	ec 01       	movw	r28, r24
     916:	0f b6       	in	r0, 0x3f	; 63
     918:	f8 94       	cli
     91a:	0f 92       	push	r0
     91c:	48 81       	ld	r20, Y
     91e:	59 81       	ldd	r21, Y+1	; 0x01
     920:	2c 8d       	ldd	r18, Y+28	; 0x1c
     922:	30 e0       	ldi	r19, 0x00	; 0
     924:	7b 8d       	ldd	r23, Y+27	; 0x1b
     926:	72 9f       	mul	r23, r18
     928:	c0 01       	movw	r24, r0
     92a:	73 9f       	mul	r23, r19
     92c:	90 0d       	add	r25, r0
     92e:	11 24       	eor	r1, r1
     930:	fa 01       	movw	r30, r20
     932:	e8 0f       	add	r30, r24
     934:	f9 1f       	adc	r31, r25
     936:	fb 83       	std	Y+3, r31	; 0x03
     938:	ea 83       	std	Y+2, r30	; 0x02
     93a:	1a 8e       	std	Y+26, r1	; 0x1a
     93c:	5d 83       	std	Y+5, r21	; 0x05
     93e:	4c 83       	std	Y+4, r20	; 0x04
     940:	82 1b       	sub	r24, r18
     942:	93 0b       	sbc	r25, r19
     944:	84 0f       	add	r24, r20
     946:	95 1f       	adc	r25, r21
     948:	9f 83       	std	Y+7, r25	; 0x07
     94a:	8e 83       	std	Y+6, r24	; 0x06
     94c:	8f ef       	ldi	r24, 0xFF	; 255
     94e:	8d 8f       	std	Y+29, r24	; 0x1d
     950:	8e 8f       	std	Y+30, r24	; 0x1e
     952:	61 11       	cpse	r22, r1
     954:	0c c0       	rjmp	.+24     	; 0x96e <xQueueGenericReset+0x5e>
     956:	88 85       	ldd	r24, Y+8	; 0x08
     958:	88 23       	and	r24, r24
     95a:	89 f0       	breq	.+34     	; 0x97e <xQueueGenericReset+0x6e>
     95c:	ce 01       	movw	r24, r28
     95e:	08 96       	adiw	r24, 0x08	; 8
     960:	0e 94 4f 0a 	call	0x149e	; 0x149e <xTaskRemoveFromEventList>
     964:	81 30       	cpi	r24, 0x01	; 1
     966:	59 f4       	brne	.+22     	; 0x97e <xQueueGenericReset+0x6e>
     968:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
     96c:	08 c0       	rjmp	.+16     	; 0x97e <xQueueGenericReset+0x6e>
     96e:	ce 01       	movw	r24, r28
     970:	08 96       	adiw	r24, 0x08	; 8
     972:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     976:	ce 01       	movw	r24, r28
     978:	41 96       	adiw	r24, 0x11	; 17
     97a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     97e:	0f 90       	pop	r0
     980:	0f be       	out	0x3f, r0	; 63
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	df 91       	pop	r29
     986:	cf 91       	pop	r28
     988:	08 95       	ret

0000098a <xQueueGenericCreate>:
     98a:	0f 93       	push	r16
     98c:	1f 93       	push	r17
     98e:	cf 93       	push	r28
     990:	df 93       	push	r29
     992:	08 2f       	mov	r16, r24
     994:	16 2f       	mov	r17, r22
     996:	66 23       	and	r22, r22
     998:	c9 f0       	breq	.+50     	; 0x9cc <xQueueGenericCreate+0x42>
     99a:	86 9f       	mul	r24, r22
     99c:	c0 01       	movw	r24, r0
     99e:	11 24       	eor	r1, r1
     9a0:	82 96       	adiw	r24, 0x22	; 34
     9a2:	0e 94 c9 02 	call	0x592	; 0x592 <pvPortMalloc>
     9a6:	ec 01       	movw	r28, r24
     9a8:	00 97       	sbiw	r24, 0x00	; 0
     9aa:	21 f4       	brne	.+8      	; 0x9b4 <xQueueGenericCreate+0x2a>
     9ac:	16 c0       	rjmp	.+44     	; 0x9da <xQueueGenericCreate+0x50>
     9ae:	d9 83       	std	Y+1, r29	; 0x01
     9b0:	c8 83       	st	Y, r28
     9b2:	03 c0       	rjmp	.+6      	; 0x9ba <xQueueGenericCreate+0x30>
     9b4:	81 96       	adiw	r24, 0x21	; 33
     9b6:	99 83       	std	Y+1, r25	; 0x01
     9b8:	88 83       	st	Y, r24
     9ba:	0b 8f       	std	Y+27, r16	; 0x1b
     9bc:	1c 8f       	std	Y+28, r17	; 0x1c
     9be:	61 e0       	ldi	r22, 0x01	; 1
     9c0:	ce 01       	movw	r24, r28
     9c2:	0e 94 88 04 	call	0x910	; 0x910 <xQueueGenericReset>
     9c6:	18 a2       	std	Y+32, r1	; 0x20
     9c8:	1f 8e       	std	Y+31, r1	; 0x1f
     9ca:	07 c0       	rjmp	.+14     	; 0x9da <xQueueGenericCreate+0x50>
     9cc:	81 e2       	ldi	r24, 0x21	; 33
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	0e 94 c9 02 	call	0x592	; 0x592 <pvPortMalloc>
     9d4:	ec 01       	movw	r28, r24
     9d6:	89 2b       	or	r24, r25
     9d8:	51 f7       	brne	.-44     	; 0x9ae <xQueueGenericCreate+0x24>
     9da:	ce 01       	movw	r24, r28
     9dc:	df 91       	pop	r29
     9de:	cf 91       	pop	r28
     9e0:	1f 91       	pop	r17
     9e2:	0f 91       	pop	r16
     9e4:	08 95       	ret

000009e6 <xQueueGenericSend>:
     9e6:	9f 92       	push	r9
     9e8:	af 92       	push	r10
     9ea:	bf 92       	push	r11
     9ec:	cf 92       	push	r12
     9ee:	df 92       	push	r13
     9f0:	ef 92       	push	r14
     9f2:	ff 92       	push	r15
     9f4:	0f 93       	push	r16
     9f6:	1f 93       	push	r17
     9f8:	cf 93       	push	r28
     9fa:	df 93       	push	r29
     9fc:	00 d0       	rcall	.+0      	; 0x9fe <xQueueGenericSend+0x18>
     9fe:	00 d0       	rcall	.+0      	; 0xa00 <xQueueGenericSend+0x1a>
     a00:	1f 92       	push	r1
     a02:	cd b7       	in	r28, 0x3d	; 61
     a04:	de b7       	in	r29, 0x3e	; 62
     a06:	8c 01       	movw	r16, r24
     a08:	6b 01       	movw	r12, r22
     a0a:	5d 83       	std	Y+5, r21	; 0x05
     a0c:	4c 83       	std	Y+4, r20	; 0x04
     a0e:	a2 2e       	mov	r10, r18
     a10:	b1 2c       	mov	r11, r1
     a12:	99 24       	eor	r9, r9
     a14:	93 94       	inc	r9
     a16:	7c 01       	movw	r14, r24
     a18:	88 e0       	ldi	r24, 0x08	; 8
     a1a:	e8 0e       	add	r14, r24
     a1c:	f1 1c       	adc	r15, r1
     a1e:	0f b6       	in	r0, 0x3f	; 63
     a20:	f8 94       	cli
     a22:	0f 92       	push	r0
     a24:	f8 01       	movw	r30, r16
     a26:	92 8d       	ldd	r25, Z+26	; 0x1a
     a28:	83 8d       	ldd	r24, Z+27	; 0x1b
     a2a:	98 17       	cp	r25, r24
     a2c:	18 f0       	brcs	.+6      	; 0xa34 <xQueueGenericSend+0x4e>
     a2e:	f2 e0       	ldi	r31, 0x02	; 2
     a30:	af 12       	cpse	r10, r31
     a32:	27 c0       	rjmp	.+78     	; 0xa82 <xQueueGenericSend+0x9c>
     a34:	4a 2d       	mov	r20, r10
     a36:	b6 01       	movw	r22, r12
     a38:	c8 01       	movw	r24, r16
     a3a:	0e 94 96 03 	call	0x72c	; 0x72c <prvCopyDataToQueue>
     a3e:	f8 01       	movw	r30, r16
     a40:	27 8d       	ldd	r18, Z+31	; 0x1f
     a42:	30 a1       	ldd	r19, Z+32	; 0x20
     a44:	23 2b       	or	r18, r19
     a46:	49 f0       	breq	.+18     	; 0xa5a <xQueueGenericSend+0x74>
     a48:	6a 2d       	mov	r22, r10
     a4a:	c8 01       	movw	r24, r16
     a4c:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <prvNotifyQueueSetContainer>
     a50:	81 30       	cpi	r24, 0x01	; 1
     a52:	99 f4       	brne	.+38     	; 0xa7a <xQueueGenericSend+0x94>
     a54:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
     a58:	10 c0       	rjmp	.+32     	; 0xa7a <xQueueGenericSend+0x94>
     a5a:	f8 01       	movw	r30, r16
     a5c:	91 89       	ldd	r25, Z+17	; 0x11
     a5e:	99 23       	and	r25, r25
     a60:	49 f0       	breq	.+18     	; 0xa74 <xQueueGenericSend+0x8e>
     a62:	c8 01       	movw	r24, r16
     a64:	41 96       	adiw	r24, 0x11	; 17
     a66:	0e 94 4f 0a 	call	0x149e	; 0x149e <xTaskRemoveFromEventList>
     a6a:	81 30       	cpi	r24, 0x01	; 1
     a6c:	31 f4       	brne	.+12     	; 0xa7a <xQueueGenericSend+0x94>
     a6e:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
     a72:	03 c0       	rjmp	.+6      	; 0xa7a <xQueueGenericSend+0x94>
     a74:	81 11       	cpse	r24, r1
     a76:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
     a7a:	0f 90       	pop	r0
     a7c:	0f be       	out	0x3f, r0	; 63
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	50 c0       	rjmp	.+160    	; 0xb22 <xQueueGenericSend+0x13c>
     a82:	8c 81       	ldd	r24, Y+4	; 0x04
     a84:	9d 81       	ldd	r25, Y+5	; 0x05
     a86:	89 2b       	or	r24, r25
     a88:	21 f4       	brne	.+8      	; 0xa92 <xQueueGenericSend+0xac>
     a8a:	0f 90       	pop	r0
     a8c:	0f be       	out	0x3f, r0	; 63
     a8e:	80 e0       	ldi	r24, 0x00	; 0
     a90:	48 c0       	rjmp	.+144    	; 0xb22 <xQueueGenericSend+0x13c>
     a92:	b1 10       	cpse	r11, r1
     a94:	05 c0       	rjmp	.+10     	; 0xaa0 <xQueueGenericSend+0xba>
     a96:	ce 01       	movw	r24, r28
     a98:	01 96       	adiw	r24, 0x01	; 1
     a9a:	0e 94 97 0a 	call	0x152e	; 0x152e <vTaskSetTimeOutState>
     a9e:	b9 2c       	mov	r11, r9
     aa0:	0f 90       	pop	r0
     aa2:	0f be       	out	0x3f, r0	; 63
     aa4:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <vTaskSuspendAll>
     aa8:	0f b6       	in	r0, 0x3f	; 63
     aaa:	f8 94       	cli
     aac:	0f 92       	push	r0
     aae:	f8 01       	movw	r30, r16
     ab0:	85 8d       	ldd	r24, Z+29	; 0x1d
     ab2:	8f 3f       	cpi	r24, 0xFF	; 255
     ab4:	09 f4       	brne	.+2      	; 0xab8 <xQueueGenericSend+0xd2>
     ab6:	15 8e       	std	Z+29, r1	; 0x1d
     ab8:	f8 01       	movw	r30, r16
     aba:	86 8d       	ldd	r24, Z+30	; 0x1e
     abc:	8f 3f       	cpi	r24, 0xFF	; 255
     abe:	09 f4       	brne	.+2      	; 0xac2 <xQueueGenericSend+0xdc>
     ac0:	16 8e       	std	Z+30, r1	; 0x1e
     ac2:	0f 90       	pop	r0
     ac4:	0f be       	out	0x3f, r0	; 63
     ac6:	be 01       	movw	r22, r28
     ac8:	6c 5f       	subi	r22, 0xFC	; 252
     aca:	7f 4f       	sbci	r23, 0xFF	; 255
     acc:	ce 01       	movw	r24, r28
     ace:	01 96       	adiw	r24, 0x01	; 1
     ad0:	0e 94 a2 0a 	call	0x1544	; 0x1544 <xTaskCheckForTimeOut>
     ad4:	81 11       	cpse	r24, r1
     ad6:	1f c0       	rjmp	.+62     	; 0xb16 <xQueueGenericSend+0x130>
     ad8:	0f b6       	in	r0, 0x3f	; 63
     ada:	f8 94       	cli
     adc:	0f 92       	push	r0
     ade:	f8 01       	movw	r30, r16
     ae0:	92 8d       	ldd	r25, Z+26	; 0x1a
     ae2:	0f 90       	pop	r0
     ae4:	0f be       	out	0x3f, r0	; 63
     ae6:	83 8d       	ldd	r24, Z+27	; 0x1b
     ae8:	98 13       	cpse	r25, r24
     aea:	0f c0       	rjmp	.+30     	; 0xb0a <xQueueGenericSend+0x124>
     aec:	6c 81       	ldd	r22, Y+4	; 0x04
     aee:	7d 81       	ldd	r23, Y+5	; 0x05
     af0:	c7 01       	movw	r24, r14
     af2:	0e 94 23 0a 	call	0x1446	; 0x1446 <vTaskPlaceOnEventList>
     af6:	c8 01       	movw	r24, r16
     af8:	0e 94 34 04 	call	0x868	; 0x868 <prvUnlockQueue>
     afc:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
     b00:	81 11       	cpse	r24, r1
     b02:	8d cf       	rjmp	.-230    	; 0xa1e <xQueueGenericSend+0x38>
     b04:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
     b08:	8a cf       	rjmp	.-236    	; 0xa1e <xQueueGenericSend+0x38>
     b0a:	c8 01       	movw	r24, r16
     b0c:	0e 94 34 04 	call	0x868	; 0x868 <prvUnlockQueue>
     b10:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
     b14:	84 cf       	rjmp	.-248    	; 0xa1e <xQueueGenericSend+0x38>
     b16:	c8 01       	movw	r24, r16
     b18:	0e 94 34 04 	call	0x868	; 0x868 <prvUnlockQueue>
     b1c:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	0f 90       	pop	r0
     b24:	0f 90       	pop	r0
     b26:	0f 90       	pop	r0
     b28:	0f 90       	pop	r0
     b2a:	0f 90       	pop	r0
     b2c:	df 91       	pop	r29
     b2e:	cf 91       	pop	r28
     b30:	1f 91       	pop	r17
     b32:	0f 91       	pop	r16
     b34:	ff 90       	pop	r15
     b36:	ef 90       	pop	r14
     b38:	df 90       	pop	r13
     b3a:	cf 90       	pop	r12
     b3c:	bf 90       	pop	r11
     b3e:	af 90       	pop	r10
     b40:	9f 90       	pop	r9
     b42:	08 95       	ret

00000b44 <xQueueGenericReceive>:
     b44:	9f 92       	push	r9
     b46:	af 92       	push	r10
     b48:	bf 92       	push	r11
     b4a:	cf 92       	push	r12
     b4c:	df 92       	push	r13
     b4e:	ef 92       	push	r14
     b50:	ff 92       	push	r15
     b52:	0f 93       	push	r16
     b54:	1f 93       	push	r17
     b56:	cf 93       	push	r28
     b58:	df 93       	push	r29
     b5a:	00 d0       	rcall	.+0      	; 0xb5c <xQueueGenericReceive+0x18>
     b5c:	00 d0       	rcall	.+0      	; 0xb5e <xQueueGenericReceive+0x1a>
     b5e:	1f 92       	push	r1
     b60:	cd b7       	in	r28, 0x3d	; 61
     b62:	de b7       	in	r29, 0x3e	; 62
     b64:	8c 01       	movw	r16, r24
     b66:	6b 01       	movw	r12, r22
     b68:	5d 83       	std	Y+5, r21	; 0x05
     b6a:	4c 83       	std	Y+4, r20	; 0x04
     b6c:	92 2e       	mov	r9, r18
     b6e:	b1 2c       	mov	r11, r1
     b70:	aa 24       	eor	r10, r10
     b72:	a3 94       	inc	r10
     b74:	7c 01       	movw	r14, r24
     b76:	81 e1       	ldi	r24, 0x11	; 17
     b78:	e8 0e       	add	r14, r24
     b7a:	f1 1c       	adc	r15, r1
     b7c:	0f b6       	in	r0, 0x3f	; 63
     b7e:	f8 94       	cli
     b80:	0f 92       	push	r0
     b82:	f8 01       	movw	r30, r16
     b84:	82 8d       	ldd	r24, Z+26	; 0x1a
     b86:	88 23       	and	r24, r24
     b88:	49 f1       	breq	.+82     	; 0xbdc <xQueueGenericReceive+0x98>
     b8a:	e6 80       	ldd	r14, Z+6	; 0x06
     b8c:	f7 80       	ldd	r15, Z+7	; 0x07
     b8e:	b6 01       	movw	r22, r12
     b90:	c8 01       	movw	r24, r16
     b92:	0e 94 1a 04 	call	0x834	; 0x834 <prvCopyDataFromQueue>
     b96:	91 10       	cpse	r9, r1
     b98:	10 c0       	rjmp	.+32     	; 0xbba <xQueueGenericReceive+0x76>
     b9a:	f8 01       	movw	r30, r16
     b9c:	82 8d       	ldd	r24, Z+26	; 0x1a
     b9e:	81 50       	subi	r24, 0x01	; 1
     ba0:	82 8f       	std	Z+26, r24	; 0x1a
     ba2:	80 85       	ldd	r24, Z+8	; 0x08
     ba4:	88 23       	and	r24, r24
     ba6:	b1 f0       	breq	.+44     	; 0xbd4 <xQueueGenericReceive+0x90>
     ba8:	c8 01       	movw	r24, r16
     baa:	08 96       	adiw	r24, 0x08	; 8
     bac:	0e 94 4f 0a 	call	0x149e	; 0x149e <xTaskRemoveFromEventList>
     bb0:	81 30       	cpi	r24, 0x01	; 1
     bb2:	81 f4       	brne	.+32     	; 0xbd4 <xQueueGenericReceive+0x90>
     bb4:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
     bb8:	0d c0       	rjmp	.+26     	; 0xbd4 <xQueueGenericReceive+0x90>
     bba:	f8 01       	movw	r30, r16
     bbc:	f7 82       	std	Z+7, r15	; 0x07
     bbe:	e6 82       	std	Z+6, r14	; 0x06
     bc0:	81 89       	ldd	r24, Z+17	; 0x11
     bc2:	88 23       	and	r24, r24
     bc4:	39 f0       	breq	.+14     	; 0xbd4 <xQueueGenericReceive+0x90>
     bc6:	c8 01       	movw	r24, r16
     bc8:	41 96       	adiw	r24, 0x11	; 17
     bca:	0e 94 4f 0a 	call	0x149e	; 0x149e <xTaskRemoveFromEventList>
     bce:	81 11       	cpse	r24, r1
     bd0:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
     bd4:	0f 90       	pop	r0
     bd6:	0f be       	out	0x3f, r0	; 63
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	4f c0       	rjmp	.+158    	; 0xc7a <xQueueGenericReceive+0x136>
     bdc:	8c 81       	ldd	r24, Y+4	; 0x04
     bde:	9d 81       	ldd	r25, Y+5	; 0x05
     be0:	89 2b       	or	r24, r25
     be2:	21 f4       	brne	.+8      	; 0xbec <xQueueGenericReceive+0xa8>
     be4:	0f 90       	pop	r0
     be6:	0f be       	out	0x3f, r0	; 63
     be8:	80 e0       	ldi	r24, 0x00	; 0
     bea:	47 c0       	rjmp	.+142    	; 0xc7a <xQueueGenericReceive+0x136>
     bec:	b1 10       	cpse	r11, r1
     bee:	05 c0       	rjmp	.+10     	; 0xbfa <xQueueGenericReceive+0xb6>
     bf0:	ce 01       	movw	r24, r28
     bf2:	01 96       	adiw	r24, 0x01	; 1
     bf4:	0e 94 97 0a 	call	0x152e	; 0x152e <vTaskSetTimeOutState>
     bf8:	ba 2c       	mov	r11, r10
     bfa:	0f 90       	pop	r0
     bfc:	0f be       	out	0x3f, r0	; 63
     bfe:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <vTaskSuspendAll>
     c02:	0f b6       	in	r0, 0x3f	; 63
     c04:	f8 94       	cli
     c06:	0f 92       	push	r0
     c08:	f8 01       	movw	r30, r16
     c0a:	85 8d       	ldd	r24, Z+29	; 0x1d
     c0c:	8f 3f       	cpi	r24, 0xFF	; 255
     c0e:	09 f4       	brne	.+2      	; 0xc12 <xQueueGenericReceive+0xce>
     c10:	15 8e       	std	Z+29, r1	; 0x1d
     c12:	f8 01       	movw	r30, r16
     c14:	86 8d       	ldd	r24, Z+30	; 0x1e
     c16:	8f 3f       	cpi	r24, 0xFF	; 255
     c18:	09 f4       	brne	.+2      	; 0xc1c <xQueueGenericReceive+0xd8>
     c1a:	16 8e       	std	Z+30, r1	; 0x1e
     c1c:	0f 90       	pop	r0
     c1e:	0f be       	out	0x3f, r0	; 63
     c20:	be 01       	movw	r22, r28
     c22:	6c 5f       	subi	r22, 0xFC	; 252
     c24:	7f 4f       	sbci	r23, 0xFF	; 255
     c26:	ce 01       	movw	r24, r28
     c28:	01 96       	adiw	r24, 0x01	; 1
     c2a:	0e 94 a2 0a 	call	0x1544	; 0x1544 <xTaskCheckForTimeOut>
     c2e:	81 11       	cpse	r24, r1
     c30:	1e c0       	rjmp	.+60     	; 0xc6e <xQueueGenericReceive+0x12a>
     c32:	0f b6       	in	r0, 0x3f	; 63
     c34:	f8 94       	cli
     c36:	0f 92       	push	r0
     c38:	f8 01       	movw	r30, r16
     c3a:	82 8d       	ldd	r24, Z+26	; 0x1a
     c3c:	0f 90       	pop	r0
     c3e:	0f be       	out	0x3f, r0	; 63
     c40:	81 11       	cpse	r24, r1
     c42:	0f c0       	rjmp	.+30     	; 0xc62 <xQueueGenericReceive+0x11e>
     c44:	6c 81       	ldd	r22, Y+4	; 0x04
     c46:	7d 81       	ldd	r23, Y+5	; 0x05
     c48:	c7 01       	movw	r24, r14
     c4a:	0e 94 23 0a 	call	0x1446	; 0x1446 <vTaskPlaceOnEventList>
     c4e:	c8 01       	movw	r24, r16
     c50:	0e 94 34 04 	call	0x868	; 0x868 <prvUnlockQueue>
     c54:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
     c58:	81 11       	cpse	r24, r1
     c5a:	90 cf       	rjmp	.-224    	; 0xb7c <xQueueGenericReceive+0x38>
     c5c:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
     c60:	8d cf       	rjmp	.-230    	; 0xb7c <xQueueGenericReceive+0x38>
     c62:	c8 01       	movw	r24, r16
     c64:	0e 94 34 04 	call	0x868	; 0x868 <prvUnlockQueue>
     c68:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
     c6c:	87 cf       	rjmp	.-242    	; 0xb7c <xQueueGenericReceive+0x38>
     c6e:	c8 01       	movw	r24, r16
     c70:	0e 94 34 04 	call	0x868	; 0x868 <prvUnlockQueue>
     c74:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
     c78:	80 e0       	ldi	r24, 0x00	; 0
     c7a:	0f 90       	pop	r0
     c7c:	0f 90       	pop	r0
     c7e:	0f 90       	pop	r0
     c80:	0f 90       	pop	r0
     c82:	0f 90       	pop	r0
     c84:	df 91       	pop	r29
     c86:	cf 91       	pop	r28
     c88:	1f 91       	pop	r17
     c8a:	0f 91       	pop	r16
     c8c:	ff 90       	pop	r15
     c8e:	ef 90       	pop	r14
     c90:	df 90       	pop	r13
     c92:	cf 90       	pop	r12
     c94:	bf 90       	pop	r11
     c96:	af 90       	pop	r10
     c98:	9f 90       	pop	r9
     c9a:	08 95       	ret

00000c9c <uxQueueMessagesWaiting>:
     c9c:	0f b6       	in	r0, 0x3f	; 63
     c9e:	f8 94       	cli
     ca0:	0f 92       	push	r0
     ca2:	fc 01       	movw	r30, r24
     ca4:	82 8d       	ldd	r24, Z+26	; 0x1a
     ca6:	0f 90       	pop	r0
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	08 95       	ret

00000cac <prvResetNextTaskUnblockTime>:
     cac:	e0 91 c5 07 	lds	r30, 0x07C5	; 0x8007c5 <pxDelayedTaskList>
     cb0:	f0 91 c6 07 	lds	r31, 0x07C6	; 0x8007c6 <pxDelayedTaskList+0x1>
     cb4:	80 81       	ld	r24, Z
     cb6:	81 11       	cpse	r24, r1
     cb8:	07 c0       	rjmp	.+14     	; 0xcc8 <prvResetNextTaskUnblockTime+0x1c>
     cba:	8f ef       	ldi	r24, 0xFF	; 255
     cbc:	9f ef       	ldi	r25, 0xFF	; 255
     cbe:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     cc2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     cc6:	08 95       	ret
     cc8:	e0 91 c5 07 	lds	r30, 0x07C5	; 0x8007c5 <pxDelayedTaskList>
     ccc:	f0 91 c6 07 	lds	r31, 0x07C6	; 0x8007c6 <pxDelayedTaskList+0x1>
     cd0:	05 80       	ldd	r0, Z+5	; 0x05
     cd2:	f6 81       	ldd	r31, Z+6	; 0x06
     cd4:	e0 2d       	mov	r30, r0
     cd6:	06 80       	ldd	r0, Z+6	; 0x06
     cd8:	f7 81       	ldd	r31, Z+7	; 0x07
     cda:	e0 2d       	mov	r30, r0
     cdc:	82 81       	ldd	r24, Z+2	; 0x02
     cde:	93 81       	ldd	r25, Z+3	; 0x03
     ce0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     ce4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     ce8:	08 95       	ret

00000cea <prvAddCurrentTaskToDelayedList>:
     cea:	cf 93       	push	r28
     cec:	df 93       	push	r29
     cee:	ec 01       	movw	r28, r24
     cf0:	e0 91 fd 07 	lds	r30, 0x07FD	; 0x8007fd <pxCurrentTCB>
     cf4:	f0 91 fe 07 	lds	r31, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     cf8:	93 83       	std	Z+3, r25	; 0x03
     cfa:	82 83       	std	Z+2, r24	; 0x02
     cfc:	80 91 a4 07 	lds	r24, 0x07A4	; 0x8007a4 <xTickCount>
     d00:	90 91 a5 07 	lds	r25, 0x07A5	; 0x8007a5 <xTickCount+0x1>
     d04:	c8 17       	cp	r28, r24
     d06:	d9 07       	cpc	r29, r25
     d08:	68 f4       	brcc	.+26     	; 0xd24 <prvAddCurrentTaskToDelayedList+0x3a>
     d0a:	60 91 fd 07 	lds	r22, 0x07FD	; 0x8007fd <pxCurrentTCB>
     d0e:	70 91 fe 07 	lds	r23, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     d12:	80 91 c3 07 	lds	r24, 0x07C3	; 0x8007c3 <pxOverflowDelayedTaskList>
     d16:	90 91 c4 07 	lds	r25, 0x07C4	; 0x8007c4 <pxOverflowDelayedTaskList+0x1>
     d1a:	6e 5f       	subi	r22, 0xFE	; 254
     d1c:	7f 4f       	sbci	r23, 0xFF	; 255
     d1e:	0e 94 0a 01 	call	0x214	; 0x214 <vListInsert>
     d22:	17 c0       	rjmp	.+46     	; 0xd52 <prvAddCurrentTaskToDelayedList+0x68>
     d24:	60 91 fd 07 	lds	r22, 0x07FD	; 0x8007fd <pxCurrentTCB>
     d28:	70 91 fe 07 	lds	r23, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     d2c:	80 91 c5 07 	lds	r24, 0x07C5	; 0x8007c5 <pxDelayedTaskList>
     d30:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <pxDelayedTaskList+0x1>
     d34:	6e 5f       	subi	r22, 0xFE	; 254
     d36:	7f 4f       	sbci	r23, 0xFF	; 255
     d38:	0e 94 0a 01 	call	0x214	; 0x214 <vListInsert>
     d3c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
     d40:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
     d44:	c8 17       	cp	r28, r24
     d46:	d9 07       	cpc	r29, r25
     d48:	20 f4       	brcc	.+8      	; 0xd52 <prvAddCurrentTaskToDelayedList+0x68>
     d4a:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <xNextTaskUnblockTime+0x1>
     d4e:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <xNextTaskUnblockTime>
     d52:	df 91       	pop	r29
     d54:	cf 91       	pop	r28
     d56:	08 95       	ret

00000d58 <xTaskGenericCreate>:
     d58:	4f 92       	push	r4
     d5a:	5f 92       	push	r5
     d5c:	6f 92       	push	r6
     d5e:	7f 92       	push	r7
     d60:	8f 92       	push	r8
     d62:	9f 92       	push	r9
     d64:	af 92       	push	r10
     d66:	bf 92       	push	r11
     d68:	cf 92       	push	r12
     d6a:	df 92       	push	r13
     d6c:	ef 92       	push	r14
     d6e:	ff 92       	push	r15
     d70:	0f 93       	push	r16
     d72:	1f 93       	push	r17
     d74:	cf 93       	push	r28
     d76:	df 93       	push	r29
     d78:	4c 01       	movw	r8, r24
     d7a:	eb 01       	movw	r28, r22
     d7c:	5a 01       	movw	r10, r20
     d7e:	29 01       	movw	r4, r18
     d80:	c1 14       	cp	r12, r1
     d82:	d1 04       	cpc	r13, r1
     d84:	39 f4       	brne	.+14     	; 0xd94 <xTaskGenericCreate+0x3c>
     d86:	ca 01       	movw	r24, r20
     d88:	0e 94 c9 02 	call	0x592	; 0x592 <pvPortMalloc>
     d8c:	6c 01       	movw	r12, r24
     d8e:	89 2b       	or	r24, r25
     d90:	09 f4       	brne	.+2      	; 0xd94 <xTaskGenericCreate+0x3c>
     d92:	e1 c0       	rjmp	.+450    	; 0xf56 <xTaskGenericCreate+0x1fe>
     d94:	86 e2       	ldi	r24, 0x26	; 38
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	0e 94 c9 02 	call	0x592	; 0x592 <pvPortMalloc>
     d9c:	3c 01       	movw	r6, r24
     d9e:	00 97       	sbiw	r24, 0x00	; 0
     da0:	79 f0       	breq	.+30     	; 0xdc0 <xTaskGenericCreate+0x68>
     da2:	fc 01       	movw	r30, r24
     da4:	d0 8e       	std	Z+24, r13	; 0x18
     da6:	c7 8a       	std	Z+23, r12	; 0x17
     da8:	f1 e0       	ldi	r31, 0x01	; 1
     daa:	af 1a       	sub	r10, r31
     dac:	b1 08       	sbc	r11, r1
     dae:	ca 0c       	add	r12, r10
     db0:	db 1c       	adc	r13, r11
     db2:	88 81       	ld	r24, Y
     db4:	f3 01       	movw	r30, r6
     db6:	81 8f       	std	Z+25, r24	; 0x19
     db8:	88 81       	ld	r24, Y
     dba:	81 11       	cpse	r24, r1
     dbc:	05 c0       	rjmp	.+10     	; 0xdc8 <xTaskGenericCreate+0x70>
     dbe:	14 c0       	rjmp	.+40     	; 0xde8 <xTaskGenericCreate+0x90>
     dc0:	c6 01       	movw	r24, r12
     dc2:	0e 94 63 03 	call	0x6c6	; 0x6c6 <vPortFree>
     dc6:	c7 c0       	rjmp	.+398    	; 0xf56 <xTaskGenericCreate+0x1fe>
     dc8:	d3 01       	movw	r26, r6
     dca:	5a 96       	adiw	r26, 0x1a	; 26
     dcc:	fe 01       	movw	r30, r28
     dce:	31 96       	adiw	r30, 0x01	; 1
     dd0:	9e 01       	movw	r18, r28
     dd2:	28 5f       	subi	r18, 0xF8	; 248
     dd4:	3f 4f       	sbci	r19, 0xFF	; 255
     dd6:	ef 01       	movw	r28, r30
     dd8:	81 91       	ld	r24, Z+
     dda:	8d 93       	st	X+, r24
     ddc:	88 81       	ld	r24, Y
     dde:	88 23       	and	r24, r24
     de0:	19 f0       	breq	.+6      	; 0xde8 <xTaskGenericCreate+0x90>
     de2:	e2 17       	cp	r30, r18
     de4:	f3 07       	cpc	r31, r19
     de6:	b9 f7       	brne	.-18     	; 0xdd6 <xTaskGenericCreate+0x7e>
     de8:	f3 01       	movw	r30, r6
     dea:	10 a2       	std	Z+32, r1	; 0x20
     dec:	10 2f       	mov	r17, r16
     dee:	04 30       	cpi	r16, 0x04	; 4
     df0:	08 f0       	brcs	.+2      	; 0xdf4 <xTaskGenericCreate+0x9c>
     df2:	13 e0       	ldi	r17, 0x03	; 3
     df4:	f3 01       	movw	r30, r6
     df6:	16 8b       	std	Z+22, r17	; 0x16
     df8:	e3 01       	movw	r28, r6
     dfa:	22 96       	adiw	r28, 0x02	; 2
     dfc:	ce 01       	movw	r24, r28
     dfe:	0e 94 e5 00 	call	0x1ca	; 0x1ca <vListInitialiseItem>
     e02:	c3 01       	movw	r24, r6
     e04:	0c 96       	adiw	r24, 0x0c	; 12
     e06:	0e 94 e5 00 	call	0x1ca	; 0x1ca <vListInitialiseItem>
     e0a:	f3 01       	movw	r30, r6
     e0c:	71 86       	std	Z+9, r7	; 0x09
     e0e:	60 86       	std	Z+8, r6	; 0x08
     e10:	84 e0       	ldi	r24, 0x04	; 4
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	81 1b       	sub	r24, r17
     e16:	91 09       	sbc	r25, r1
     e18:	95 87       	std	Z+13, r25	; 0x0d
     e1a:	84 87       	std	Z+12, r24	; 0x0c
     e1c:	73 8a       	std	Z+19, r7	; 0x13
     e1e:	62 8a       	std	Z+18, r6	; 0x12
     e20:	11 a2       	std	Z+33, r1	; 0x21
     e22:	12 a2       	std	Z+34, r1	; 0x22
     e24:	13 a2       	std	Z+35, r1	; 0x23
     e26:	14 a2       	std	Z+36, r1	; 0x24
     e28:	15 a2       	std	Z+37, r1	; 0x25
     e2a:	a2 01       	movw	r20, r4
     e2c:	b4 01       	movw	r22, r8
     e2e:	c6 01       	movw	r24, r12
     e30:	0e 94 61 01 	call	0x2c2	; 0x2c2 <pxPortInitialiseStack>
     e34:	f3 01       	movw	r30, r6
     e36:	91 83       	std	Z+1, r25	; 0x01
     e38:	80 83       	st	Z, r24
     e3a:	e1 14       	cp	r14, r1
     e3c:	f1 04       	cpc	r15, r1
     e3e:	19 f0       	breq	.+6      	; 0xe46 <xTaskGenericCreate+0xee>
     e40:	f7 01       	movw	r30, r14
     e42:	71 82       	std	Z+1, r7	; 0x01
     e44:	60 82       	st	Z, r6
     e46:	0f b6       	in	r0, 0x3f	; 63
     e48:	f8 94       	cli
     e4a:	0f 92       	push	r0
     e4c:	80 91 a6 07 	lds	r24, 0x07A6	; 0x8007a6 <uxCurrentNumberOfTasks>
     e50:	8f 5f       	subi	r24, 0xFF	; 255
     e52:	80 93 a6 07 	sts	0x07A6, r24	; 0x8007a6 <uxCurrentNumberOfTasks>
     e56:	80 91 fd 07 	lds	r24, 0x07FD	; 0x8007fd <pxCurrentTCB>
     e5a:	90 91 fe 07 	lds	r25, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     e5e:	89 2b       	or	r24, r25
     e60:	d1 f5       	brne	.+116    	; 0xed6 <xTaskGenericCreate+0x17e>
     e62:	70 92 fe 07 	sts	0x07FE, r7	; 0x8007fe <pxCurrentTCB+0x1>
     e66:	60 92 fd 07 	sts	0x07FD, r6	; 0x8007fd <pxCurrentTCB>
     e6a:	80 91 a6 07 	lds	r24, 0x07A6	; 0x8007a6 <uxCurrentNumberOfTasks>
     e6e:	81 30       	cpi	r24, 0x01	; 1
     e70:	09 f0       	breq	.+2      	; 0xe74 <xTaskGenericCreate+0x11c>
     e72:	40 c0       	rjmp	.+128    	; 0xef4 <xTaskGenericCreate+0x19c>
     e74:	89 ed       	ldi	r24, 0xD9	; 217
     e76:	97 e0       	ldi	r25, 0x07	; 7
     e78:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     e7c:	82 ee       	ldi	r24, 0xE2	; 226
     e7e:	97 e0       	ldi	r25, 0x07	; 7
     e80:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     e84:	8b ee       	ldi	r24, 0xEB	; 235
     e86:	97 e0       	ldi	r25, 0x07	; 7
     e88:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     e8c:	84 ef       	ldi	r24, 0xF4	; 244
     e8e:	97 e0       	ldi	r25, 0x07	; 7
     e90:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     e94:	80 ed       	ldi	r24, 0xD0	; 208
     e96:	97 e0       	ldi	r25, 0x07	; 7
     e98:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     e9c:	87 ec       	ldi	r24, 0xC7	; 199
     e9e:	97 e0       	ldi	r25, 0x07	; 7
     ea0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     ea4:	8a eb       	ldi	r24, 0xBA	; 186
     ea6:	97 e0       	ldi	r25, 0x07	; 7
     ea8:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     eac:	81 eb       	ldi	r24, 0xB1	; 177
     eae:	97 e0       	ldi	r25, 0x07	; 7
     eb0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     eb4:	87 ea       	ldi	r24, 0xA7	; 167
     eb6:	97 e0       	ldi	r25, 0x07	; 7
     eb8:	0e 94 d7 00 	call	0x1ae	; 0x1ae <vListInitialise>
     ebc:	80 ed       	ldi	r24, 0xD0	; 208
     ebe:	97 e0       	ldi	r25, 0x07	; 7
     ec0:	90 93 c6 07 	sts	0x07C6, r25	; 0x8007c6 <pxDelayedTaskList+0x1>
     ec4:	80 93 c5 07 	sts	0x07C5, r24	; 0x8007c5 <pxDelayedTaskList>
     ec8:	87 ec       	ldi	r24, 0xC7	; 199
     eca:	97 e0       	ldi	r25, 0x07	; 7
     ecc:	90 93 c4 07 	sts	0x07C4, r25	; 0x8007c4 <pxOverflowDelayedTaskList+0x1>
     ed0:	80 93 c3 07 	sts	0x07C3, r24	; 0x8007c3 <pxOverflowDelayedTaskList>
     ed4:	0f c0       	rjmp	.+30     	; 0xef4 <xTaskGenericCreate+0x19c>
     ed6:	80 91 a2 07 	lds	r24, 0x07A2	; 0x8007a2 <xSchedulerRunning>
     eda:	81 11       	cpse	r24, r1
     edc:	0b c0       	rjmp	.+22     	; 0xef4 <xTaskGenericCreate+0x19c>
     ede:	e0 91 fd 07 	lds	r30, 0x07FD	; 0x8007fd <pxCurrentTCB>
     ee2:	f0 91 fe 07 	lds	r31, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     ee6:	86 89       	ldd	r24, Z+22	; 0x16
     ee8:	08 17       	cp	r16, r24
     eea:	20 f0       	brcs	.+8      	; 0xef4 <xTaskGenericCreate+0x19c>
     eec:	70 92 fe 07 	sts	0x07FE, r7	; 0x8007fe <pxCurrentTCB+0x1>
     ef0:	60 92 fd 07 	sts	0x07FD, r6	; 0x8007fd <pxCurrentTCB>
     ef4:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <uxTaskNumber>
     ef8:	8f 5f       	subi	r24, 0xFF	; 255
     efa:	80 93 9e 07 	sts	0x079E, r24	; 0x80079e <uxTaskNumber>
     efe:	f3 01       	movw	r30, r6
     f00:	86 89       	ldd	r24, Z+22	; 0x16
     f02:	90 91 a3 07 	lds	r25, 0x07A3	; 0x8007a3 <uxTopReadyPriority>
     f06:	98 17       	cp	r25, r24
     f08:	10 f4       	brcc	.+4      	; 0xf0e <xTaskGenericCreate+0x1b6>
     f0a:	80 93 a3 07 	sts	0x07A3, r24	; 0x8007a3 <uxTopReadyPriority>
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	9c 01       	movw	r18, r24
     f12:	22 0f       	add	r18, r18
     f14:	33 1f       	adc	r19, r19
     f16:	22 0f       	add	r18, r18
     f18:	33 1f       	adc	r19, r19
     f1a:	22 0f       	add	r18, r18
     f1c:	33 1f       	adc	r19, r19
     f1e:	82 0f       	add	r24, r18
     f20:	93 1f       	adc	r25, r19
     f22:	be 01       	movw	r22, r28
     f24:	87 52       	subi	r24, 0x27	; 39
     f26:	98 4f       	sbci	r25, 0xF8	; 248
     f28:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <vListInsertEnd>
     f2c:	0f 90       	pop	r0
     f2e:	0f be       	out	0x3f, r0	; 63
     f30:	80 91 a2 07 	lds	r24, 0x07A2	; 0x8007a2 <xSchedulerRunning>
     f34:	88 23       	and	r24, r24
     f36:	59 f0       	breq	.+22     	; 0xf4e <xTaskGenericCreate+0x1f6>
     f38:	e0 91 fd 07 	lds	r30, 0x07FD	; 0x8007fd <pxCurrentTCB>
     f3c:	f0 91 fe 07 	lds	r31, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
     f40:	86 89       	ldd	r24, Z+22	; 0x16
     f42:	80 17       	cp	r24, r16
     f44:	30 f4       	brcc	.+12     	; 0xf52 <xTaskGenericCreate+0x1fa>
     f46:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	05 c0       	rjmp	.+10     	; 0xf58 <xTaskGenericCreate+0x200>
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	03 c0       	rjmp	.+6      	; 0xf58 <xTaskGenericCreate+0x200>
     f52:	81 e0       	ldi	r24, 0x01	; 1
     f54:	01 c0       	rjmp	.+2      	; 0xf58 <xTaskGenericCreate+0x200>
     f56:	8f ef       	ldi	r24, 0xFF	; 255
     f58:	df 91       	pop	r29
     f5a:	cf 91       	pop	r28
     f5c:	1f 91       	pop	r17
     f5e:	0f 91       	pop	r16
     f60:	ff 90       	pop	r15
     f62:	ef 90       	pop	r14
     f64:	df 90       	pop	r13
     f66:	cf 90       	pop	r12
     f68:	bf 90       	pop	r11
     f6a:	af 90       	pop	r10
     f6c:	9f 90       	pop	r9
     f6e:	8f 90       	pop	r8
     f70:	7f 90       	pop	r7
     f72:	6f 90       	pop	r6
     f74:	5f 90       	pop	r5
     f76:	4f 90       	pop	r4
     f78:	08 95       	ret

00000f7a <vTaskStartScheduler>:
     f7a:	af 92       	push	r10
     f7c:	bf 92       	push	r11
     f7e:	cf 92       	push	r12
     f80:	df 92       	push	r13
     f82:	ef 92       	push	r14
     f84:	ff 92       	push	r15
     f86:	0f 93       	push	r16
     f88:	a1 2c       	mov	r10, r1
     f8a:	b1 2c       	mov	r11, r1
     f8c:	c1 2c       	mov	r12, r1
     f8e:	d1 2c       	mov	r13, r1
     f90:	e1 2c       	mov	r14, r1
     f92:	f1 2c       	mov	r15, r1
     f94:	00 e0       	ldi	r16, 0x00	; 0
     f96:	20 e0       	ldi	r18, 0x00	; 0
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	45 e5       	ldi	r20, 0x55	; 85
     f9c:	50 e0       	ldi	r21, 0x00	; 0
     f9e:	63 eb       	ldi	r22, 0xB3	; 179
     fa0:	71 e0       	ldi	r23, 0x01	; 1
     fa2:	89 e7       	ldi	r24, 0x79	; 121
     fa4:	99 e0       	ldi	r25, 0x09	; 9
     fa6:	0e 94 ac 06 	call	0xd58	; 0xd58 <xTaskGenericCreate>
     faa:	81 30       	cpi	r24, 0x01	; 1
     fac:	49 f4       	brne	.+18     	; 0xfc0 <vTaskStartScheduler+0x46>
     fae:	f8 94       	cli
     fb0:	80 93 a2 07 	sts	0x07A2, r24	; 0x8007a2 <xSchedulerRunning>
     fb4:	10 92 a5 07 	sts	0x07A5, r1	; 0x8007a5 <xTickCount+0x1>
     fb8:	10 92 a4 07 	sts	0x07A4, r1	; 0x8007a4 <xTickCount>
     fbc:	0e 94 cd 01 	call	0x39a	; 0x39a <xPortStartScheduler>
     fc0:	0f 91       	pop	r16
     fc2:	ff 90       	pop	r15
     fc4:	ef 90       	pop	r14
     fc6:	df 90       	pop	r13
     fc8:	cf 90       	pop	r12
     fca:	bf 90       	pop	r11
     fcc:	af 90       	pop	r10
     fce:	08 95       	ret

00000fd0 <vTaskSuspendAll>:
     fd0:	80 91 9d 07 	lds	r24, 0x079D	; 0x80079d <uxSchedulerSuspended>
     fd4:	8f 5f       	subi	r24, 0xFF	; 255
     fd6:	80 93 9d 07 	sts	0x079D, r24	; 0x80079d <uxSchedulerSuspended>
     fda:	08 95       	ret

00000fdc <xTaskGetTickCount>:
     fdc:	0f b6       	in	r0, 0x3f	; 63
     fde:	f8 94       	cli
     fe0:	0f 92       	push	r0
     fe2:	80 91 a4 07 	lds	r24, 0x07A4	; 0x8007a4 <xTickCount>
     fe6:	90 91 a5 07 	lds	r25, 0x07A5	; 0x8007a5 <xTickCount+0x1>
     fea:	0f 90       	pop	r0
     fec:	0f be       	out	0x3f, r0	; 63
     fee:	08 95       	ret

00000ff0 <xTaskIncrementTick>:
     ff0:	cf 92       	push	r12
     ff2:	df 92       	push	r13
     ff4:	ef 92       	push	r14
     ff6:	ff 92       	push	r15
     ff8:	0f 93       	push	r16
     ffa:	1f 93       	push	r17
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	80 91 9d 07 	lds	r24, 0x079D	; 0x80079d <uxSchedulerSuspended>
    1004:	81 11       	cpse	r24, r1
    1006:	9b c0       	rjmp	.+310    	; 0x113e <xTaskIncrementTick+0x14e>
    1008:	80 91 a4 07 	lds	r24, 0x07A4	; 0x8007a4 <xTickCount>
    100c:	90 91 a5 07 	lds	r25, 0x07A5	; 0x8007a5 <xTickCount+0x1>
    1010:	01 96       	adiw	r24, 0x01	; 1
    1012:	90 93 a5 07 	sts	0x07A5, r25	; 0x8007a5 <xTickCount+0x1>
    1016:	80 93 a4 07 	sts	0x07A4, r24	; 0x8007a4 <xTickCount>
    101a:	e0 90 a4 07 	lds	r14, 0x07A4	; 0x8007a4 <xTickCount>
    101e:	f0 90 a5 07 	lds	r15, 0x07A5	; 0x8007a5 <xTickCount+0x1>
    1022:	e1 14       	cp	r14, r1
    1024:	f1 04       	cpc	r15, r1
    1026:	b9 f4       	brne	.+46     	; 0x1056 <xTaskIncrementTick+0x66>
    1028:	80 91 c5 07 	lds	r24, 0x07C5	; 0x8007c5 <pxDelayedTaskList>
    102c:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <pxDelayedTaskList+0x1>
    1030:	20 91 c3 07 	lds	r18, 0x07C3	; 0x8007c3 <pxOverflowDelayedTaskList>
    1034:	30 91 c4 07 	lds	r19, 0x07C4	; 0x8007c4 <pxOverflowDelayedTaskList+0x1>
    1038:	30 93 c6 07 	sts	0x07C6, r19	; 0x8007c6 <pxDelayedTaskList+0x1>
    103c:	20 93 c5 07 	sts	0x07C5, r18	; 0x8007c5 <pxDelayedTaskList>
    1040:	90 93 c4 07 	sts	0x07C4, r25	; 0x8007c4 <pxOverflowDelayedTaskList+0x1>
    1044:	80 93 c3 07 	sts	0x07C3, r24	; 0x8007c3 <pxOverflowDelayedTaskList>
    1048:	80 91 9f 07 	lds	r24, 0x079F	; 0x80079f <xNumOfOverflows>
    104c:	8f 5f       	subi	r24, 0xFF	; 255
    104e:	80 93 9f 07 	sts	0x079F, r24	; 0x80079f <xNumOfOverflows>
    1052:	0e 94 56 06 	call	0xcac	; 0xcac <prvResetNextTaskUnblockTime>
    1056:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
    105a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
    105e:	e8 16       	cp	r14, r24
    1060:	f9 06       	cpc	r15, r25
    1062:	10 f4       	brcc	.+4      	; 0x1068 <xTaskIncrementTick+0x78>
    1064:	d1 2c       	mov	r13, r1
    1066:	53 c0       	rjmp	.+166    	; 0x110e <xTaskIncrementTick+0x11e>
    1068:	d1 2c       	mov	r13, r1
    106a:	cc 24       	eor	r12, r12
    106c:	c3 94       	inc	r12
    106e:	e0 91 c5 07 	lds	r30, 0x07C5	; 0x8007c5 <pxDelayedTaskList>
    1072:	f0 91 c6 07 	lds	r31, 0x07C6	; 0x8007c6 <pxDelayedTaskList+0x1>
    1076:	80 81       	ld	r24, Z
    1078:	81 11       	cpse	r24, r1
    107a:	07 c0       	rjmp	.+14     	; 0x108a <xTaskIncrementTick+0x9a>
    107c:	8f ef       	ldi	r24, 0xFF	; 255
    107e:	9f ef       	ldi	r25, 0xFF	; 255
    1080:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    1084:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    1088:	42 c0       	rjmp	.+132    	; 0x110e <xTaskIncrementTick+0x11e>
    108a:	e0 91 c5 07 	lds	r30, 0x07C5	; 0x8007c5 <pxDelayedTaskList>
    108e:	f0 91 c6 07 	lds	r31, 0x07C6	; 0x8007c6 <pxDelayedTaskList+0x1>
    1092:	05 80       	ldd	r0, Z+5	; 0x05
    1094:	f6 81       	ldd	r31, Z+6	; 0x06
    1096:	e0 2d       	mov	r30, r0
    1098:	c6 81       	ldd	r28, Z+6	; 0x06
    109a:	d7 81       	ldd	r29, Z+7	; 0x07
    109c:	8a 81       	ldd	r24, Y+2	; 0x02
    109e:	9b 81       	ldd	r25, Y+3	; 0x03
    10a0:	e8 16       	cp	r14, r24
    10a2:	f9 06       	cpc	r15, r25
    10a4:	28 f4       	brcc	.+10     	; 0x10b0 <xTaskIncrementTick+0xc0>
    10a6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    10aa:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    10ae:	2f c0       	rjmp	.+94     	; 0x110e <xTaskIncrementTick+0x11e>
    10b0:	8e 01       	movw	r16, r28
    10b2:	0e 5f       	subi	r16, 0xFE	; 254
    10b4:	1f 4f       	sbci	r17, 0xFF	; 255
    10b6:	c8 01       	movw	r24, r16
    10b8:	0e 94 3b 01 	call	0x276	; 0x276 <uxListRemove>
    10bc:	8c 89       	ldd	r24, Y+20	; 0x14
    10be:	9d 89       	ldd	r25, Y+21	; 0x15
    10c0:	89 2b       	or	r24, r25
    10c2:	21 f0       	breq	.+8      	; 0x10cc <xTaskIncrementTick+0xdc>
    10c4:	ce 01       	movw	r24, r28
    10c6:	0c 96       	adiw	r24, 0x0c	; 12
    10c8:	0e 94 3b 01 	call	0x276	; 0x276 <uxListRemove>
    10cc:	8e 89       	ldd	r24, Y+22	; 0x16
    10ce:	90 91 a3 07 	lds	r25, 0x07A3	; 0x8007a3 <uxTopReadyPriority>
    10d2:	98 17       	cp	r25, r24
    10d4:	10 f4       	brcc	.+4      	; 0x10da <xTaskIncrementTick+0xea>
    10d6:	80 93 a3 07 	sts	0x07A3, r24	; 0x8007a3 <uxTopReadyPriority>
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	9c 01       	movw	r18, r24
    10de:	22 0f       	add	r18, r18
    10e0:	33 1f       	adc	r19, r19
    10e2:	22 0f       	add	r18, r18
    10e4:	33 1f       	adc	r19, r19
    10e6:	22 0f       	add	r18, r18
    10e8:	33 1f       	adc	r19, r19
    10ea:	82 0f       	add	r24, r18
    10ec:	93 1f       	adc	r25, r19
    10ee:	b8 01       	movw	r22, r16
    10f0:	87 52       	subi	r24, 0x27	; 39
    10f2:	98 4f       	sbci	r25, 0xF8	; 248
    10f4:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <vListInsertEnd>
    10f8:	e0 91 fd 07 	lds	r30, 0x07FD	; 0x8007fd <pxCurrentTCB>
    10fc:	f0 91 fe 07 	lds	r31, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
    1100:	9e 89       	ldd	r25, Y+22	; 0x16
    1102:	86 89       	ldd	r24, Z+22	; 0x16
    1104:	98 17       	cp	r25, r24
    1106:	08 f4       	brcc	.+2      	; 0x110a <xTaskIncrementTick+0x11a>
    1108:	b2 cf       	rjmp	.-156    	; 0x106e <xTaskIncrementTick+0x7e>
    110a:	dc 2c       	mov	r13, r12
    110c:	b0 cf       	rjmp	.-160    	; 0x106e <xTaskIncrementTick+0x7e>
    110e:	e0 91 fd 07 	lds	r30, 0x07FD	; 0x8007fd <pxCurrentTCB>
    1112:	f0 91 fe 07 	lds	r31, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
    1116:	86 89       	ldd	r24, Z+22	; 0x16
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	fc 01       	movw	r30, r24
    111c:	ee 0f       	add	r30, r30
    111e:	ff 1f       	adc	r31, r31
    1120:	ee 0f       	add	r30, r30
    1122:	ff 1f       	adc	r31, r31
    1124:	ee 0f       	add	r30, r30
    1126:	ff 1f       	adc	r31, r31
    1128:	8e 0f       	add	r24, r30
    112a:	9f 1f       	adc	r25, r31
    112c:	fc 01       	movw	r30, r24
    112e:	e7 52       	subi	r30, 0x27	; 39
    1130:	f8 4f       	sbci	r31, 0xF8	; 248
    1132:	80 81       	ld	r24, Z
    1134:	82 30       	cpi	r24, 0x02	; 2
    1136:	48 f0       	brcs	.+18     	; 0x114a <xTaskIncrementTick+0x15a>
    1138:	dd 24       	eor	r13, r13
    113a:	d3 94       	inc	r13
    113c:	06 c0       	rjmp	.+12     	; 0x114a <xTaskIncrementTick+0x15a>
    113e:	80 91 a1 07 	lds	r24, 0x07A1	; 0x8007a1 <uxPendedTicks>
    1142:	8f 5f       	subi	r24, 0xFF	; 255
    1144:	80 93 a1 07 	sts	0x07A1, r24	; 0x8007a1 <uxPendedTicks>
    1148:	d1 2c       	mov	r13, r1
    114a:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <xYieldPending>
    114e:	88 23       	and	r24, r24
    1150:	11 f0       	breq	.+4      	; 0x1156 <xTaskIncrementTick+0x166>
    1152:	dd 24       	eor	r13, r13
    1154:	d3 94       	inc	r13
    1156:	8d 2d       	mov	r24, r13
    1158:	df 91       	pop	r29
    115a:	cf 91       	pop	r28
    115c:	1f 91       	pop	r17
    115e:	0f 91       	pop	r16
    1160:	ff 90       	pop	r15
    1162:	ef 90       	pop	r14
    1164:	df 90       	pop	r13
    1166:	cf 90       	pop	r12
    1168:	08 95       	ret

0000116a <xTaskResumeAll>:
    116a:	df 92       	push	r13
    116c:	ef 92       	push	r14
    116e:	ff 92       	push	r15
    1170:	0f 93       	push	r16
    1172:	1f 93       	push	r17
    1174:	cf 93       	push	r28
    1176:	df 93       	push	r29
    1178:	0f b6       	in	r0, 0x3f	; 63
    117a:	f8 94       	cli
    117c:	0f 92       	push	r0
    117e:	80 91 9d 07 	lds	r24, 0x079D	; 0x80079d <uxSchedulerSuspended>
    1182:	81 50       	subi	r24, 0x01	; 1
    1184:	80 93 9d 07 	sts	0x079D, r24	; 0x80079d <uxSchedulerSuspended>
    1188:	80 91 9d 07 	lds	r24, 0x079D	; 0x80079d <uxSchedulerSuspended>
    118c:	81 11       	cpse	r24, r1
    118e:	62 c0       	rjmp	.+196    	; 0x1254 <xTaskResumeAll+0xea>
    1190:	80 91 a6 07 	lds	r24, 0x07A6	; 0x8007a6 <uxCurrentNumberOfTasks>
    1194:	81 11       	cpse	r24, r1
    1196:	33 c0       	rjmp	.+102    	; 0x11fe <xTaskResumeAll+0x94>
    1198:	60 c0       	rjmp	.+192    	; 0x125a <xTaskResumeAll+0xf0>
    119a:	d7 01       	movw	r26, r14
    119c:	15 96       	adiw	r26, 0x05	; 5
    119e:	ed 91       	ld	r30, X+
    11a0:	fc 91       	ld	r31, X
    11a2:	16 97       	sbiw	r26, 0x06	; 6
    11a4:	c6 81       	ldd	r28, Z+6	; 0x06
    11a6:	d7 81       	ldd	r29, Z+7	; 0x07
    11a8:	ce 01       	movw	r24, r28
    11aa:	0c 96       	adiw	r24, 0x0c	; 12
    11ac:	0e 94 3b 01 	call	0x276	; 0x276 <uxListRemove>
    11b0:	8e 01       	movw	r16, r28
    11b2:	0e 5f       	subi	r16, 0xFE	; 254
    11b4:	1f 4f       	sbci	r17, 0xFF	; 255
    11b6:	c8 01       	movw	r24, r16
    11b8:	0e 94 3b 01 	call	0x276	; 0x276 <uxListRemove>
    11bc:	8e 89       	ldd	r24, Y+22	; 0x16
    11be:	90 91 a3 07 	lds	r25, 0x07A3	; 0x8007a3 <uxTopReadyPriority>
    11c2:	98 17       	cp	r25, r24
    11c4:	10 f4       	brcc	.+4      	; 0x11ca <xTaskResumeAll+0x60>
    11c6:	80 93 a3 07 	sts	0x07A3, r24	; 0x8007a3 <uxTopReadyPriority>
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	9c 01       	movw	r18, r24
    11ce:	22 0f       	add	r18, r18
    11d0:	33 1f       	adc	r19, r19
    11d2:	22 0f       	add	r18, r18
    11d4:	33 1f       	adc	r19, r19
    11d6:	22 0f       	add	r18, r18
    11d8:	33 1f       	adc	r19, r19
    11da:	82 0f       	add	r24, r18
    11dc:	93 1f       	adc	r25, r19
    11de:	b8 01       	movw	r22, r16
    11e0:	87 52       	subi	r24, 0x27	; 39
    11e2:	98 4f       	sbci	r25, 0xF8	; 248
    11e4:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <vListInsertEnd>
    11e8:	e0 91 fd 07 	lds	r30, 0x07FD	; 0x8007fd <pxCurrentTCB>
    11ec:	f0 91 fe 07 	lds	r31, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
    11f0:	9e 89       	ldd	r25, Y+22	; 0x16
    11f2:	86 89       	ldd	r24, Z+22	; 0x16
    11f4:	98 17       	cp	r25, r24
    11f6:	58 f0       	brcs	.+22     	; 0x120e <xTaskResumeAll+0xa4>
    11f8:	d0 92 a0 07 	sts	0x07A0, r13	; 0x8007a0 <xYieldPending>
    11fc:	08 c0       	rjmp	.+16     	; 0x120e <xTaskResumeAll+0xa4>
    11fe:	0f 2e       	mov	r0, r31
    1200:	fa eb       	ldi	r31, 0xBA	; 186
    1202:	ef 2e       	mov	r14, r31
    1204:	f7 e0       	ldi	r31, 0x07	; 7
    1206:	ff 2e       	mov	r15, r31
    1208:	f0 2d       	mov	r31, r0
    120a:	dd 24       	eor	r13, r13
    120c:	d3 94       	inc	r13
    120e:	f7 01       	movw	r30, r14
    1210:	80 81       	ld	r24, Z
    1212:	81 11       	cpse	r24, r1
    1214:	c2 cf       	rjmp	.-124    	; 0x119a <xTaskResumeAll+0x30>
    1216:	80 91 a1 07 	lds	r24, 0x07A1	; 0x8007a1 <uxPendedTicks>
    121a:	88 23       	and	r24, r24
    121c:	99 f0       	breq	.+38     	; 0x1244 <xTaskResumeAll+0xda>
    121e:	80 91 a1 07 	lds	r24, 0x07A1	; 0x8007a1 <uxPendedTicks>
    1222:	88 23       	and	r24, r24
    1224:	79 f0       	breq	.+30     	; 0x1244 <xTaskResumeAll+0xda>
    1226:	c1 e0       	ldi	r28, 0x01	; 1
    1228:	0e 94 f8 07 	call	0xff0	; 0xff0 <xTaskIncrementTick>
    122c:	81 11       	cpse	r24, r1
    122e:	c0 93 a0 07 	sts	0x07A0, r28	; 0x8007a0 <xYieldPending>
    1232:	80 91 a1 07 	lds	r24, 0x07A1	; 0x8007a1 <uxPendedTicks>
    1236:	81 50       	subi	r24, 0x01	; 1
    1238:	80 93 a1 07 	sts	0x07A1, r24	; 0x8007a1 <uxPendedTicks>
    123c:	80 91 a1 07 	lds	r24, 0x07A1	; 0x8007a1 <uxPendedTicks>
    1240:	81 11       	cpse	r24, r1
    1242:	f2 cf       	rjmp	.-28     	; 0x1228 <xTaskResumeAll+0xbe>
    1244:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <xYieldPending>
    1248:	81 30       	cpi	r24, 0x01	; 1
    124a:	31 f4       	brne	.+12     	; 0x1258 <xTaskResumeAll+0xee>
    124c:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
    1250:	81 e0       	ldi	r24, 0x01	; 1
    1252:	03 c0       	rjmp	.+6      	; 0x125a <xTaskResumeAll+0xf0>
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	01 c0       	rjmp	.+2      	; 0x125a <xTaskResumeAll+0xf0>
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	0f 90       	pop	r0
    125c:	0f be       	out	0x3f, r0	; 63
    125e:	df 91       	pop	r29
    1260:	cf 91       	pop	r28
    1262:	1f 91       	pop	r17
    1264:	0f 91       	pop	r16
    1266:	ff 90       	pop	r15
    1268:	ef 90       	pop	r14
    126a:	df 90       	pop	r13
    126c:	08 95       	ret

0000126e <vTaskDelayUntil>:
    126e:	0f 93       	push	r16
    1270:	1f 93       	push	r17
    1272:	cf 93       	push	r28
    1274:	df 93       	push	r29
    1276:	8c 01       	movw	r16, r24
    1278:	eb 01       	movw	r28, r22
    127a:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <vTaskSuspendAll>
    127e:	20 91 a4 07 	lds	r18, 0x07A4	; 0x8007a4 <xTickCount>
    1282:	30 91 a5 07 	lds	r19, 0x07A5	; 0x8007a5 <xTickCount+0x1>
    1286:	f8 01       	movw	r30, r16
    1288:	80 81       	ld	r24, Z
    128a:	91 81       	ldd	r25, Z+1	; 0x01
    128c:	c8 0f       	add	r28, r24
    128e:	d9 1f       	adc	r29, r25
    1290:	28 17       	cp	r18, r24
    1292:	39 07       	cpc	r19, r25
    1294:	48 f4       	brcc	.+18     	; 0x12a8 <vTaskDelayUntil+0x3a>
    1296:	c8 17       	cp	r28, r24
    1298:	d9 07       	cpc	r29, r25
    129a:	10 f5       	brcc	.+68     	; 0x12e0 <vTaskDelayUntil+0x72>
    129c:	d1 83       	std	Z+1, r29	; 0x01
    129e:	c0 83       	st	Z, r28
    12a0:	2c 17       	cp	r18, r28
    12a2:	3d 07       	cpc	r19, r29
    12a4:	90 f4       	brcc	.+36     	; 0x12ca <vTaskDelayUntil+0x5c>
    12a6:	07 c0       	rjmp	.+14     	; 0x12b6 <vTaskDelayUntil+0x48>
    12a8:	c8 17       	cp	r28, r24
    12aa:	d9 07       	cpc	r29, r25
    12ac:	a8 f0       	brcs	.+42     	; 0x12d8 <vTaskDelayUntil+0x6a>
    12ae:	2c 17       	cp	r18, r28
    12b0:	3d 07       	cpc	r19, r29
    12b2:	90 f0       	brcs	.+36     	; 0x12d8 <vTaskDelayUntil+0x6a>
    12b4:	15 c0       	rjmp	.+42     	; 0x12e0 <vTaskDelayUntil+0x72>
    12b6:	80 91 fd 07 	lds	r24, 0x07FD	; 0x8007fd <pxCurrentTCB>
    12ba:	90 91 fe 07 	lds	r25, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
    12be:	02 96       	adiw	r24, 0x02	; 2
    12c0:	0e 94 3b 01 	call	0x276	; 0x276 <uxListRemove>
    12c4:	ce 01       	movw	r24, r28
    12c6:	0e 94 75 06 	call	0xcea	; 0xcea <prvAddCurrentTaskToDelayedList>
    12ca:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
    12ce:	81 11       	cpse	r24, r1
    12d0:	0b c0       	rjmp	.+22     	; 0x12e8 <vTaskDelayUntil+0x7a>
    12d2:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
    12d6:	08 c0       	rjmp	.+16     	; 0x12e8 <vTaskDelayUntil+0x7a>
    12d8:	f8 01       	movw	r30, r16
    12da:	d1 83       	std	Z+1, r29	; 0x01
    12dc:	c0 83       	st	Z, r28
    12de:	eb cf       	rjmp	.-42     	; 0x12b6 <vTaskDelayUntil+0x48>
    12e0:	f8 01       	movw	r30, r16
    12e2:	d1 83       	std	Z+1, r29	; 0x01
    12e4:	c0 83       	st	Z, r28
    12e6:	f1 cf       	rjmp	.-30     	; 0x12ca <vTaskDelayUntil+0x5c>
    12e8:	df 91       	pop	r29
    12ea:	cf 91       	pop	r28
    12ec:	1f 91       	pop	r17
    12ee:	0f 91       	pop	r16
    12f0:	08 95       	ret

000012f2 <prvIdleTask>:
    12f2:	01 eb       	ldi	r16, 0xB1	; 177
    12f4:	17 e0       	ldi	r17, 0x07	; 7
    12f6:	0f 2e       	mov	r0, r31
    12f8:	f9 ed       	ldi	r31, 0xD9	; 217
    12fa:	ef 2e       	mov	r14, r31
    12fc:	f7 e0       	ldi	r31, 0x07	; 7
    12fe:	ff 2e       	mov	r15, r31
    1300:	f0 2d       	mov	r31, r0
    1302:	29 c0       	rjmp	.+82     	; 0x1356 <prvIdleTask+0x64>
    1304:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <vTaskSuspendAll>
    1308:	d8 01       	movw	r26, r16
    130a:	cc 91       	ld	r28, X
    130c:	0e 94 b5 08 	call	0x116a	; 0x116a <xTaskResumeAll>
    1310:	cc 23       	and	r28, r28
    1312:	09 f1       	breq	.+66     	; 0x1356 <prvIdleTask+0x64>
    1314:	0f b6       	in	r0, 0x3f	; 63
    1316:	f8 94       	cli
    1318:	0f 92       	push	r0
    131a:	d8 01       	movw	r26, r16
    131c:	15 96       	adiw	r26, 0x05	; 5
    131e:	ed 91       	ld	r30, X+
    1320:	fc 91       	ld	r31, X
    1322:	16 97       	sbiw	r26, 0x06	; 6
    1324:	c6 81       	ldd	r28, Z+6	; 0x06
    1326:	d7 81       	ldd	r29, Z+7	; 0x07
    1328:	ce 01       	movw	r24, r28
    132a:	02 96       	adiw	r24, 0x02	; 2
    132c:	0e 94 3b 01 	call	0x276	; 0x276 <uxListRemove>
    1330:	80 91 a6 07 	lds	r24, 0x07A6	; 0x8007a6 <uxCurrentNumberOfTasks>
    1334:	81 50       	subi	r24, 0x01	; 1
    1336:	80 93 a6 07 	sts	0x07A6, r24	; 0x8007a6 <uxCurrentNumberOfTasks>
    133a:	80 91 b0 07 	lds	r24, 0x07B0	; 0x8007b0 <uxTasksDeleted>
    133e:	81 50       	subi	r24, 0x01	; 1
    1340:	80 93 b0 07 	sts	0x07B0, r24	; 0x8007b0 <uxTasksDeleted>
    1344:	0f 90       	pop	r0
    1346:	0f be       	out	0x3f, r0	; 63
    1348:	8f 89       	ldd	r24, Y+23	; 0x17
    134a:	98 8d       	ldd	r25, Y+24	; 0x18
    134c:	0e 94 63 03 	call	0x6c6	; 0x6c6 <vPortFree>
    1350:	ce 01       	movw	r24, r28
    1352:	0e 94 63 03 	call	0x6c6	; 0x6c6 <vPortFree>
    1356:	80 91 b0 07 	lds	r24, 0x07B0	; 0x8007b0 <uxTasksDeleted>
    135a:	81 11       	cpse	r24, r1
    135c:	d3 cf       	rjmp	.-90     	; 0x1304 <prvIdleTask+0x12>
    135e:	f7 01       	movw	r30, r14
    1360:	80 81       	ld	r24, Z
    1362:	82 30       	cpi	r24, 0x02	; 2
    1364:	c0 f3       	brcs	.-16     	; 0x1356 <prvIdleTask+0x64>
    1366:	0e 94 07 02 	call	0x40e	; 0x40e <vPortYield>
    136a:	f5 cf       	rjmp	.-22     	; 0x1356 <prvIdleTask+0x64>

0000136c <vTaskSwitchContext>:
    136c:	80 91 9d 07 	lds	r24, 0x079D	; 0x80079d <uxSchedulerSuspended>
    1370:	88 23       	and	r24, r24
    1372:	21 f0       	breq	.+8      	; 0x137c <vTaskSwitchContext+0x10>
    1374:	81 e0       	ldi	r24, 0x01	; 1
    1376:	80 93 a0 07 	sts	0x07A0, r24	; 0x8007a0 <xYieldPending>
    137a:	08 95       	ret
    137c:	10 92 a0 07 	sts	0x07A0, r1	; 0x8007a0 <xYieldPending>
    1380:	80 91 a3 07 	lds	r24, 0x07A3	; 0x8007a3 <uxTopReadyPriority>
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	fc 01       	movw	r30, r24
    1388:	ee 0f       	add	r30, r30
    138a:	ff 1f       	adc	r31, r31
    138c:	ee 0f       	add	r30, r30
    138e:	ff 1f       	adc	r31, r31
    1390:	ee 0f       	add	r30, r30
    1392:	ff 1f       	adc	r31, r31
    1394:	8e 0f       	add	r24, r30
    1396:	9f 1f       	adc	r25, r31
    1398:	fc 01       	movw	r30, r24
    139a:	e7 52       	subi	r30, 0x27	; 39
    139c:	f8 4f       	sbci	r31, 0xF8	; 248
    139e:	80 81       	ld	r24, Z
    13a0:	81 11       	cpse	r24, r1
    13a2:	17 c0       	rjmp	.+46     	; 0x13d2 <vTaskSwitchContext+0x66>
    13a4:	80 91 a3 07 	lds	r24, 0x07A3	; 0x8007a3 <uxTopReadyPriority>
    13a8:	81 50       	subi	r24, 0x01	; 1
    13aa:	80 93 a3 07 	sts	0x07A3, r24	; 0x8007a3 <uxTopReadyPriority>
    13ae:	80 91 a3 07 	lds	r24, 0x07A3	; 0x8007a3 <uxTopReadyPriority>
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	fc 01       	movw	r30, r24
    13b6:	ee 0f       	add	r30, r30
    13b8:	ff 1f       	adc	r31, r31
    13ba:	ee 0f       	add	r30, r30
    13bc:	ff 1f       	adc	r31, r31
    13be:	ee 0f       	add	r30, r30
    13c0:	ff 1f       	adc	r31, r31
    13c2:	8e 0f       	add	r24, r30
    13c4:	9f 1f       	adc	r25, r31
    13c6:	fc 01       	movw	r30, r24
    13c8:	e7 52       	subi	r30, 0x27	; 39
    13ca:	f8 4f       	sbci	r31, 0xF8	; 248
    13cc:	80 81       	ld	r24, Z
    13ce:	88 23       	and	r24, r24
    13d0:	49 f3       	breq	.-46     	; 0x13a4 <vTaskSwitchContext+0x38>
    13d2:	80 91 a3 07 	lds	r24, 0x07A3	; 0x8007a3 <uxTopReadyPriority>
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	9c 01       	movw	r18, r24
    13da:	22 0f       	add	r18, r18
    13dc:	33 1f       	adc	r19, r19
    13de:	22 0f       	add	r18, r18
    13e0:	33 1f       	adc	r19, r19
    13e2:	22 0f       	add	r18, r18
    13e4:	33 1f       	adc	r19, r19
    13e6:	28 0f       	add	r18, r24
    13e8:	39 1f       	adc	r19, r25
    13ea:	d9 01       	movw	r26, r18
    13ec:	a7 52       	subi	r26, 0x27	; 39
    13ee:	b8 4f       	sbci	r27, 0xF8	; 248
    13f0:	11 96       	adiw	r26, 0x01	; 1
    13f2:	ed 91       	ld	r30, X+
    13f4:	fc 91       	ld	r31, X
    13f6:	12 97       	sbiw	r26, 0x02	; 2
    13f8:	02 80       	ldd	r0, Z+2	; 0x02
    13fa:	f3 81       	ldd	r31, Z+3	; 0x03
    13fc:	e0 2d       	mov	r30, r0
    13fe:	12 96       	adiw	r26, 0x02	; 2
    1400:	fc 93       	st	X, r31
    1402:	ee 93       	st	-X, r30
    1404:	11 97       	sbiw	r26, 0x01	; 1
    1406:	24 52       	subi	r18, 0x24	; 36
    1408:	38 4f       	sbci	r19, 0xF8	; 248
    140a:	e2 17       	cp	r30, r18
    140c:	f3 07       	cpc	r31, r19
    140e:	29 f4       	brne	.+10     	; 0x141a <vTaskSwitchContext+0xae>
    1410:	22 81       	ldd	r18, Z+2	; 0x02
    1412:	33 81       	ldd	r19, Z+3	; 0x03
    1414:	fd 01       	movw	r30, r26
    1416:	32 83       	std	Z+2, r19	; 0x02
    1418:	21 83       	std	Z+1, r18	; 0x01
    141a:	fc 01       	movw	r30, r24
    141c:	ee 0f       	add	r30, r30
    141e:	ff 1f       	adc	r31, r31
    1420:	ee 0f       	add	r30, r30
    1422:	ff 1f       	adc	r31, r31
    1424:	ee 0f       	add	r30, r30
    1426:	ff 1f       	adc	r31, r31
    1428:	8e 0f       	add	r24, r30
    142a:	9f 1f       	adc	r25, r31
    142c:	fc 01       	movw	r30, r24
    142e:	e7 52       	subi	r30, 0x27	; 39
    1430:	f8 4f       	sbci	r31, 0xF8	; 248
    1432:	01 80       	ldd	r0, Z+1	; 0x01
    1434:	f2 81       	ldd	r31, Z+2	; 0x02
    1436:	e0 2d       	mov	r30, r0
    1438:	86 81       	ldd	r24, Z+6	; 0x06
    143a:	97 81       	ldd	r25, Z+7	; 0x07
    143c:	90 93 fe 07 	sts	0x07FE, r25	; 0x8007fe <pxCurrentTCB+0x1>
    1440:	80 93 fd 07 	sts	0x07FD, r24	; 0x8007fd <pxCurrentTCB>
    1444:	08 95       	ret

00001446 <vTaskPlaceOnEventList>:
    1446:	cf 93       	push	r28
    1448:	df 93       	push	r29
    144a:	eb 01       	movw	r28, r22
    144c:	60 91 fd 07 	lds	r22, 0x07FD	; 0x8007fd <pxCurrentTCB>
    1450:	70 91 fe 07 	lds	r23, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
    1454:	64 5f       	subi	r22, 0xF4	; 244
    1456:	7f 4f       	sbci	r23, 0xFF	; 255
    1458:	0e 94 0a 01 	call	0x214	; 0x214 <vListInsert>
    145c:	80 91 fd 07 	lds	r24, 0x07FD	; 0x8007fd <pxCurrentTCB>
    1460:	90 91 fe 07 	lds	r25, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
    1464:	02 96       	adiw	r24, 0x02	; 2
    1466:	0e 94 3b 01 	call	0x276	; 0x276 <uxListRemove>
    146a:	cf 3f       	cpi	r28, 0xFF	; 255
    146c:	8f ef       	ldi	r24, 0xFF	; 255
    146e:	d8 07       	cpc	r29, r24
    1470:	59 f4       	brne	.+22     	; 0x1488 <vTaskPlaceOnEventList+0x42>
    1472:	60 91 fd 07 	lds	r22, 0x07FD	; 0x8007fd <pxCurrentTCB>
    1476:	70 91 fe 07 	lds	r23, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
    147a:	6e 5f       	subi	r22, 0xFE	; 254
    147c:	7f 4f       	sbci	r23, 0xFF	; 255
    147e:	87 ea       	ldi	r24, 0xA7	; 167
    1480:	97 e0       	ldi	r25, 0x07	; 7
    1482:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <vListInsertEnd>
    1486:	08 c0       	rjmp	.+16     	; 0x1498 <vTaskPlaceOnEventList+0x52>
    1488:	80 91 a4 07 	lds	r24, 0x07A4	; 0x8007a4 <xTickCount>
    148c:	90 91 a5 07 	lds	r25, 0x07A5	; 0x8007a5 <xTickCount+0x1>
    1490:	8c 0f       	add	r24, r28
    1492:	9d 1f       	adc	r25, r29
    1494:	0e 94 75 06 	call	0xcea	; 0xcea <prvAddCurrentTaskToDelayedList>
    1498:	df 91       	pop	r29
    149a:	cf 91       	pop	r28
    149c:	08 95       	ret

0000149e <xTaskRemoveFromEventList>:
    149e:	0f 93       	push	r16
    14a0:	1f 93       	push	r17
    14a2:	cf 93       	push	r28
    14a4:	df 93       	push	r29
    14a6:	dc 01       	movw	r26, r24
    14a8:	15 96       	adiw	r26, 0x05	; 5
    14aa:	ed 91       	ld	r30, X+
    14ac:	fc 91       	ld	r31, X
    14ae:	16 97       	sbiw	r26, 0x06	; 6
    14b0:	c6 81       	ldd	r28, Z+6	; 0x06
    14b2:	d7 81       	ldd	r29, Z+7	; 0x07
    14b4:	8e 01       	movw	r16, r28
    14b6:	04 5f       	subi	r16, 0xF4	; 244
    14b8:	1f 4f       	sbci	r17, 0xFF	; 255
    14ba:	c8 01       	movw	r24, r16
    14bc:	0e 94 3b 01 	call	0x276	; 0x276 <uxListRemove>
    14c0:	80 91 9d 07 	lds	r24, 0x079D	; 0x80079d <uxSchedulerSuspended>
    14c4:	81 11       	cpse	r24, r1
    14c6:	1c c0       	rjmp	.+56     	; 0x1500 <xTaskRemoveFromEventList+0x62>
    14c8:	0a 50       	subi	r16, 0x0A	; 10
    14ca:	11 09       	sbc	r17, r1
    14cc:	c8 01       	movw	r24, r16
    14ce:	0e 94 3b 01 	call	0x276	; 0x276 <uxListRemove>
    14d2:	8e 89       	ldd	r24, Y+22	; 0x16
    14d4:	90 91 a3 07 	lds	r25, 0x07A3	; 0x8007a3 <uxTopReadyPriority>
    14d8:	98 17       	cp	r25, r24
    14da:	10 f4       	brcc	.+4      	; 0x14e0 <xTaskRemoveFromEventList+0x42>
    14dc:	80 93 a3 07 	sts	0x07A3, r24	; 0x8007a3 <uxTopReadyPriority>
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	9c 01       	movw	r18, r24
    14e4:	22 0f       	add	r18, r18
    14e6:	33 1f       	adc	r19, r19
    14e8:	22 0f       	add	r18, r18
    14ea:	33 1f       	adc	r19, r19
    14ec:	22 0f       	add	r18, r18
    14ee:	33 1f       	adc	r19, r19
    14f0:	82 0f       	add	r24, r18
    14f2:	93 1f       	adc	r25, r19
    14f4:	b8 01       	movw	r22, r16
    14f6:	87 52       	subi	r24, 0x27	; 39
    14f8:	98 4f       	sbci	r25, 0xF8	; 248
    14fa:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <vListInsertEnd>
    14fe:	05 c0       	rjmp	.+10     	; 0x150a <xTaskRemoveFromEventList+0x6c>
    1500:	b8 01       	movw	r22, r16
    1502:	8a eb       	ldi	r24, 0xBA	; 186
    1504:	97 e0       	ldi	r25, 0x07	; 7
    1506:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <vListInsertEnd>
    150a:	e0 91 fd 07 	lds	r30, 0x07FD	; 0x8007fd <pxCurrentTCB>
    150e:	f0 91 fe 07 	lds	r31, 0x07FE	; 0x8007fe <pxCurrentTCB+0x1>
    1512:	9e 89       	ldd	r25, Y+22	; 0x16
    1514:	86 89       	ldd	r24, Z+22	; 0x16
    1516:	89 17       	cp	r24, r25
    1518:	20 f4       	brcc	.+8      	; 0x1522 <xTaskRemoveFromEventList+0x84>
    151a:	81 e0       	ldi	r24, 0x01	; 1
    151c:	80 93 a0 07 	sts	0x07A0, r24	; 0x8007a0 <xYieldPending>
    1520:	01 c0       	rjmp	.+2      	; 0x1524 <xTaskRemoveFromEventList+0x86>
    1522:	80 e0       	ldi	r24, 0x00	; 0
    1524:	df 91       	pop	r29
    1526:	cf 91       	pop	r28
    1528:	1f 91       	pop	r17
    152a:	0f 91       	pop	r16
    152c:	08 95       	ret

0000152e <vTaskSetTimeOutState>:
    152e:	20 91 9f 07 	lds	r18, 0x079F	; 0x80079f <xNumOfOverflows>
    1532:	fc 01       	movw	r30, r24
    1534:	20 83       	st	Z, r18
    1536:	20 91 a4 07 	lds	r18, 0x07A4	; 0x8007a4 <xTickCount>
    153a:	30 91 a5 07 	lds	r19, 0x07A5	; 0x8007a5 <xTickCount+0x1>
    153e:	32 83       	std	Z+2, r19	; 0x02
    1540:	21 83       	std	Z+1, r18	; 0x01
    1542:	08 95       	ret

00001544 <xTaskCheckForTimeOut>:
    1544:	0f b6       	in	r0, 0x3f	; 63
    1546:	f8 94       	cli
    1548:	0f 92       	push	r0
    154a:	40 91 a4 07 	lds	r20, 0x07A4	; 0x8007a4 <xTickCount>
    154e:	50 91 a5 07 	lds	r21, 0x07A5	; 0x8007a5 <xTickCount+0x1>
    1552:	db 01       	movw	r26, r22
    1554:	2d 91       	ld	r18, X+
    1556:	3c 91       	ld	r19, X
    1558:	2f 3f       	cpi	r18, 0xFF	; 255
    155a:	bf ef       	ldi	r27, 0xFF	; 255
    155c:	3b 07       	cpc	r19, r27
    155e:	19 f1       	breq	.+70     	; 0x15a6 <xTaskCheckForTimeOut+0x62>
    1560:	e0 91 9f 07 	lds	r30, 0x079F	; 0x80079f <xNumOfOverflows>
    1564:	dc 01       	movw	r26, r24
    1566:	fc 91       	ld	r31, X
    1568:	fe 17       	cp	r31, r30
    156a:	39 f0       	breq	.+14     	; 0x157a <xTaskCheckForTimeOut+0x36>
    156c:	11 96       	adiw	r26, 0x01	; 1
    156e:	ed 91       	ld	r30, X+
    1570:	fc 91       	ld	r31, X
    1572:	12 97       	sbiw	r26, 0x02	; 2
    1574:	4e 17       	cp	r20, r30
    1576:	5f 07       	cpc	r21, r31
    1578:	c0 f4       	brcc	.+48     	; 0x15aa <xTaskCheckForTimeOut+0x66>
    157a:	dc 01       	movw	r26, r24
    157c:	11 96       	adiw	r26, 0x01	; 1
    157e:	ed 91       	ld	r30, X+
    1580:	fc 91       	ld	r31, X
    1582:	12 97       	sbiw	r26, 0x02	; 2
    1584:	da 01       	movw	r26, r20
    1586:	ae 1b       	sub	r26, r30
    1588:	bf 0b       	sbc	r27, r31
    158a:	a2 17       	cp	r26, r18
    158c:	b3 07       	cpc	r27, r19
    158e:	78 f4       	brcc	.+30     	; 0x15ae <xTaskCheckForTimeOut+0x6a>
    1590:	db 01       	movw	r26, r22
    1592:	e4 1b       	sub	r30, r20
    1594:	f5 0b       	sbc	r31, r21
    1596:	2e 0f       	add	r18, r30
    1598:	3f 1f       	adc	r19, r31
    159a:	2d 93       	st	X+, r18
    159c:	3c 93       	st	X, r19
    159e:	0e 94 97 0a 	call	0x152e	; 0x152e <vTaskSetTimeOutState>
    15a2:	80 e0       	ldi	r24, 0x00	; 0
    15a4:	05 c0       	rjmp	.+10     	; 0x15b0 <xTaskCheckForTimeOut+0x6c>
    15a6:	80 e0       	ldi	r24, 0x00	; 0
    15a8:	03 c0       	rjmp	.+6      	; 0x15b0 <xTaskCheckForTimeOut+0x6c>
    15aa:	81 e0       	ldi	r24, 0x01	; 1
    15ac:	01 c0       	rjmp	.+2      	; 0x15b0 <xTaskCheckForTimeOut+0x6c>
    15ae:	81 e0       	ldi	r24, 0x01	; 1
    15b0:	0f 90       	pop	r0
    15b2:	0f be       	out	0x3f, r0	; 63
    15b4:	08 95       	ret

000015b6 <vTaskMissedYield>:
    15b6:	81 e0       	ldi	r24, 0x01	; 1
    15b8:	80 93 a0 07 	sts	0x07A0, r24	; 0x8007a0 <xYieldPending>
    15bc:	08 95       	ret

000015be <__vector_1>:
    15be:	1f 92       	push	r1
    15c0:	0f 92       	push	r0
    15c2:	0f b6       	in	r0, 0x3f	; 63
    15c4:	0f 92       	push	r0
    15c6:	11 24       	eor	r1, r1
    15c8:	2f 93       	push	r18
    15ca:	3f 93       	push	r19
    15cc:	4f 93       	push	r20
    15ce:	5f 93       	push	r21
    15d0:	6f 93       	push	r22
    15d2:	7f 93       	push	r23
    15d4:	8f 93       	push	r24
    15d6:	9f 93       	push	r25
    15d8:	af 93       	push	r26
    15da:	bf 93       	push	r27
    15dc:	ef 93       	push	r30
    15de:	ff 93       	push	r31
    15e0:	80 91 ff 07 	lds	r24, 0x07FF	; 0x8007ff <intFunc>
    15e4:	90 91 00 08 	lds	r25, 0x0800	; 0x800800 <intFunc+0x1>
    15e8:	89 2b       	or	r24, r25
    15ea:	29 f0       	breq	.+10     	; 0x15f6 <__vector_1+0x38>
    15ec:	e0 91 ff 07 	lds	r30, 0x07FF	; 0x8007ff <intFunc>
    15f0:	f0 91 00 08 	lds	r31, 0x0800	; 0x800800 <intFunc+0x1>
    15f4:	09 95       	icall
    15f6:	ff 91       	pop	r31
    15f8:	ef 91       	pop	r30
    15fa:	bf 91       	pop	r27
    15fc:	af 91       	pop	r26
    15fe:	9f 91       	pop	r25
    1600:	8f 91       	pop	r24
    1602:	7f 91       	pop	r23
    1604:	6f 91       	pop	r22
    1606:	5f 91       	pop	r21
    1608:	4f 91       	pop	r20
    160a:	3f 91       	pop	r19
    160c:	2f 91       	pop	r18
    160e:	0f 90       	pop	r0
    1610:	0f be       	out	0x3f, r0	; 63
    1612:	0f 90       	pop	r0
    1614:	1f 90       	pop	r1
    1616:	18 95       	reti

00001618 <__vector_2>:
    1618:	1f 92       	push	r1
    161a:	0f 92       	push	r0
    161c:	0f b6       	in	r0, 0x3f	; 63
    161e:	0f 92       	push	r0
    1620:	11 24       	eor	r1, r1
    1622:	2f 93       	push	r18
    1624:	3f 93       	push	r19
    1626:	4f 93       	push	r20
    1628:	5f 93       	push	r21
    162a:	6f 93       	push	r22
    162c:	7f 93       	push	r23
    162e:	8f 93       	push	r24
    1630:	9f 93       	push	r25
    1632:	af 93       	push	r26
    1634:	bf 93       	push	r27
    1636:	ef 93       	push	r30
    1638:	ff 93       	push	r31
    163a:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <intFunc+0x2>
    163e:	90 91 02 08 	lds	r25, 0x0802	; 0x800802 <intFunc+0x3>
    1642:	89 2b       	or	r24, r25
    1644:	29 f0       	breq	.+10     	; 0x1650 <__vector_2+0x38>
    1646:	e0 91 01 08 	lds	r30, 0x0801	; 0x800801 <intFunc+0x2>
    164a:	f0 91 02 08 	lds	r31, 0x0802	; 0x800802 <intFunc+0x3>
    164e:	09 95       	icall
    1650:	ff 91       	pop	r31
    1652:	ef 91       	pop	r30
    1654:	bf 91       	pop	r27
    1656:	af 91       	pop	r26
    1658:	9f 91       	pop	r25
    165a:	8f 91       	pop	r24
    165c:	7f 91       	pop	r23
    165e:	6f 91       	pop	r22
    1660:	5f 91       	pop	r21
    1662:	4f 91       	pop	r20
    1664:	3f 91       	pop	r19
    1666:	2f 91       	pop	r18
    1668:	0f 90       	pop	r0
    166a:	0f be       	out	0x3f, r0	; 63
    166c:	0f 90       	pop	r0
    166e:	1f 90       	pop	r1
    1670:	18 95       	reti

00001672 <USART_init>:
    1672:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    1676:	87 e6       	ldi	r24, 0x67	; 103
    1678:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    167c:	8c e1       	ldi	r24, 0x1C	; 28
    167e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    1682:	86 e0       	ldi	r24, 0x06	; 6
    1684:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
    1688:	08 95       	ret

0000168a <USART_send>:
    168a:	e0 ec       	ldi	r30, 0xC0	; 192
    168c:	f0 e0       	ldi	r31, 0x00	; 0
    168e:	90 81       	ld	r25, Z
    1690:	95 ff       	sbrs	r25, 5
    1692:	fd cf       	rjmp	.-6      	; 0x168e <USART_send+0x4>
    1694:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    1698:	08 95       	ret

0000169a <USART_sendstr>:
    169a:	cf 93       	push	r28
    169c:	df 93       	push	r29
    169e:	ec 01       	movw	r28, r24
    16a0:	88 81       	ld	r24, Y
    16a2:	88 23       	and	r24, r24
    16a4:	31 f0       	breq	.+12     	; 0x16b2 <USART_sendstr+0x18>
    16a6:	21 96       	adiw	r28, 0x01	; 1
    16a8:	0e 94 45 0b 	call	0x168a	; 0x168a <USART_send>
    16ac:	89 91       	ld	r24, Y+
    16ae:	81 11       	cpse	r24, r1
    16b0:	fb cf       	rjmp	.-10     	; 0x16a8 <USART_sendstr+0xe>
    16b2:	df 91       	pop	r29
    16b4:	cf 91       	pop	r28
    16b6:	08 95       	ret

000016b8 <memcpy>:
    16b8:	fb 01       	movw	r30, r22
    16ba:	dc 01       	movw	r26, r24
    16bc:	02 c0       	rjmp	.+4      	; 0x16c2 <memcpy+0xa>
    16be:	01 90       	ld	r0, Z+
    16c0:	0d 92       	st	X+, r0
    16c2:	41 50       	subi	r20, 0x01	; 1
    16c4:	50 40       	sbci	r21, 0x00	; 0
    16c6:	d8 f7       	brcc	.-10     	; 0x16be <memcpy+0x6>
    16c8:	08 95       	ret

000016ca <_exit>:
    16ca:	f8 94       	cli

000016cc <__stop_program>:
    16cc:	ff cf       	rjmp	.-2      	; 0x16cc <__stop_program>
